{"version":3,"file":"index.js","sources":["../thirdpart/eblock/utilities.js","../thirdpart/eblock/index.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/classExtractFieldDescriptor.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js","../node_modules/@babel/runtime/helpers/esm/classApplyDescriptorGet.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js","../node_modules/@babel/runtime/helpers/esm/classApplyDescriptorSet.js","../src/mindmapError.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/regenerator/index.js","../thirdpart/toolkits/src/assert.js","../thirdpart/toolkits/src/cloneObject.js","../thirdpart/toolkits/src/readonly.js","../src/topicExtension.js","../src/mindmapEnv.js","../src/mindmapContainer.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../src/topic.js","../src/miscUtilities.js","../src/topicFactor.js","../src/mindmapDocument.js","../src/mindmapViewer.js","../src/defaultTopicExtensions/index.js","../src/defaultTopicExtensions/topicPriority.js","../src/defaultTopicExtensions/topicTaskMarker.js","../src/defaultTopicExtensions/topicHRef.js","../src/defaultTopicExtensions/topicLabels.js","../src/defaultTopicExtensions/topicNotes.js","../src/mindmapAddinPanel.js","../thirdpart/toolkits/src/fileDlgKit.js","../src/defaultExportActions/defaultTopicHRefAction.js","../src/defaultExportActions/defaultTopicImageActions.js","../src/defaultExportActions/defaultTopicLabelsAction.js","../src/defaultExportActions/defaultTopicNotesAction.js","../src/defaultExportActions/defaultTopicPriorityAction.js","../src/defaultExportActions/defaultTopicTaskMarkerAction.js","../src/defaultExportActions/defaultTopicTitleActions.js","../src/defaultExportActions/index.js"],"sourcesContent":["export const generateID = (\r\n                            (typeof crypto.randomUUID === \"function\") \r\n                                ? crypto.randomUUID.bind(crypto) \r\n                                : function () { return crypto.getRandomValues(new Uint8Array(10)).join(\"-\"); }\r\n                          );","import * as utilities from \"./utilities\";\r\n\r\n/**\r\n * @module eblock\r\n */\r\n\r\n/**\r\n * Generate a randmon ID\r\n * @static\r\n * @function\r\n * @returns {String} The new ID\r\n */\r\nexport const generateID = utilities.generateID;\r\n\r\n/**\r\n * Check if the condition is true, otherwise throw an error\r\n * @param {*} _cond The condition\r\n * @param {*} _error The error or the genenrator of the error\r\n * @param  {...any} _args The arguments passed to the generator of the error\r\n * @returns {*} The condition\r\n * @private\r\n */\r\nfunction assert(_cond, _error, ..._args) {\r\n    if (_cond) {\r\n        return _cond;\r\n    } else {\r\n        throw typeof _error === \"function\" ? _error.apply(undefined, _args): _error;\r\n    }\r\n}\r\n\r\nconst DomEventHandler = Symbol(\"EBlockContainer.DomEventHandler\");\r\nconst DomEventDispatcher = Symbol(\"EBlockContainer.DomEventProc\");\r\n\r\n/**\r\n * Class of the container for the eblock instances\r\n */\r\nexport class EBlockContainer {\r\n\r\n    /**\r\n     * The symbole of the member as the dispatcher of the event\r\n     */\r\n    static DomEventDispatcher = DomEventDispatcher;\r\n    \r\n    /**\r\n     * Create the instance of the EBlockContainer\r\n     * @constructor\r\n     */\r\n    constructor () {\r\n        Object.defineProperty(this, DomEventHandler, {\r\n            value: this[DomEventDispatcher].bind(this),\r\n            writable: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Define a node in this container\r\n     * @abstract\r\n     * @param {Node} _node The node to be defined\r\n     */\r\n    define(_node) {\r\n        throw new Error(\"No implementation\");\r\n    }\r\n\r\n    /**\r\n     * Remove some defined nodes from this container\r\n     * @abstract\r\n     * @param {String} _selector The selector for querying the destination nodes\r\n     */\r\n    undefine(_selector) {\r\n        throw new Error(\"No implementation\");\r\n    }\r\n\r\n    /**\r\n     * The node in this container to contain the eblock instance\r\n     * @type {Node}\r\n     * @abstract\r\n     */\r\n    get stageContainer() {\r\n        throw new Error(\"No implementation\");\r\n    }\r\n\r\n    /**\r\n     * The node in this container to receive the event\r\n     * @type {Node}\r\n     * @abstarct\r\n     */\r\n    get eventContainer() {\r\n        throw new Error(\"No implementation\");\r\n    }\r\n    \r\n    /**\r\n     * Enable processing the special event in the container\r\n     * @param {String} _eventName The name of the event, such as \"keydown\", \"mousedown\", and so on.\r\n     * @returns {EBlockContainer} This container\r\n     */\r\n    enableDomEvent(_eventName) {\r\n        this.eventContainer.addEventListener(_eventName, this[DomEventHandler]);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Disbale processing the sepcial event in the container\r\n     * @param {String} _eventName The name of the event, such as \"keydown\", \"mousedown\", and so on.\r\n     * @returns {EBlockContainer} This container\r\n     */\r\n    disableDomEvent(_eventName) {\r\n        this.eventContainer.removeEventListener(_eventName, this[DomEventHandler]);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add an event listener in the container\r\n     * @param  {...any} _args The arguments as the same as for Event.addEventListener\r\n     * @returns {EBlockContainer} This container\r\n     */\r\n    addEventListener(..._args) {\r\n        this.eventContainer.addEventListener(..._args);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove an event listener in the container\r\n     * @param  {...any} _args The arguments as the same as fro Event.removeEventListener\r\n     * @returns {EBlockContainer} This container\r\n     */\r\n    removeEventListener(..._args) {\r\n        this.eventContainer.addEventListener(..._args);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * The dispatcher of the event\r\n     * @abstract\r\n     * @param {Event} _event The event should be dispatch\r\n     */\r\n    [DomEventDispatcher](_event) { \r\n        throw new Error(\"No implementation\");\r\n    }\r\n}\r\n\r\n/**\r\n * Class of the factor for generating the instance of the eblock\r\n * @property {String} id The ID of the factor\r\n * @property {Node} source The global template node of the fatcor\r\n * @property {NodeList} predefineds The list of node containing the predefined node\r\n * @property {Object} scripts The object containing the export functions and data\r\n * @property {Node} templateNode The node of the template\r\n */\r\nexport class EBlockFactor {\r\n\r\n    /**\r\n     * Map for the registry of the factor in each container\r\n     * @static\r\n     * @type {WeakMap}\r\n     */\r\n    static RegistryMap = new WeakMap();\r\n\r\n    /**\r\n     * Get the registry of the special container\r\n     * @static\r\n     * @param {EBlockContainer} _container The special container\r\n     * @returns {WeakSet} The registry of the special container\r\n     */\r\n    static AcquireRegistry(_container) {\r\n        assert(_container instanceof EBlockContainer, Error, \"The _container must be an instance of EBlockContainer\");\r\n\r\n        let registry = EBlockFactor.RegistryMap.get(_container);\r\n        if (!(registry instanceof WeakSet)) {\r\n            registry = new WeakSet();\r\n            EBlockFactor.RegistryMap.set(_container, registry);\r\n        }\r\n\r\n        return registry;\r\n    }\r\n\r\n    /**\r\n     * Peek all predefined node from the global template\r\n     * @static\r\n     * @param {Node} _node The node of the global template\r\n     * @param {*} _stamp The stamp will add to the predefined nodes\r\n     * @returns {NodeList} The list of node containing the predefined nodes\r\n     */\r\n    static peekPredefineds(_node, _stamp) {\r\n        const predefineds = [..._node.querySelectorAll(\"[eblock-predefined]\")];\r\n        _stamp || (_stamp = \"\");\r\n        predefineds.forEach(item => item.setAttribute(\"eblock-predefined\", _stamp));\r\n        return predefineds;\r\n    }\r\n\r\n    /**\r\n     * Peek scripts block from the global temple\r\n     * @static\r\n     * @param {Node} _node The node of the global template\r\n     * @returns {Object} The object containing export functions and data\r\n     */\r\n    static peekScripts(_node) {\r\n        let scripts = {};\r\n        [..._node.querySelectorAll(\"[eblock-script]\")].forEach(scriptNode => {\r\n            let fnFactor = new Function(\"declarer\", `${scriptNode.textContent};return declarer;`);\r\n            try {\r\n                scripts = fnFactor(scripts);\r\n            } catch (err) {\r\n                console.error(\"Exception raised when generating the script\", scriptNode, err);\r\n            }\r\n        });\r\n\r\n        return scripts;\r\n    }\r\n\r\n    /**\r\n     * Peek the template node form the global template\r\n     * @static\r\n     * @param {Node} _node The node of the global template\r\n     * @returns {Node} The template node\r\n     */\r\n    static peekTemplateNode(_node) {\r\n        let template = _node.querySelector(\"[eblock-template]\");\r\n        return template;\r\n    }\r\n\r\n    /**\r\n     * Create an instance of the EBlockFactor\r\n     * @constructor\r\n     * @param {Node} _node The node of the global template\r\n     */\r\n    constructor (_node) {\r\n        assert(_node && (typeof _node.querySelectorAll === \"function\"), Error, \"The _node must be an instance can invoke querySelector\");\r\n\r\n        const id = generateID();\r\n\r\n        Object.defineProperties(this, {\r\n            id: { writable: false, value: id },\r\n            source: { writable: false, value: _node },\r\n            predefineds: { writable: false, value: EBlockFactor.peekPredefineds(_node, id) },\r\n            scripts: { writable: false, value: EBlockFactor.peekScripts(_node) },\r\n            templateNode: { writable: false, value: EBlockFactor.peekTemplateNode(_node) }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Register this factor into a special container\r\n     * @param {EBlockContainer} _container The target container\r\n     * @returns {EBlockFactor} This factor\r\n     */\r\n    register(_container) {\r\n        const registry = EBlockFactor.AcquireRegistry(_container);\r\n\r\n        if (!registry.has(this)) {\r\n            this.predefineds.forEach(item => _container.define(item.cloneNode(true)));\r\n\r\n            (typeof this.onFactorRegister === \"function\") && this.onFactorRegister(_container);\r\n            this.callScript(\"onFactorRegister\", this, _container);\r\n\r\n            registry.add(this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Unregister this factor into a special container\r\n     * @param {EBlockContainer} _container The target container\r\n     * @returns {EBlockFactor} This factor\r\n     */\r\n    unregister(_container) {\r\n        const registry = EBlockFactor.AcquireRegistry(_container);\r\n\r\n        if (registry.has(this)) {\r\n            (typeof this.onFactorUnregister === \"function\") && this.onFactorUnregister(_container);\r\n            this.callScript(\"onFactorUnregister\", this, _container);\r\n\r\n            _container.undefine(`[eblock-predefined=\"${this.id}\"]`);\r\n\r\n            registry.delete(this);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Generate an instance of EBlock base on this factor\r\n     * @param {Node} _containerNode The node to contain the new instance of EBlock\r\n     * @param {Class} _blockClass The class derived from EBlock\r\n     * @param {Any} _data The data bind to the new instance of EBlock\r\n     * @param  {...any} _opts The external arguments passed to the constructor of the _blockClass\r\n     * @returns {EBlock} The new instance of EBlock\r\n     */\r\n    generate(_containerNode, _blockClass, _data, ..._opts) {\r\n        assert((typeof _blockClass === \"function\") && (_blockClass.prototype instanceof EBlock), Error, \"The _blockClass must be inherited from EBlock\");\r\n        assert(_containerNode instanceof Node, Error, \"The _containerNode must be an instance of Node\");\r\n\r\n        let eblock = new _blockClass(this, _data, ..._opts);\r\n        _containerNode && eblock.mount(_containerNode);\r\n\r\n        return eblock;\r\n    }\r\n\r\n    /**\r\n     * Clone the template node\r\n     * @returns {Node} The new node\r\n     */\r\n    generateFromTemplate() {\r\n        return this.templateNode && this.templateNode.cloneNode(true);\r\n    }\r\n\r\n    /**\r\n     * Query the special nodes from the template\r\n     * @param {String} _selector The selector to match the special nodes\r\n     * @returns {NodeList} The list of the special nodes\r\n     */\r\n    queryNodeFromTemplate(_selector) {\r\n        return this.templateNode && _selector && this.templateNode.querySelector(_selector);\r\n    }\r\n\r\n    /**\r\n     * Call a special function declared in this factor\r\n     * @param {String|Symbol} _name The name of the special function\r\n     * @param {Object} _this The \"this\" value binding to the special function\r\n     * @param  {...any} _args The arguments passed to the special function\r\n     * @returns {Any} The result from the special function\r\n     */\r\n    callScript(_name, _this, ..._args) {\r\n        return this.applyScript(_name, _this, _args);\r\n    }\r\n\r\n    /**\r\n     * Call a special function declared in this factor\r\n     * @param {String|Symbol} _name The name of the special function\r\n     * @param {Object} _this The \"this\" value binding to the special function\r\n     * @param  {Array} _args The arguments passed to the special function\r\n     * @returns {Any} The result from the special function\r\n     */\r\n    applyScript(_name, _this, _args) {\r\n        const fn = this.scripts[_name];\r\n        return (typeof fn === \"function\") && fn.apply(_this, _args);\r\n    }\r\n}\r\n\r\nconst BLOCK_ID = Symbol(\"eblock.block.id\");\r\nconst CONSTRUCTOR_REF = Symbol(\"eblock.constructor.ref\");\r\nconst FACTOR_REF = Symbol(\"eblock.factor.ref\");\r\nconst DATA_REF = Symbol(\"eblock.data.ref\");\r\n\r\nconst MetadataMap = new WeakMap();\r\n\r\nfunction eblockGetMappedData() {\r\n    return this.source[this.key];\r\n}\r\n\r\nfunction eblockSetMappedData(_val) {\r\n    this.source[this.key] = _val;\r\n}\r\n\r\n/**\r\n * Class of the EBlock\r\n * @property {Node} $assignedNode The node assigned with this instance of EBlock\r\n * @property {Any} data The data binded to this instance of EBlock\r\n * @property {EBlockFactor} factor The factor\r\n * @property {String} blockID The ID of the block\r\n * @property {Boolean} $stubFlag The flag to indicate if the instance is a stub.\r\n */\r\nexport class EBlock {\r\n\r\n    /**\r\n     * Get the instance of EBlock assigned with the special node\r\n     * @static\r\n     * @param {Node} _node The special node\r\n     * @returns {EBlock} The instance of EBlock assigned with the special node\r\n     */\r\n    static GetInstance(_node) {\r\n        if (_node instanceof Node) {\r\n            try {\r\n                let metadata = MetadataMap.get(_node);\r\n                return metadata && (new metadata[CONSTRUCTOR_REF](_node, undefined));\r\n            } catch {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if two instance of EBlock is assigned with the same node\r\n     * @param {EBlock} _block1 The first node\r\n     * @param {EBlock} _block2 The second node\r\n     * @returns {Boolean} return true if the two instance is assigned with the same node\r\n     */\r\n    static equal(_block1, _block2) {\r\n        if (_block1 instanceof EBlock) {\r\n            return _block1.equal(_block2);\r\n        } else {\r\n            return _block1 === undefined && _block2 === undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create or query an instance of EBlock\r\n     * @constructor\r\n     * @param {Node|EBlockFactor} _factorOrNode The factor or the node had been assigned with an instance of EBlock\r\n     * @param {Any} _data The data binding to the instance. This argument is ignored if the _factorOrNode isn't a fatcor.\r\n     * @param  {...any} _args The arguments passed to initialize the metadate of the instance. This arguments is ignored if the _factorOrNode isn't a fatcor.\r\n     */\r\n    constructor (_factorOrNode, _data, ..._args) {\r\n        let isCreate = false;\r\n        let metadata;\r\n        let targetNode;\r\n        if (_factorOrNode instanceof Node) {\r\n            targetNode = _factorOrNode;\r\n            metadata = MetadataMap.get(targetNode);\r\n            assert(metadata, Error, \"The node is not assigned with the avaliable metadata\");\r\n            assert(metadata[CONSTRUCTOR_REF] === this.constructor, Error, \"The node is not matched the special class derived from EBlock\");\r\n        } else {\r\n            assert(_factorOrNode instanceof EBlockFactor, Error, \"_factorOrNode must be an instance of EBlockFactor or Node\");\r\n            targetNode = _factorOrNode.generateFromTemplate();\r\n            assert(targetNode instanceof Node, Error, \"Cannot clone the node from the template\");\r\n            metadata = { \r\n                [BLOCK_ID]: generateID(),\r\n                [CONSTRUCTOR_REF]: this.constructor, \r\n                [FACTOR_REF]: _factorOrNode,\r\n                [DATA_REF]: _data,\r\n                queuePromise: null \r\n            };\r\n            _factorOrNode.callScript(\"onInitMetadata\", _factorOrNode, metadata, _data, targetNode, ..._args );\r\n            this.initMetadata(metadata, _data, targetNode, ..._args);\r\n            MetadataMap.set(targetNode, metadata);\r\n            isCreate = true;\r\n        }\r\n\r\n        const metaDataDescs = Object.getOwnPropertyDescriptors(metadata);\r\n        const mapDataDescs = { \r\n            $assignedNode: {\r\n                value: targetNode,\r\n                writable: false,\r\n                configurable: false,\r\n                enumerable: true\r\n            },\r\n            data: { \r\n                value: metadata[DATA_REF],\r\n                writable: false,\r\n                configurable: false,\r\n                enumerable: true\r\n            },\r\n            factor: {\r\n                value: metadata[FACTOR_REF],\r\n                writable: false,\r\n                configurable: false,\r\n                enumerable: true\r\n            },\r\n            blockID: {\r\n                value: metadata[BLOCK_ID],\r\n                writable: false,\r\n                configurable: false,\r\n                enumerable: true\r\n            },\r\n            $stubFlag: {\r\n                value: !isCreate,\r\n                writable: false,\r\n                configurable: false,\r\n                enumerable: true\r\n            }\r\n        };\r\n        for (let key in metaDataDescs) {\r\n            if (typeof key !== \"symbol\") {\r\n                let desc = metaDataDescs[key];\r\n                if (desc.get || desc.set) {\r\n                    mapDataDescs[\"$\" + key] = desc;\r\n                } else {\r\n                    let bindSource = { source:metadata, key };\r\n                    mapDataDescs[\"$\" + key] = {\r\n                        get: eblockGetMappedData.bind(bindSource),\r\n                        set: desc.writable ? eblockSetMappedData.bind(bindSource) : undefined,\r\n                        configurable: false,\r\n                        enumerable: desc.enumerable\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        for (let key of Object.getOwnPropertySymbols(metadata)) {\r\n            if (!(key in mapDataDescs)) {\r\n                let bindSource = { source:metadata, key };\r\n                mapDataDescs[key] = {\r\n                    get: eblockGetMappedData.bind(bindSource),\r\n                    set: eblockSetMappedData.bind(bindSource),\r\n                    configurable: false,\r\n                    enumerable: false\r\n                };\r\n            }\r\n        }\r\n\r\n        Object.defineProperties(this, mapDataDescs);\r\n\r\n        isCreate && this.queueAction(() => this.fireEvent(\"ebevent-create\", _data));\r\n    }\r\n\r\n    /**\r\n     * Initialize the metadata of the instance\r\n     * @abstract\r\n     * @param {Object} _metadata The container of the metadata\r\n     * @param {Any} _data The data binded to this instance\r\n     * @param {Node} _node The node assigned with this instance\r\n     * @param  {...any} _args The external arguments\r\n     */\r\n    initMetadata(_metadata, _data, _node, ..._args) {\r\n        \r\n    }\r\n\r\n    /**\r\n     * Acquire a special node.\r\n     * An new node will be created if it isn't contained in the instance.\r\n     * @param {String} _selector The selector to match the node\r\n     * @param {Node} _refNode The reference node for locating the special node\r\n     * @param {String} _refPosition The relative position of the special node\r\n     * @returns {Node} The special node\r\n     */\r\n    acquireNode(_selector, _refNode, _refPosition) {\r\n        if (_selector) {\r\n            let node = this.$assignedNode.querySelector(_selector);\r\n            if (!node && _refNode) {\r\n                node = this.factor.queryNodeFromTemplate(_selector);\r\n                node && (node = node.cloneNode(true));\r\n                node && _refNode.insertAdjacentElement(_refPosition || \"afterend\", node);\r\n            } else if (_refNode) {\r\n                _refNode.insertAdjacentElement(_refPosition || \"afterend\", node);\r\n            }\r\n            return node;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Compare this instance to an other one\r\n     * @param {EBlock} _eblock The other instance\r\n     * @returns {Boolean} return true if the other one is assigned with the same node of this instance\r\n     */\r\n    equal(_eblock) {\r\n        return (_eblock instanceof EBlock) && (this.$assignedNode === _eblock.$assignedNode);\r\n    }\r\n\r\n    /**\r\n     * Start an action in the processing queue of this instance\r\n     * @param {Function} _fn The action\r\n     * @returns {EBlock} This instance\r\n     */\r\n    queueAction(_fn) {\r\n        if (typeof _fn === \"function\") {\r\n            if (this.$queuePromise instanceof Promise) {\r\n                this.$queuePromise = this.$queuePromise.then(() => {\r\n                    try { \r\n                        return _fn();\r\n                    } catch(err) {\r\n                        console.warn(`Exception raised in processing action in queue[#${this.blockID}]`, err);\r\n                    }\r\n                });\r\n            } else {\r\n                this.$queuePromise = Promise.resolve(undefined).then(() => {\r\n                    try { \r\n                        return _fn();\r\n                    } catch(err) {\r\n                        console.warn(`Exception raised in processing action in queue[#${this.blockID}]`, err);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Dispath an event to this instance and its decendante nodes\r\n     * @param {String} _event The name of the event\r\n     * @param  {...any} _args The detail parameters of the event\r\n     * @returns {EBlock} This instance\r\n     */\r\n    fireEvent(_event, ..._args) {\r\n        try {\r\n            const factor = this.factor;\r\n            [...this.$assignedNode.querySelectorAll(`${this.eventSelectorPrefix || \"\"}[${_event}]`)].reverse().forEach(subItem => {\r\n                let fnName = subItem.getAttribute(_event);\r\n                fnName && factor.applyScript(fnName, this, [..._args, subItem]);\r\n            });\r\n\r\n            let fnName = this.$assignedNode.getAttribute(_event);\r\n            fnName && factor.applyScript(fnName, this, [..._args, this.$assignedNode]);\r\n\r\n            let localFn = this[`on-${_event}`];\r\n            (typeof localFn === \"function\") && localFn.apply(this, _args);\r\n        } catch (err) {\r\n            console.warn(`Exception raised in fireEvent(${_event})[#${this.blockID}]`, err);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Mount this instance to a parent node\r\n     * @param {Node} _containerNode The parent node\r\n     * @returns {EBlock} This instance\r\n     */\r\n    mount(_containerNode) {\r\n        if (_containerNode instanceof Node) {\r\n            this.fireEvent(\"ebevent-mounting\", this.data);\r\n            _containerNode.appendChild(this.$assignedNode);\r\n            this.fireEvent(\"ebevent-mounted\", this.data);\r\n        } else {\r\n            console.warn(\"The _containerNode must be an instance of Node\");\r\n        }\r\n        \r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Unmount this instance\r\n     * @returns {EBlock} This instance\r\n     */\r\n    unmount() {\r\n        this.fireEvent(\"ebevent-unmounting\", this.data);\r\n        this.$assignedNode.remove();\r\n        return this.fireEvent(\"ebevent-unmounted\", this.data);\r\n    }\r\n\r\n    /**\r\n     * Render this instance\r\n     * @param  {...any} _args The arguments passed as the external parameters to the rendering event\r\n     * @returns {EBlock} This instance\r\n     */\r\n    render(..._args) {\r\n        let context = {};\r\n        return this.fireEvent(\"ebevent-prepare-render\", this.data, context, ..._args)\r\n                   .fireEvent(\"ebevent-rendering\", this.data, context, ..._args)\r\n                   .fireEvent(\"ebevent-rendered\", this.data, context, ..._args);\r\n    }\r\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}","import classApplyDescriptorGet from \"./classApplyDescriptorGet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n\n  return descriptor.value;\n}","import classApplyDescriptorSet from \"./classApplyDescriptorSet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n\n    descriptor.value = value;\n  }\n}","/**\r\n * @author season <season-studio@outlook.com>\r\n * @license Apache-2.0\r\n */\r\n\r\n/**\r\n * @classdesc Basic class of error from mindmap\r\n * @class\r\n * @constructor\r\n * @param {Number} _code the code of the error\r\n * @param {String} _msg the message of the error\r\n * @param {*} _detail the external data of the error\r\n * @param  {...any} _args any other arguments passed to the basic constructor of Error\r\n */\r\nexport function MindmapError(_code, _msg, _detail, ..._args) {\r\n    if (this instanceof MindmapError) {\r\n        let instance = Reflect.construct(Error, [_msg, ..._args]);\r\n        instance.code = _code;\r\n        instance.detail = _detail;\r\n        Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(instance, MindmapError);\r\n        }\r\n        return instance;\r\n    } else {\r\n        return Reflect.construct(MindmapError, ...arguments);\r\n    }\r\n}\r\n  \r\nMindmapError.prototype = Object.create(Error.prototype, {\r\n    constructor: {\r\n      value: Error,\r\n      enumerable: false,\r\n      writable: true,\r\n      configurable: true\r\n    }\r\n});\r\n\r\nif (Object.setPrototypeOf){\r\n    Object.setPrototypeOf(MindmapError, Error);\r\n} else {\r\n    MindmapError.__proto__ = Error;\r\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","module.exports = require(\"regenerator-runtime\");\n","/**\r\n * assert\r\n * @param {*} _cond the condition the be asserted\r\n * @param {*|Function} _error the error will be throw if fail, if take a function as this parameter, the function's result will be throw as an error \r\n * @returns {*} the same as the \"_cond\" parameter\r\n */\r\nexport function assert(_cond, _error) {\r\n    if (_cond) {\r\n        return _cond;\r\n    } else {\r\n        throw typeof _error === \"function\" ? _error.apply(undefined, [...arguments].slice(2)): _error;\r\n    }\r\n}\r\n","export function cloneObject(_target, _source) {\r\n    if (_target && _source) {\r\n        Object.assign(_target, _source);\r\n        for (let key in _target) {\r\n            let item = _target[key];\r\n            if (item && (typeof item === \"object\")) {\r\n                _target[key] = cloneObject((item instanceof Array) ? [] : {}, _source[key]);\r\n            }\r\n        }\r\n    }\r\n    return _target;\r\n}","/**\r\n * define readonly member is an object\r\n * @param {*} _obj the target object instance the member will be defined\r\n * @param {String|Object} _prop the member's key, or an object the member's of which will be copy into the target object\r\n * @param {*} _value if the _prop is String, this parameter means the value of the member\r\n * @param {Boolean} _enumerable if the member is enumerable\r\n * @returns {*} the same of \"_obj\"\r\n */\r\nexport function readonlyMember(_obj, _prop, _value, _enumerable) {\r\n    if (_obj && _prop) {\r\n        if (typeof _prop === \"object\") {\r\n            const enumerable = ((arguments.length > 2) ? _value : true);\r\n            for (let item in _prop) {\r\n                Object.defineProperty(_obj, item, {\r\n                    value: _prop[item], \r\n                    writable: false,\r\n                    enumerable\r\n                });\r\n            }\r\n        } else {\r\n            Object.defineProperty(_obj, _prop, {\r\n                value: _value, \r\n                writable: false,\r\n                enumerable: ((arguments.length > 3) ? _enumerable : true)\r\n            });\r\n        }\r\n    }\r\n    return _obj;\r\n}","/**\r\n * @author season <season-studio@outlook.com>\r\n * @license Apache-2.0\r\n */\r\n\r\nimport { EBlock, EBlockFactor } from \"../thirdpart/eblock\";\r\nimport { MindmapError } from \"./mindmapError\";\r\nimport { assert } from \"../thirdpart/toolkits/src/assert\";\r\nimport { readonlyMember } from \"../thirdpart/toolkits/src/readonly\";\r\n\r\nexport\r\n/**\r\n * Class of the extension of the topic\r\n * @class\r\n * @extends EBlock\r\n */\r\nclass TopicExtension extends EBlock {\r\n\r\n    /**\r\n     * @summary Create the instance of the extension\r\n     * You should create the instance by TopicExtensionFactor.generate instead.\r\n     * @constructor\r\n     * @param {TopicExtensionFactor|Node} _factorOrNode The factor or the node of the exist extension\r\n     * @param {Any} _data The data binded to the extension\r\n     * @param {Topic} _topic The topic the extension belong to \r\n     */\r\n    constructor (_factorOrNode, _data, _topic) {\r\n        super(...arguments);\r\n\r\n    }\r\n\r\n    initMetadata(_metadata, _data, _node, _topic) {\r\n\r\n    }\r\n\r\n    /**\r\n     * The name of the extension\r\n     * @type {String}\r\n     */\r\n    get name() {\r\n        return this.factor.$info.name;\r\n    }\r\n\r\n    /**\r\n     * The topic this extension belong to\r\n     * @type {Topic}\r\n     */\r\n    get topic() {\r\n        let node = this.$assignedNode.parentNode;\r\n        node && (node = node.parentNode);\r\n        node && (node = node.parentNode);\r\n        return node && EBlock.GetInstance(node);\r\n    }\r\n\r\n    /**\r\n     * Call a script function of this extension\r\n     * @param {String} _name The name of the function\r\n     * @param  {...any} _args The arguments passed to the function\r\n     * @returns {Any} The result return by the destination function\r\n     */\r\n    callScript(_name, ..._args) {\r\n        return this.factor.applyScript(_name, this, _args);\r\n    }\r\n\r\n    /**\r\n     * Call a script function of this extension\r\n     * @param {String} _name The name of the function\r\n     * @param  {Array} _args The arguments passed to the function\r\n     * @returns {Any} The result return by the destination function\r\n     */\r\n    applyScript(_name, _this, _args) {\r\n        return this.factor.applyScript(_name, this, _args);\r\n    }\r\n}\r\n\r\nexport\r\n/**\r\n * Class of the factor for extension of the topic\r\n * @class\r\n * @extends EBlockFactor\r\n */\r\nclass TopicExtensionFactor extends EBlockFactor {\r\n\r\n    /**\r\n     * Create an instance of the factor\r\n     * @constructor\r\n     * @param {Node} _node The node of the global template of the extension\r\n     */\r\n    constructor(_node) {\r\n        super(...arguments);\r\n\r\n        const extensionInfo = this.callScript(\"getExtensionInfo\", this);\r\n        assert(extensionInfo && extensionInfo.name, MindmapError, -1, \"The extension do not provide it's information and name by function 'getEntensionInfo'\");\r\n        readonlyMember(this, \"$info\", extensionInfo);\r\n    }\r\n}\r\n","/**\r\n * @author season <season-studio@outlook.com>\r\n * @license Apache-2.0\r\n */\r\n\r\nimport { generateID } from \"../thirdpart/eblock\";\r\nimport { MindmapError } from \"./mindmapError\";\r\nimport { assert } from \"../thirdpart/toolkits/src/assert\";\r\nimport { cloneObject } from \"../thirdpart/toolkits/src/cloneObject\";\r\nimport { TopicExtensionFactor } from \"./topicExtension\";\r\n\r\nexport\r\n/**\r\n * The environment of the mindmap\r\n * @class\r\n */\r\nclass MindmapEnvironment extends EventTarget {\r\n\r\n    /**\r\n     * The default configuration of the mindmap\r\n     * @static\r\n     * @property {Number} padding The padding of the topic\r\n     * @property {Number} secondaryPadding The padding of the extensions in the topic\r\n     * @property {Number} levelMargin The margin between the first kind topic and it's children\r\n     * @property {Number} secondaryLevelMargin The margin between the secondary kind topic and it's children\r\n     * @property {Number} siblingMargin The margin during the children of the first kind topic\r\n     * @property {Number} secondarySiblingMargin The margin during the children of the secondary kind topic\r\n     * @property {Number} secondaryTopicLevel The level to distinguish the secondary kind topic from the first kind topic\r\n     * @property {Number} maxTopicLineWidth The max width of the topic line\r\n     * @property {String} directionPriority Special the primary side to layout the children of the first topic. The avaliable value is \"left\" or \"right\"\r\n     * @property {Number} dragStartFocusFilterTimer The time to wake up the drag-drop action after mousedown in the focus topic\r\n     * @property {Number} dragStartNoFocusFilterTimer The time to wake up the drag-drop action after mousedown in the nofocus topic\r\n     * @property {String} resourceScheme The scheme of the resource\r\n     * @property {String} defaultResourceAttachmentPrefix The default prefix of the name of the attachment\r\n     * @property {String} placeholderImageId The id of the predefined symbol as the placeholder of the image\r\n     * @static\r\n     */\r\n    static DefaultConfig = Object.freeze({\r\n        padding: 10,\r\n        secondaryPadding: 5,\r\n        levelMargin: 26,\r\n        secondaryLevelMargin: 17,\r\n        siblingMargin: 10,\r\n        secondarySiblingMargin: 6,\r\n        secondaryTopicLevel: 2,\r\n        maxTopicLineWidth: 120,\r\n        directionPriority: \"right\",\r\n        dragStartFocusFilterTimer: 50,\r\n        dragStartNoFocusFilterTimer: 100,\r\n        resourceScheme: \"xap\",\r\n        defaultResourceAttachmentPrefix: \"resources/\",\r\n        placeholderImageId: \"season-topic-predefine-image-picture-placeholder\",\r\n        backgroundColor: \"transparent\"\r\n    });\r\n\r\n    #extensionFactors = [];\r\n    #config;\r\n\r\n    /**\r\n     * Create an instance of the enviroment\r\n     * @constructor\r\n     */\r\n    constructor () {\r\n        super();\r\n\r\n        this.#config = Object.freeze(cloneObject({}, MindmapEnvironment.DefaultConfig));\r\n    }\r\n\r\n    /**\r\n     * The working configuration of the mindmap\r\n     * @see {@link #module_MindmapView.MindmapEnvironment+DefaultConfig|DefaultConfig} for more information\r\n     */\r\n    get config() {\r\n        return this.#config;\r\n    }\r\n\r\n    /**\r\n     * The list of the extensions' factor registered in the enviroment\r\n     * @type {TopicExtensionFactor}\r\n     */\r\n    get extensionFactors() {\r\n        return this.#extensionFactors;\r\n    }\r\n\r\n    /**\r\n     * generation a random ID\r\n     */\r\n    get randomID() {\r\n        return generateID();\r\n    }\r\n\r\n    /**\r\n     * Synchronize the configuration in the enviroment\r\n     * Use this method to let the components in the enviroment report their configurations, and then the configurations will be set as the global parameters.\r\n     */\r\n    syncConfig() {\r\n        let detail = {\r\n            result: cloneObject({}, MindmapEnvironment.DefaultConfig)\r\n        };\r\n        this.fireEvent(\"topic-event-report-configuration\", detail);\r\n        this.#config = Object.freeze(detail.result || cloneObject({}, MindmapEnvironment.DefaultConfig));\r\n        this.fireEvent(\"topic-event-sync-configuration\", this.#config);\r\n    }\r\n\r\n    /**\r\n     * Fire an event in the environment\r\n     * @param {String} _type The name of the event\r\n     * @param {Any} _param The detail of the event\r\n     */\r\n    fireEvent(_type, _param) {\r\n        this.dispatchEvent((_type instanceof Event) ? _type : new CustomEvent(_type, { detail: _param }));\r\n    }\r\n\r\n    /**\r\n     * Translate a href to an URL\r\n     * @param {String} _href The href need to be translating\r\n     * @returns {String} The destination URL\r\n     */\r\n    translateHRefToURL(_href) {\r\n        const param = {\r\n            source: _href,\r\n            destination: _href\r\n        };\r\n        this.fireEvent(\"topic-event-translate-href-url\", param);\r\n        return param;\r\n    }\r\n\r\n    /**\r\n     * get the type of the resource assigned with the href\r\n     * @param {String} _href The href\r\n     * @returns {String} The type of the resource, such as \"link\", \"resource\", or so on.\r\n     */\r\n    getHRefType(_href) {\r\n        const param = {\r\n            href: _href,\r\n            type: \"link\"\r\n        };\r\n        this.fireEvent(\"topic-event-get-href-type\", param);\r\n        return param.type;\r\n    }\r\n\r\n    /**\r\n     * Render a element as an image\r\n     * @param {HTMLElement} _element The element which will be rendered\r\n     * @param {Object} _opt The option\r\n     * @param {Number} _opt.width Optional. The width of the image\r\n     * @param {Number} _opt.height Optional. The height of the image\r\n     * @param {Number} _opt.offsetX Optional. The left offset when rendering the image\r\n     * @param {Number} _opt.offsetY Optional. The top offset when rendering the image\r\n     * @param {String} _opt.type Optional. The type of the image, such as \"png\", \"jpeg\", etc. The default type is \"png\".\r\n     * @param {String} _opt.fill Optional. The color of the background. The default is rgba(255,255,255,0).\r\n     * @returns {{width: Number, height: Number, data: Any}} The data of the image\r\n     */\r\n    getImageDataFromElement(_element, _opt) {\r\n        try {\r\n            _opt || (_opt = {});\r\n            const canvas = document.createElement(\"canvas\");\r\n            const width = Number(_opt.width) || Number(_element.width);\r\n            const height = Number(_opt.height) || Number(_element.height);\r\n            assert(width && height, MindmapError, -1, \"The width and height is invalid!\");\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            const context = canvas.getContext(\"2d\");\r\n            context.fillStyle = (_opt.fill || 'rgba(255,255,255,0)');\r\n            context.fillRect(0, 0, width, height);\r\n            context.drawImage(_element, (Number(_opt.offsetX) || 0), (Number(_opt.offsetY) || 0));\r\n            return _opt.toBlob ? new Promise(r => canvas.toBlob(data => {\r\n                r({\r\n                    width,\r\n                    height,\r\n                    data\r\n                })\r\n            }, `image/${_opt.type || \"png\"}`)) : Promise.resolve({\r\n                width,\r\n                height,\r\n                data: canvas.toDataURL(`image/${_opt.type || \"png\"}`)\r\n            });\r\n        } catch (err) {\r\n            this.warn(\"Fail in get image's data from an element\", err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Render a resource specialed by the URL as an image\r\n     * @param {String} _url The URL\r\n     * @param {Object} _opt The option\r\n     * @param {Number} _opt.width Optional. The width of the image\r\n     * @param {Number} _opt.height Optional. The height of the image\r\n     * @param {Number} _opt.offsetX Optional. The left offset when rendering the image\r\n     * @param {Number} _opt.offsetY Optional. The top offset when rendering the image\r\n     * @param {String} _opt.type Optional. The type of the image, such as \"png\", \"jpeg\", etc. The default type is \"png\".\r\n     * @param {String} _opt.fill Optional. The color of the background. The default is rgba(255,255,255,0).\r\n     * @param {String} _opt.crossOrigin Optional. The cross-origin setting when loading the resource.\r\n     * @returns {Promise<{width: Number, height: Number, data: Any}>} The promise resolved with the data of the image\r\n     */\r\n    async getImageData(_url, _opt) {\r\n        try {\r\n            _opt || (_opt = {});\r\n        \r\n            const image = new Image();\r\n            image.src = _url;\r\n            _opt.crossOrigin && (image.crossOrigin = _opt.crossOrigin);\r\n\r\n            await image.decode();\r\n\r\n            return await this.getImageDataFromElement(image, _opt);\r\n        } catch(err) {\r\n            this.warn(\"Fail in load image:\", _url, err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Output the warning information\r\n     * @param  {...any} _args The warning information\r\n     */\r\n    warn(..._args) {\r\n        console.warn(..._args);\r\n    }\r\n\r\n    async confirm(_tip, _opt) {\r\n        return (_opt || {}).default || 0;\r\n    }\r\n\r\n    /**\r\n     * active a link\r\n     * @param {String} _url The URL of the link\r\n     */\r\n    activeLink(_url) {\r\n        _url && window.open(_url, \"_blank\");\r\n    }\r\n\r\n    /**\r\n     * Indicate if the topic is dragable.\r\n     * This option is invalid if the editable is set to false\r\n     * @type {Boolean}\r\n     */\r\n    dragable = true;\r\n    \r\n    /**\r\n     * Indicate if the mindmap is editable.\r\n     * @type {Boolean}\r\n     */\r\n    editable = true;\r\n\r\n    /**\r\n     * The context for drag-drop action.\r\n     * This data is used by the drag-drop action processor. Don't use it without the processor.\r\n     * The subclass of MindmapEnvironment should keep this member writable.\r\n     */\r\n    dragContext = undefined;\r\n}\r\n","/**\r\n * @author season <season-studio@outlook.com>\r\n * @license Apache-2.0\r\n */\r\n\r\nimport { EBlock, EBlockContainer, generateID } from \"../thirdpart/eblock\";\r\nimport { MindmapError } from \"./mindmapError\";\r\nimport { MindmapEnvironment } from \"./mindmapEnv\";\r\nimport { assert } from \"../thirdpart/toolkits/src/assert\";\r\nimport { readonlyMember } from \"../thirdpart/toolkits/src/readonly\";\r\n\r\nconst ContainerDefXml = `\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" tabindex=\"0\" overflow=\"hidden\" width=\"640\" height=\"480\" viewBox=\"0 0 640 480\" style=\"outline:none;\">\r\n<style>\r\n    [season-mind-map-svg] {\r\n        --topic-ui-focus-color: #5cf;\r\n        --topic-ui-focus-border-color: #055cff;\r\n        --topic-ui-danger-color: #f22;\r\n        --topic-ui-emphasize-front-color: #fff;\r\n        --topic-ui-hover-back-color: #ccc;\r\n\r\n        background-color: var(--background-color, transparent);\r\n        \r\n        -webkit-touch-callout: none; /* iOS Safari */\r\n        -webkit-user-select: none; /* Chrome/Safari/Opera */\r\n        -khtml-user-select: none; /* Konqueror */\r\n        -moz-user-select: none; /* Firefox */\r\n        -ms-user-select: none; /* Internet Explorer/Edge */\r\n        user-select: none; /* Non-prefixed version, currently not supported by any browser */\r\n    }\r\n    \r\n    [season-mind-map-svg] *::-webkit-scrollbar {\r\n        width: 10px;\r\n        height: 10px;\r\n        background: transparent;\r\n        cursor: point;\r\n    }\r\n    [season-mind-map-svg] *::-webkit-scrollbar-corner {\r\n        background: transparent;\r\n    }\r\n    [season-mind-map-svg] *::-webkit-scrollbar-track {\r\n        background: transparent;\r\n        cursor: point;\r\n    }\r\n    [season-mind-map-svg] *::-webkit-scrollbar-thumb\r\n    {\r\n        -webkit-border-radius: 7px;\r\n        border-radius: 7px;\r\n        background: rgba(57,57,57,0.1);\r\n        cursor: point;\r\n    }\r\n    [season-mind-map-svg] *:hover::-webkit-scrollbar-thumb {\r\n        -webkit-border-radius: 7px;\r\n        border-radius: 7px;\r\n        background: rgba(0,0,0,0.1); \r\n        cursor: point;\r\n    }\r\n\r\n    .season-topic-svg-button > rect {\r\n        fill: rgba(255,255,255,0.05);\r\n        stroke: none;\r\n    }\r\n    .season-topic-svg-button[d-svg-button-has-border] > rect {\r\n        fill: rgba(255,255,255,0.05);\r\n        stroke: var(--topic-ui-hover-back-color);\r\n    }\r\n    .season-topic-svg-button > use, .season-topic-svg-button > path {\r\n        fill: #000;\r\n        stroke: none;\r\n    }\r\n    .season-topic-svg-button:hover > rect {\r\n        fill: var(--topic-ui-hover-back-color);\r\n    }\r\n    .season-topic-svg-button:hover > use, .season-topic-svg-button:hover > path {\r\n        fill: #000;\r\n    }\r\n    .season-topic-svg-button[d-svg-button-danger]:hover > rect {\r\n        fill: var(--topic-ui-danger-color);\r\n    }\r\n    .season-topic-svg-button[d-svg-button-danger]:hover > use, .season-topic-svg-button[d-svg-button-danger]:hover > path {\r\n        fill: var(--topic-ui-emphasize-front-color);\r\n    }\r\n\r\n    .season-topic-svg-3d-button > rect {\r\n        fill: url(#season-svg-3d-fill);\r\n        stroke-width: 0.5px;\r\n        stroke: #bbb;\r\n    }\r\n    .season-topic-svg-3d-button > use, .season-topic-svg-button > path {\r\n        fill: #000;\r\n        stroke: none;\r\n    }\r\n    .season-topic-svg-3d-button:hover > rect {\r\n        fill: url(#season-svg-3d-fill-hover);\r\n        stroke-width: 0.5px;\r\n        stroke: #bbb;\r\n    }\r\n    .season-topic-svg-3d-button:hover > use, .season-topic-svg-button:hover > path {\r\n        fill: #fff;\r\n        stroke: none;\r\n    }\r\n    .season-topic-svg-3d-button:active > rect {\r\n        fill: url(#season-svg-3d-fill-active);\r\n        stroke-width: 0.5px;\r\n        stroke: #bbb;\r\n    }\r\n    .season-topic-svg-3d-button:active > use, .season-topic-svg-button:active > path {\r\n        fill: #fff;\r\n        stroke: none;\r\n    }\r\n    .season-topic-svg-3d-button[d-svg-button-danger]:hover > rect {\r\n        fill: url(#season-svg-3d-danger-fill-hover);\r\n        stroke-width: 0.5px;\r\n        stroke: #bbb;\r\n    }\r\n    .season-topic-svg-3d-button[d-svg-button-danger]:hover > use, .season-topic-svg-button[d-svg-button-danger]:hover > path {\r\n        fill: #fff;\r\n        stroke: none;\r\n    }\r\n    .season-topic-svg-3d-button[d-svg-button-danger]:active > rect {\r\n        fill: url(#season-svg-3d-danger-fill-active);\r\n        stroke-width: 0.5px;\r\n        stroke: #bbb;\r\n    }\r\n    .season-topic-svg-3d-button[d-svg-button-danger]:active > use, .season-topic-svg-button[d-svg-button-danger]:active > path {\r\n        fill: #fff;\r\n        stroke: none;\r\n    }\r\n    \r\n</style>\r\n<defs season-topic-predefine-filter-and-pattern=\"\">\r\n    <linearGradient id=\"season-svg-3d-fill\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n        <stop stop-color=\"#fff\" stop-opacity=\"1\" offset=\"0\" />\r\n        <stop stop-color=\"#f0f0f0\" stop-opacity=\"1\" offset=\"0.3\" />\r\n        <stop stop-color=\"#e0e0e0\" stop-opacity=\"1\" offset=\"0.9\" />\r\n        <stop stop-color=\"#ccc\" stop-opacity=\"1\" offset=\"1\" />\r\n    </linearGradient>\r\n    <linearGradient id=\"season-svg-3d-fill-hover\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n        <stop stop-color=\"#0af\" stop-opacity=\"1\" offset=\"0\" />\r\n        <stop stop-color=\"#009dff\" stop-opacity=\"1\" offset=\"0.1\" />\r\n        <stop stop-color=\"#07f\" stop-opacity=\"1\" offset=\"0.75\" />\r\n        <stop stop-color=\"#06f\" stop-opacity=\"1\" offset=\"1\" />\r\n    </linearGradient>\r\n    <linearGradient id=\"season-svg-3d-fill-active\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n        <stop stop-color=\"#06f\" stop-opacity=\"1\" offset=\"0\" />\r\n        <stop stop-color=\"#07f\" stop-opacity=\"1\" offset=\"0.1\" />\r\n        <stop stop-color=\"#009dff\" stop-opacity=\"1\" offset=\"0.75\" />\r\n        <stop stop-color=\"#0af\" stop-opacity=\"1\" offset=\"1\" />\r\n    </linearGradient>\r\n    <linearGradient id=\"season-svg-3d-danger-fill-hover\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n        <stop stop-color=\"#f55\" stop-opacity=\"1\" offset=\"0\" />\r\n        <stop stop-color=\"#f33\" stop-opacity=\"1\" offset=\"0.1\" />\r\n        <stop stop-color=\"#f00\" stop-opacity=\"1\" offset=\"0.75\" />\r\n        <stop stop-color=\"#b00\" stop-opacity=\"1\" offset=\"1\" />\r\n    </linearGradient>\r\n    <linearGradient id=\"season-svg-3d-danger-fill-active\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n        <stop stop-color=\"#c00\" stop-opacity=\"1\" offset=\"0\" />\r\n        <stop stop-color=\"#f00\" stop-opacity=\"1\" offset=\"0.1\" />\r\n        <stop stop-color=\"#f33\" stop-opacity=\"1\" offset=\"0.75\" />\r\n        <stop stop-color=\"#f55\" stop-opacity=\"1\" offset=\"1\" />\r\n    </linearGradient>\r\n</defs>\r\n<defs season-topic-predefine-image=\"\">\r\n    <symbol id=\"season-topic-predefine-image-picture-placeholder\" width=\"76\" height=\"58\" viewBox=\"0 0 76 58\" preserveAspectRatio=\"none\">\r\n        <path d=\"M 0 0 L 0 58 L 76 58 L 76 0 L 0 0 z M 17 9 C 18.7 9 20 10.3 20 12 C 20 13.7 18.7 15 17 15 C 15.3 15 14 13.7 14 12 C 14 10.3 15.3 9 17 9 z M 17 11 C 16.4 11 16 11.4 16 12 C 16 12.6 16.4 13 17 13 C 17.6 13 18 12.6 18 12 C 18 11.4 17.6 11 17 11 z M 30 11 C 30.3 11 30.7 11.2 30.8 11.4 L 45.8 34.2 L 52.1 22.5 C 52.3 22.2 52.6 22 53 22 C 53.4 22 53.7 22.2 53.9 22.5 L 67.9 46.5 C 68 46.7 68 46.8 68 47 C 68 47.6 67.6 48 67 48 L 8 48 C 7.8 48 7.6 47.9 7.4 47.9 C 6.9 47.6 6.8 47 7.1 46.5 L 17 30.7 C 17.1 30.6 17.2 30.4 17.3 30.3 L 29.2 11.5 C 29.3 11.2 29.7 11 30 11 z M 30 13.9 L 20.7 28.7 L 26.6 26.1 C 27 25.9 27.4 26 27.7 26.3 L 30 28.6 L 32.8 25.8 C 33.1 25.4 33.6 25.4 34 25.6 L 40.1 29.2 L 30 13.9 z M 53 25.1 L 47 36.1 L 53.5 46 L 65.3 46 L 53 25.1 z M 33.7 27.7 L 30.7 30.7 C 30.3 31.1 29.7 31.1 29.3 30.7 L 26.8 28.2 L 18.8 31.8 L 9.801 46 L 51.1 46 L 42.5 32.8 L 33.7 27.7 z\" />\r\n    </symbol>\r\n    <symbol id=\"season-topic-predefine-image-bold\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" preserveAspectRatio=\"none\">\r\n        <path d=\"m 12.04,9.665 q 1.57,0.365 2.2,0.885 0.91,0.74 0.91,1.92 0,1.24 -1,2.05 -1.23,0.98 -3.57,0.98 H 5 v -0.3 q 0.762,0 1.03,-0.14 0.275,-0.14 0.381,-0.37 0.113,-0.23 0.113,-1.13 V 6.429 Q 6.524,5.537 6.411,5.311 6.305,5.075 6.03,4.938 5.755,4.8 5,4.8 V 4.5 h 5.27 q 1.9,0 2.68,0.34 0.78,0.333 1.24,1.005 0.45,0.665 0.45,1.42 0,0.795 -0.57,1.42 -0.57,0.616 -2.03,0.98 z M 9.087,9.446 q 1.153,0 1.693,-0.258 0.56,-0.261 0.85,-0.731 0.29,-0.471 0.29,-1.2 0,-0.73 -0.29,-1.192 Q 11.35,5.595 10.81,5.351 10.27,5.108 9.087,5.116 Z m 0,0.634 v 3.53 0.4 q 0,0.44 0.218,0.67 0.229,0.23 0.665,0.23 0.65,0 1.19,-0.29 0.56,-0.3 0.85,-0.84 0.29,-0.56 0.29,-1.22 0,-0.77 -0.36,-1.38 -0.37,-0.62 -0.99,-0.86 -0.62,-0.25 -1.862,-0.24 z\" />\r\n    </symbol>\r\n    <symbol id=\"season-topic-predefine-image-italic\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" preserveAspectRatio=\"none\">\r\n        <path d=\"m 11.27,15.2 -0.1,0.3 H 6.65 l 0.113,-0.3 q 0.682,0 0.901,-0.11 0.357,-0.14 0.528,-0.39 0.266,-0.38 0.551,-1.35 L 10.66,6.706 Q 10.9,5.878 10.9,5.457 10.9,5.246 10.8,5.1 10.69,4.954 10.48,4.882 10.26,4.797 9.635,4.797 L 9.733,4.5 h 4.257 l -0.1,0.3 q -0.52,0 -0.77,0.114 -0.36,0.161 -0.56,0.462 -0.18,0.3 -0.49,1.33 l -1.9,6.644 q -0.259,0.91 -0.259,1.16 0,0.21 0.1,0.36 0.11,0.13 0.32,0.21 0.23,0.1 0.94,0.12 z\" />        \r\n    </symbol>\r\n    <symbol id=\"season-topic-predefine-image-underline\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" preserveAspectRatio=\"none\">\r\n        <path d=\"m 5.4,4.5 v 0.244 c 0.379,0 0.639,0.03 0.779,0.106 0.141,0.07 0.241,0.176 0.298,0.305 0.06,0.122 0.09,0.441 0.09,0.957 V 10.5 c 0,0.74 0.119,1.33 0.356,1.77 0.239,0.44 0.646,0.81 1.223,1.09 0.423,0.21 1.022,0.31 1.798,0.31 0.926,0 1.666,-0.2 2.196,-0.59 0.53,-0.39 0.87,-0.82 1.01,-1.29 0.14,-0.46 0.21,-1.22 0.21,-2.274 V 6.112 c 0,-0.365 0,-0.618 0.1,-0.759 0.1,-0.203 0.2,-0.355 0.37,-0.456 0.16,-0.102 0.37,-0.153 0.62,-0.153 h 0.19 V 4.5 h -3.12 v 0.244 c 0.37,0 0.65,0.05 0.84,0.153 0.13,0.07 0.24,0.184 0.32,0.357 0.1,0.171 0.13,0.457 0.13,0.858 v 3.655 c 0,0.953 -0.1,1.613 -0.26,2.003 -0.16,0.38 -0.42,0.68 -0.76,0.9 -0.34,0.21 -0.76,0.32 -1.24,0.32 -0.42,0 -0.776,-0.1 -1.053,-0.25 C 9.219,12.56 9.019,12.35 8.895,12.09 8.777,11.82 8.717,11.3 8.717,10.5 V 6.112 c 0,-0.511 0.03,-0.83 0.08,-0.957 C 8.854,5.026 8.946,4.927 9.074,4.857 9.206,4.782 9.447,4.744 9.794,4.744 H 10.03 V 4.5 Z m 0,9.73 v 1.27 h 9.23 v -1.27 z\" />    \r\n    </symbol>\r\n    <symbol id=\"season-topic-predefine-image-unorder-list\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" preserveAspectRatio=\"none\">\r\n        <path d=\"M 5 5 L 5 6.5 L 6.5 6.5 L 6.5 5 L 5 5 z M 7.5 5 L 7.5 6.5 L 15 6.5 L 15 5 L 7.5 5 z M 5 9.5 L 5 11 L 6.5 11 L 6.5 9.5 L 5 9.5 z M 7.5 9.5 L 7.5 11 L 15 11 L 15 9.5 L 7.5 9.5 z M 5 14 L 5 15.5 L 6.5 15.5 L 6.5 14 L 5 14 z M 7.5 14 L 7.5 15.5 L 15 15.5 L 15 14 L 7.5 14 z \" />    \r\n    </symbol>\r\n    <symbol id=\"season-topic-predefine-image-order-list\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" preserveAspectRatio=\"none\">\r\n        <path d=\"M 6.125 5 L 4.5 5.742 L 4.559 5.859 C 4.717 5.79 4.852 5.756 4.963 5.756 C 5.032 5.756 5.093 5.774 5.145 5.811 C 5.199 5.845 5.237 5.889 5.256 5.941 C 5.276 5.991 5.285 6.116 5.285 6.32 L 5.285 8.609 C 5.285 8.887 5.27 9.065 5.242 9.141 C 5.214 9.217 5.16 9.273 5.08 9.312 C 4.999 9.359 4.864 9.383 4.676 9.383 L 4.559 9.383 L 4.559 9.504 L 6.887 9.504 L 6.887 9.383 L 6.785 9.383 C 6.618 9.383 6.498 9.359 6.422 9.312 C 6.349 9.265 6.298 9.204 6.271 9.131 C 6.245 9.055 6.232 8.881 6.232 8.609 L 6.232 5 L 6.125 5 z M 7.5 5 L 7.5 6.5 L 15 6.5 L 15 5 L 7.5 5 z M 8.314 9.5 L 8.314 11 L 15 11 L 15 9.5 L 8.314 9.5 z M 5.939 11 C 5.627 11 5.35 11.1 5.111 11.3 C 4.873 11.5 4.695 11.81 4.578 12.24 L 4.697 12.24 C 4.882 11.91 5.143 11.74 5.477 11.74 C 5.681 11.74 5.853 11.82 5.994 11.97 C 6.135 12.12 6.205 12.3 6.205 12.53 C 6.205 12.84 6.119 13.16 5.947 13.49 C 5.778 13.82 5.296 14.46 4.5 15.41 L 4.5 15.51 L 7.098 15.51 L 7.346 14.26 L 7.229 14.26 C 7.156 14.39 7.095 14.49 7.049 14.56 C 7.003 14.63 6.944 14.66 6.873 14.66 L 6.418 14.66 L 5.463 14.66 C 6.201 13.94 6.679 13.38 6.898 12.98 C 7.059 12.68 7.141 12.39 7.141 12.1 C 7.141 11.94 7.087 11.77 6.982 11.59 C 6.878 11.41 6.735 11.27 6.551 11.16 C 6.366 11.05 6.163 11 5.939 11 z M 8.314 14 L 8.314 15.5 L 15 15.5 L 15 14 L 8.314 14 z \" />\r\n    </symbol>\r\n    <symbol id=\"season-topic-predefine-image-open\" width=\"96\" height=\"96\" viewBox=\"0 0 96 96\" preserveAspectRatio=\"none\">\r\n        <path d=\"m 11.94,75.97 c 0,0 0.1,0 0.11,0 H 74 L 87.6,46.8 C 88.57,44.77 87.71,42.34 85.69,41.37 85.28,41.18 84.85,41.05 84.4,41 H 80 v -9 c 0,-2.2 -1.79,-3.99 -4,-4 H 46.28 c -0.18,0 -0.36,0 -0.51,-0.15 L 35,20.7 C 34.34,20.27 33.58,20.03 32.8,20 H 14 c -2.21,0 -3.99,1.79 -4,4 v 49.98 c 0,1.08 0.86,1.96 1.94,1.99 z M 84.29,43 c 1.13,0.2 1.88,1.28 1.68,2.4 0,0.18 -0.1,0.35 -0.16,0.51 v 0 0 L 72.75,73.94 v 0 H 14.1 c 0,0 0,0 0,0 0,0 0,0 0,0 L 26.43,44.01 C 26.72,43.4 27.33,43.01 28,43 Z M 12,24 c 0,-1.11 0.9,-2 2,-2 h 18.8 c 0.41,0 0.81,0.17 1.15,0.4 l 10.71,7.11 C 45.14,29.83 45.7,30 46.28,30 H 76 c 1.1,0 2,0.89 2,2 v 8.99 H 29 c -0.1,0 -0.1,0 -0.16,0 H 28 c -1.47,0 -2.79,0.87 -3.4,2.2 L 12.02,73.76 z\" />\r\n    </symbol>\r\n    <symbol id=\"season-topic-predefine-image-nodepad\" width=\"96\" height=\"96\" viewBox=\"0 0 96 96\" preserveAspectRatio=\"none\">\r\n        <rect width=\"60\" height=\"80\" x=\"18\" y=\"8\" />\r\n        <path d=\"M 28,35 h 20 0 M 28,25 h 17 v 0 M 28,45 h 40 v 0 M 28,55 h 40 v 0 M 28,65 h 40 v 0 M 28,75 h 40 v 0\" />\r\n        <circle cx=\"60\" cy=\"25\" r=\"8\" />\r\n    </symbol>\r\n    <symbol id=\"season-topic-predefine-image-picture\" width=\"96\" height=\"96\" viewBox=\"0 0 96 96\" preserveAspectRatio=\"none\">\r\n        <path d=\"M 10 19 L 10 77 L 86 77 L 86 19 L 10 19 z M 12 21 L 84 21 L 84 75 L 12 75 L 12 21 z M 27 28 C 25.3 28 24 29.3 24 31 C 24 32.7 25.3 34 27 34 C 28.7 34 30 32.7 30 31 C 30 29.3 28.7 28 27 28 z M 27 30 C 27.6 30 28 30.4 28 31 C 28 31.6 27.6 32 27 32 C 26.4 32 26 31.6 26 31 C 26 30.4 26.4 30 27 30 z M 40 30 C 39.7 30 39.3 30.2 39.2 30.5 L 27.3 49.3 C 27.2 49.4 27.1 49.6 27 49.7 L 17.1 65.5 C 16.8 66 16.9 66.6 17.4 66.9 C 17.6 66.9 17.8 67 18 67 L 77 67 C 77.6 67 78 66.6 78 66 C 78 65.8 78 65.7 77.9 65.5 L 63.9 41.5 C 63.7 41.2 63.4 41 63 41 C 62.6 41 62.3 41.2 62.1 41.5 L 55.8 53.2 L 40.8 30.4 C 40.7 30.2 40.3 30 40 30 z M 40 32.9 L 50.1 48.2 L 44 44.6 C 43.6 44.4 43.1 44.4 42.8 44.8 L 40 47.6 L 37.7 45.3 C 37.4 45 37 44.9 36.6 45.1 L 30.7 47.7 L 40 32.9 z M 63 44.1 L 75.3 65 L 63.5 65 L 57 55.1 L 63 44.1 z M 43.7 46.7 L 52.5 51.8 L 61.1 65 L 19.8 65 L 28.8 50.8 L 36.8 47.2 L 39.3 49.7 C 39.7 50.1 40.3 50.1 40.7 49.7 L 43.7 46.7 z\" />\r\n    </symbol>\r\n    <symbol id=\"season-topic-predefine-image-pencil\" width=\"96\" height=\"96\" viewBox=\"0 0 96 96\" preserveAspectRatio=\"none\">\r\n        <path d=\"m 86.82,16.2 -7.03,-7 c -1.56,-1.6 -4.1,-1.6 -5.66,0 0,0 0,0 0,0 L 14.03,69.3 8,88.1 26.75,82 v 0 L 86.82,21.9 c 1.56,-1.6 1.56,-4.1 0,-5.7 z m -19.76,2.9 9.88,9.9 -2.14,2.1 -9.88,-9.9 z m -41.44,61.2 -11.13,3.6 -2.3,-2.3 3.57,-11.2 c 2.03,-1.6 5.58,-0.9 8.17,1.7 2.58,2.6 3.28,6.1 1.69,8.2 z m -0.28,-9.6 c -1.79,-1.9 -4.22,-3 -6.8,-3.1 l 44.97,-45 9.88,9.9 -44.95,45 c -0.13,-2.6 -1.24,-5 -3.1,-6.8 z m 60.06,-50.2 -7.05,7 -9.88,-9.8 7.07,-7.1 c 0.78,-0.8 2.05,-0.8 2.83,0 0,0 0,0 0,0 l 7.03,7.1 c 0.78,0.7 0.78,2 0,2.8 z\" />\r\n    </symbol>\r\n    <symbol id=\"season-topic-predefine-image-delete\" width=\"96\" height=\"96\" viewBox=\"0 0 96 96\" preserveAspectRatio=\"none\">\r\n        <path d=\"M 42 10 C 39.24 10 37 12.2 37 15 L 37 18 L 19 18 C 16.79 18 15.01 19.8 15 22 L 15 28 L 81 28 L 81 22 C 81 19.8 79.21 18 77 18 L 59 18 L 59 15 C 59 12.2 56.76 10 54 10 L 42 10 z M 42 12 L 54 12 C 55.66 12 57 13.3 57 15 L 57 18 L 39 18 L 39 15 C 39 13.3 40.34 12 42 12 z M 19 20 L 77 20 C 78.11 20 79 20.9 79 22 L 79 26 L 17 26 L 17 22 C 17 20.9 17.89 20 19 20 z M 20.5 31 C 19.67 31 19 31.67 19 32.5 C 19 32.59 19.01 32.68 19.03 32.77 C 19.01 32.86 19 32.95 19 33.04 L 19 80.04 C 19 80.12 19.01 80.19 19.02 80.27 C 19.01 80.35 19 80.42 19 80.5 C 19 81.33 19.67 82 20.5 82 L 75.5 82 C 76.33 82 77 81.33 77 80.5 C 77 80.42 76.99 80.35 76.98 80.27 C 76.99 80.19 77 80.12 77 80.04 L 77 33.04 C 77 32.95 76.99 32.86 76.97 32.77 C 76.99 32.68 77 32.59 77 32.5 C 77 31.67 76.33 31 75.5 31 L 20.5 31 z M 22 34 L 74 34 L 74 79 L 22 79 L 22 34 z M 34 38 C 33.17 38 32.5 38.59 32.5 39.32 L 32.5 73.68 C 32.5 74.41 33.17 75 34 75 C 34.83 75 35.5 74.41 35.5 73.68 L 35.5 39.32 C 35.5 38.59 34.83 38 34 38 z M 48 38 C 47.17 38 46.5 38.59 46.5 39.32 L 46.5 73.68 C 46.5 74.41 47.17 75 48 75 C 48.83 75 49.5 74.41 49.5 73.68 L 49.5 39.32 C 49.5 38.59 48.83 38 48 38 z M 62 38 C 61.17 38 60.5 38.59 60.5 39.32 L 60.5 73.68 C 60.5 74.41 61.17 75 62 75 C 62.83 75 63.5 74.41 63.5 73.68 L 63.5 39.32 C 63.5 38.59 62.83 38 62 38 z\" />\r\n    </symbol>\r\n    <symbol id=\"season-topic-predefine-image-eraser\" width=\"96\" height=\"96\" viewBox=\"0 0 96 96\" preserveAspectRatio=\"none\">\r\n        <path d=\"M 84.09,39.93 58.63,14.43 c -1.95,-1.9 -5.12,-1.9 -7.07,0 l -39.6,39.6 c -1.95,2 -1.95,5.1 0,7.1 l 22.22,22.19 h 43.85 v -2 h -28.3 l 34.36,-34.4 c 1.95,-1.9 1.95,-5.1 0,-6.99 z M 35.03,81.32 H 35 L 13.38,59.72 c -1.17,-1.19 -1.17,-3.09 0,-4.3 0,0 0,0 0,0 l 19.09,-19.1 29.7,29.7 -15.27,15.3 z M 82.67,45.53 63.58,64.62 33.88,34.93 52.98,15.82 c 1.17,-1.1 3.07,-1.1 4.24,0 l 25.45,25.5 c 1.17,1.2 1.17,3.1 0,4.21 z\" />\r\n    </symbol>\r\n    <symbol id=\"season-topic-predefine-image-cross\" width=\"96\" height=\"96\" viewBox=\"0 0 96 96\" preserveAspectRatio=\"none\">\r\n        <path d=\"M 83,21.4 74.6,13 48,39.6 21.4,13 13,21.4 39.6,48 13,74.6 21.4,83 48,56.4 74.6,83 83,74.6 56.4,48 Z\" />\r\n    </symbol>\r\n</defs>\r\n<defs season-topic-image-storage=\"\">\r\n</defs>\r\n<g season-topic-root-node=\"\"></g>\r\n</svg>\r\n`;\r\n\r\nconst ResizeProc = Symbol(\"MindmapContainer.ResizeProc\");\r\nconst ResizeObserverHandler = Symbol(\"MindmapContainer.ResizeObserverHandler\");\r\n\r\nexport\r\n/**\r\n * Class of the container for displaying the mindmap\r\n * @class\r\n * @extends EBlockContainer\r\n * @property {MindmapEnvironment} env The enviroment of the mindmap\r\n */\r\nclass MindmapContainer extends EBlockContainer {\r\n\r\n    #resizeObServer = undefined;\r\n\r\n    /**\r\n     * Create the container\r\n     * @constructor\r\n     * @param {Node} _parentNode The node as the parent of the container\r\n     * @param {MindmapEnvironment} _env The enviroment of the mindmap\r\n     */\r\n    constructor(_parentNode, _env) {\r\n        assert(_parentNode instanceof Node, MindmapError, -1, \"_parentNode must be an instance of Node\");\r\n        assert(_env instanceof MindmapEnvironment, MindmapError, -1, \"_env must be an instance of MindmapEnvironment\");\r\n\r\n        super();\r\n\r\n        _parentNode.innerHTML = ContainerDefXml;\r\n        const svgElement = _parentNode.querySelector(\"svg\");\r\n        svgElement.setAttribute(\"season-mind-map-svg\", generateID());\r\n        svgElement.$scale = 1;\r\n        _parentNode.style.overflow = \"hidden\";\r\n        const parentNodePosition = getComputedStyle(_parentNode).position;\r\n        if ((parentNodePosition !== \"relative\") && (parentNodePosition !== \"absolute\")) {\r\n            _parentNode.style.position = \"relative\";\r\n        }\r\n\r\n        readonlyMember(this, {\r\n            env: _env,\r\n            svgElement,\r\n            stageContainer: svgElement.querySelector(\"g[season-topic-root-node]\"),\r\n            eventContainer: svgElement\r\n        });        \r\n\r\n        (this.#resizeObServer = new ResizeObserver(this[ResizeObserverHandler].bind(this)))\r\n            .observe(_parentNode);\r\n        this[ResizeProc]({ width: _parentNode.clientWidth, height: _parentNode.clientHeight });\r\n    }\r\n\r\n    /**\r\n     * Insert a node as the predefined data of the mindmap\r\n     * @param {Node} _node the predefined node\r\n     */\r\n    define(_node) {\r\n        this.svgElement.insertBefore(_node, this.stageContainer);\r\n    }\r\n\r\n    /**\r\n     * Remove nodes matched the selector\r\n     * @param {String} _selector the selector for searching the node which should be removed\r\n     */\r\n    undefine(_selector) {\r\n        this.svgElement.querySelectorAll(_selector).forEach(item => item.remove());\r\n    }\r\n\r\n    /**\r\n     * The processing when the size of the container is changed\r\n     * @private\r\n     * @param {*} _rect \r\n     */\r\n    [ResizeProc](_rect) {\r\n        const svgNode = this.svgElement;\r\n        let scale = Number(svgNode.$scale); \r\n        (scale > 0) || (scale = 1);\r\n        const viewBox = svgNode.viewBox.baseVal;\r\n        svgNode.setAttribute(\"width\", _rect.width);\r\n        svgNode.setAttribute(\"height\", _rect.height);\r\n        svgNode.setAttribute(\"viewBox\", `${viewBox.x} ${viewBox.y} ${_rect.width / scale} ${_rect.height / scale}`);\r\n    }\r\n\r\n    /**\r\n     * The scale of the viewer\r\n     * @type {Number}\r\n     */\r\n    get scale() {\r\n        return Number(this.svgElement.$scale) || 1;\r\n    }\r\n\r\n    /**\r\n     * The scale of the viewer\r\n     * @ignore\r\n     */\r\n    set scale(_val) {\r\n        _val = Number(_val);\r\n        (_val > 0) || (_val = 1);\r\n        const svgNode = this.svgElement;\r\n        svgNode.$scale = _val;\r\n        const viewBox = svgNode.viewBox.baseVal;\r\n        const width = Number(svgNode.width.baseVal.value);\r\n        const height = Number(svgNode.height.baseVal.value);\r\n        svgNode.setAttribute(\"viewBox\", `${viewBox.x} ${viewBox.y} ${width / _val} ${height / _val}`);\r\n        this.env.fireEvent(\"topic-event-view-resize\");\r\n    }\r\n\r\n    /**\r\n     * Move the view of the mindmap\r\n     * @param {Number} _deltaX the offset in the x-coordinate\r\n     * @param {Number} _deltaY the offset in the y-coordinate\r\n     */\r\n    move(_deltaX, _deltaY) {\r\n        const svgNode = this.svgElement;\r\n        const viewBox = svgNode.viewBox.baseVal;\r\n        const viewX = viewBox.x + (Number(_deltaX) || 0);\r\n        const viewY = viewBox.y + (Number(_deltaY) || 0);\r\n        const viewBottom = viewY + viewBox.height;\r\n        const viewRight = viewX + viewBox.width;\r\n        const {x, y, width, height} = this.stageContainer.getBBox();\r\n        const right = x + width;\r\n        const bottom = y + height;\r\n        if (!((bottom < viewY) || (y > viewBottom) || (x > viewRight) || (right < viewX))) {\r\n            svgNode.setAttribute(\"viewBox\", `${viewX} ${viewY} ${viewBox.width} ${viewBox.height}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * the callack of the resizing observer\r\n     * @private\r\n     * @param {*} _entries \r\n     */\r\n    [ResizeObserverHandler](_entries) {\r\n        const parentNode = this.svgElement.parentNode;\r\n        _entries.forEach(item => {\r\n            if (item.target === parentNode) {\r\n                this[ResizeProc](item.contentRect);\r\n            }\r\n        });\r\n        this.env.fireEvent(\"topic-event-view-resize\");\r\n    }\r\n\r\n    /**\r\n     * Create an event as the event triggered by the DOM\r\n     * @param {String} _eventName the name of the event\r\n     * @param {*} _detail the detail of the event\r\n     * @returns {Event} An instance of Event\r\n     */\r\n    createDomEvent(_eventName, _detail) {\r\n        return new CustomEvent(`topic-domevent-${_eventName}`, { detail: _detail });\r\n    }\r\n\r\n    /**\r\n     * Add the listener of an event\r\n     * @param  {...any} _args the arguments as the same as passed to the EventTarget.addEventListener\r\n     * @returns {MindmapContainer} this object\r\n     */\r\n    addEventListener(..._args) {\r\n        this.env.addEventListener(..._args);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * remove the listener of an event\r\n     * @param  {...any} _args the arguments as the same as passed to the EventTarget.removeEventListener\r\n     * @returns {MindmapContainer} this object\r\n     */\r\n    removeEventListener(..._args) {\r\n        this.env.addEventListener(..._args);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Dispose the resource of the container. This method should be called when you don't need the container any more.\r\n     */\r\n    dispose() {\r\n        this.#resizeObServer && this.#resizeObServer.disconnect();\r\n        this.svgElement.remove();\r\n    }\r\n\r\n    /**\r\n     * Dispatch the event\r\n     * @param {Event} _event \r\n     * @private\r\n     */\r\n    [EBlockContainer.DomEventDispatcher](_event) {\r\n        try {\r\n            const target = _event.target;\r\n            if (target) {\r\n                if (_event.type === \"mousedown\") {\r\n                    target.$mousedownTimeStamp = _event.timeStamp;\r\n                    target.$mouseEventX = _event.offsetX;\r\n                    target.$mouseEventY = _event.offsetY;\r\n                } else if (_event.type === \"click\") {\r\n                    let deltaTime = _event.timeStamp - (Number(target.$mousedownTimeStamp) || 0);\r\n                    let deltaX = Math.abs(_event.offsetX - (Number(target.$mouseEventX) || Number.MAX_VALUE));\r\n                    let deltaY = Math.abs(_event.offsetY - (Number(target.$mouseEventY) || Number.MAX_VALUE));\r\n                    target.$mousedownTimeStamp = 0;\r\n                    target.$mouseEventX = Number.MAX_VALUE;\r\n                    target.$mouseEventY = Number.MAX_VALUE;\r\n                    if ((deltaTime > 1000) && ((deltaX > 10) || (deltaY > 10))) {\r\n                        return ;\r\n                    }\r\n                }\r\n            }\r\n            const containerNode = this.eventContainer;\r\n            let triggerContentType = undefined;\r\n            _event.composedPath().forEach(node => {\r\n                (triggerContentType === undefined) && node.hasAttribute(\"season-topic-content-type\") && (triggerContentType = node.getAttribute(\"season-topic-content-type\"));\r\n                let eventTarget = EBlock.GetInstance(node);\r\n                if ((eventTarget && eventTarget.handleDomEvent) || (node === containerNode)) {\r\n                    let eventName = `topic-domevent-${_event.type}`;\r\n                    let eventDetail = {\r\n                        eventName,\r\n                        triggerContentType,\r\n                        eventTarget,\r\n                        originEvent: _event,\r\n                        preventDefault: false,\r\n                        stopPropagation: false\r\n                    };\r\n                    eventTarget && eventTarget.fireEvent(eventName, eventDetail);\r\n                    this.env.fireEvent(this.createDomEvent(_event.type, eventDetail));\r\n                    eventDetail.preventDefault && _event.preventDefault();\r\n                    eventDetail.stopPropagation && _event.stopPropagation();\r\n                    throw null;\r\n                }\r\n            });\r\n        } catch (_err) {\r\n            (_err !== null) && this.env.warn(\"Exception raised when dispatch dom event\", _event, _err);\r\n        }\r\n    }\r\n}\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\r\n * @author season <season-studio@outlook.com>\r\n * @license Apache-2.0\r\n */\r\n\r\nimport { EBlock, EBlockFactor, generateID } from \"../thirdpart/eblock\";\r\nimport { MindmapError } from \"./mindmapError\";\r\nimport { MindmapEnvironment } from \"./mindmapEnv\";\r\nimport { assert } from \"../thirdpart/toolkits/src/assert\";\r\nimport { cloneObject } from \"../thirdpart/toolkits/src/cloneObject\";\r\nimport { readonlyMember } from \"../thirdpart/toolkits/src/readonly\";\r\nimport { TopicExtension } from \"./topicExtension\";\r\n\r\nconst FOCUS_ATTR_KEY = \"season-topic-focus\";\r\n\r\nconst CHILDREN_GROUP_NODE = Symbol(\"topic.children.group.node\");\r\nconst TOPIC_LEVEL = Symbol(\"topic.level\");\r\nconst TOPIC_DIRECTION = Symbol(\"topic.direction\");\r\nconst TOPIC_FOLD = Symbol(\"topic.fold\");\r\n\r\nconst TitleMeasureCanvasMap = new WeakMap();\r\n\r\nexport\r\n/**\r\n * Class of the topic\r\n * @class\r\n * @extends EBlock\r\n */\r\nclass Topic extends EBlock {\r\n    //#region static methods\r\n\r\n    /**\r\n     * Enumerate each resource referenced by the topic\r\n     * @param {MindmapEnvironment} _env The enviroment of the mindmap\r\n     * @param {TopicData} _data The data of the topic\r\n     */\r\n    static *enumerateReferenceResource(_env, _data) {\r\n        if ((_env instanceof MindmapEnvironment) && _data) {\r\n            if (_data.image && _data.image.src) {\r\n                yield _data.image.src;\r\n            }\r\n            let extResList = [];\r\n            try {\r\n                _env.extensionFactors.forEach(extFactor => {\r\n                    let extRes = extFactor.callScript(\"getReferenceResources\", undefined, _env, _data);\r\n                    if (extRes) {\r\n                        if (extRes instanceof Array) {\r\n                            extResList = extResList.concat(extRes);\r\n                        } else {\r\n                            extResList.push(extRes);\r\n                        }\r\n                    }\r\n                });\r\n            } catch (err) {\r\n                _env.warn(\"Exception raised in enumerateReferenceResource\", err);\r\n            }\r\n            for (let item of extResList) {\r\n                yield item;\r\n            }\r\n            if (_data.children instanceof Array) {\r\n                for (let subTopicData of _data.children) {\r\n                    yield * Topic.enumerateReferenceResource(_env, subTopicData);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the first child topic of the given topic\r\n     * @static\r\n     * @param {Node|Topic} _nodeOrTopic The parent topic or a node contains the topic\r\n     * @returns {Topic} The target child\r\n     */\r\n    static getFirstChildTopic(_nodeOrTopic) {\r\n        let node = undefined;\r\n        if (_nodeOrTopic instanceof Node) {\r\n            node = _nodeOrTopic.querySelector(\":scope > g[season-topic-global]\");\r\n        } else if (_nodeOrTopic instanceof Topic) {\r\n            const childrenGroupNode = _nodeOrTopic[CHILDREN_GROUP_NODE];\r\n            childrenGroupNode && childrenGroupNode.isConnected && (node = childrenGroupNode.querySelector(\":scope > g[season-topic-global]\"));\r\n        }\r\n\r\n        return Topic.GetInstance(node);\r\n    }\r\n\r\n    /**\r\n     * Get the root node of the stage of all the topics\r\n     * @static\r\n     * @param {Node} _node The node contains the root\r\n     * @returns {Node} The target node\r\n     */\r\n    static getMindRootNode(_node) {\r\n        return (_node instanceof SVGSVGElement) \r\n                ? _node.querySelector(\"g[season-topic-root-node]\")\r\n                : ((_node instanceof SVGElement) \r\n                        ? _node.ownerSVGElement.querySelector(\"g[season-topic-root-node]\") \r\n                        : undefined);\r\n    }\r\n\r\n    /**\r\n     * Find the special topic in the given node\r\n     * @static\r\n     * @param {Node} _node The given node that may contain the special topic\r\n     * @param {String} _id The ID of the special topic\r\n     * @returns {Topic} The target topic\r\n     */\r\n    static getTopicByID(_node, _id) {\r\n        return Topic.GetInstance((_node instanceof Node) && _node.querySelector(`g[season-topic-global=\"${_id}\"]`));\r\n    }\r\n\r\n    /**\r\n     * Find the focus topic in the given node\r\n     * @static\r\n     * @param {Node} _node The given node that may contain the focus topic\r\n     * @returns {Topic} The target topic\r\n     */\r\n    static getFocusTopic(_node) {\r\n        try {\r\n            if (_node instanceof Node) {\r\n                const focusNode = _node.querySelector(`g[eblock-template][${FOCUS_ATTR_KEY}]`);\r\n                return Topic.GetInstance(focusNode);\r\n            }\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert the given coordinate value into the coordinate system of the special svg node\r\n     * @param {SVGGraphicsElement|SVGSVGElement} _node The special svg node\r\n     * @param {Number} _x the given coordinate value\r\n     * @param {Number} _y the given coordinate value\r\n     * @returns {{x: Number, y: Number}} The destination coordinate value \r\n     */\r\n    static convertWindowPointToGraphic(_node, _x, _y) {\r\n        (_node instanceof SVGSVGElement) || (_node = (_node instanceof SVGGraphicsElement) && _node.ownerSVGElement);\r\n        let ctm = _node && (_node.getCTM() || _node.getScreenCTM());\r\n        if (ctm) {\r\n            ctm = (new DOMMatrix([ctm.a, ctm.b, ctm.c, ctm.d, 0, 0])).inverse().translate(_x, _y);\r\n            return { x: ctm.e, y: ctm.f };\r\n        } else {\r\n            return { x:_x, y:_y };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Move the node into the viewport of the special SVG node\r\n     * @param {Node} _node The node would be moved\r\n     * @param {SVGGradientElement|SVGSVGElement} _svg The special SVG node\r\n     */\r\n    static showNodeInSvgView(_node, _svg) {\r\n        const topicRect = _node.getBoundingClientRect();\r\n        const viewRect = _svg.getBoundingClientRect();\r\n        let deltaX, deltaY;\r\n        if (topicRect.top < viewRect.top) {\r\n            deltaY = viewRect.top - topicRect.top;\r\n        } else if (topicRect.bottom > viewRect.bottom) {\r\n            deltaY = Math.max(viewRect.bottom - topicRect.bottom, viewRect.top - topicRect.top);\r\n        } else {\r\n            deltaY = 0;\r\n        }\r\n        if (topicRect.left < viewRect.left) {\r\n            deltaX = viewRect.left - topicRect.left;\r\n        } else if (topicRect.right > viewRect.right) {\r\n            deltaX = Math.max(viewRect.right - topicRect.right, viewRect.left - topicRect.left);\r\n        } else {\r\n            deltaX = 0;\r\n        }\r\n        let { x:viewX, y:viewY, width:viewWidth, height:viewHeight} = (_svg.viewBox.baseVal || {x:0, y:0, width:0, height:0});\r\n        (viewWidth <= 0) && (viewWidth = _svg.width.baseVal.value);\r\n        (viewHeight <= 0) && (viewHeight = _svg.height.baseVal.value);\r\n        let ctp = Topic.convertWindowPointToGraphic(_svg, deltaX, deltaY);\r\n        _svg.setAttribute(\"viewBox\", `${viewX - ctp.x} ${viewY - ctp.y} ${viewWidth} ${viewHeight}`);\r\n    }\r\n    //#endregion\r\n\r\n    //#region private fields\r\n    #topicContentNode = undefined;\r\n    //#endregion\r\n\r\n    //#region private methods\r\n    #getMindRootNode() {\r\n        return Topic.getMindRootNode(this.$assignedNode);\r\n    }\r\n\r\n    #getChildrenNods() {\r\n        return this[CHILDREN_GROUP_NODE] && this[CHILDREN_GROUP_NODE].querySelectorAll(\":scope > g[season-topic-global]\")\r\n    }\r\n\r\n    #calculatePositionAsRightChild(_context) {\r\n        const itemNode = this.$assignedNode;\r\n        let { y:itemOffsetY, height:itemHeight } = itemNode.getBBox();\r\n        let info = { \r\n            startX: _context.contentWidth,\r\n            endX: _context.contentWidth + _context.levelMargin,\r\n            endY: _context.listHeight,\r\n            id: this.data.id,\r\n            itemOffsetY,\r\n            itemHeight,\r\n            itemNode\r\n        };\r\n        _context.listHeight += itemHeight + _context.siblingMargin;\r\n        _context.itemList.push(info);\r\n    }\r\n    \r\n    #calculatePositionAsLeftChild(_context) {\r\n        const itemNode = this.$assignedNode;\r\n        let { y:itemOffsetY, height:itemHeight } = itemNode.getBBox();\r\n        let { x:itemContentOffsetX, width:itemContentWidth } = this.#topicContentNode.getBBox();\r\n        let info = { \r\n            startX: 0,\r\n            endX: 0 - _context.levelMargin,\r\n            endY: _context.listHeight,\r\n            id: this.data.id,\r\n            itemOffsetY,\r\n            itemHeight,\r\n            itemContentWidth: itemContentWidth + itemContentOffsetX,\r\n            itemNode\r\n        };\r\n        _context.listHeight += itemHeight + _context.siblingMargin;\r\n        _context.itemList.push(info);\r\n    }\r\n    \r\n    #balanceChildListPosition(_leftContext, _rightContext) {\r\n        if (_leftContext.listHeight > _rightContext.listHeight) {\r\n            let delta = (_leftContext.listHeight - _rightContext.listHeight) / 2;\r\n            _rightContext.itemList.forEach(item => {\r\n                item.endY += delta;\r\n            });\r\n        } else if (_rightContext.listHeight > _leftContext.listHeight) {\r\n            let delta = (_rightContext.listHeight - _leftContext.listHeight) / 2;\r\n            _leftContext.itemList.forEach(item => {\r\n                item.endY += delta;\r\n            });\r\n        }\r\n    }\r\n    \r\n    #locateChild(_context) {\r\n        _context.itemList.forEach(item => {\r\n            item.itemNode.setAttribute(\"transform\", `translate(${item.itemContentWidth ? item.endX - item.itemContentWidth : item.endX}, ${item.endY - item.itemOffsetY})`);\r\n            item.endY += item.itemHeight / 2;\r\n        });\r\n    }\r\n    \r\n    #drawChildConnectLine(_context, _childrenGroupNode, _centerY) {\r\n        _context.itemList.forEach(item => {\r\n            let lineNode = _childrenGroupNode.querySelector(`path[d-topic-id=\"${item.id}\"]`);\r\n            if (!lineNode) {\r\n                lineNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n                _childrenGroupNode.appendChild(lineNode);\r\n                lineNode.setAttribute(\"d-topic-id\", item.id);\r\n            }\r\n            lineNode.setAttribute(\"class\", \"season-topic-connect-line\");\r\n            const midX = (item.endX - item.startX) / 2 + item.startX;\r\n            lineNode.setAttribute(\"d\", `M${item.startX} ${_centerY}C${midX} ${_centerY} ${midX} ${item.endY} ${item.endX} ${item.endY}`);\r\n        });\r\n    }\r\n\r\n    #changeLevel(_newLevel) {\r\n        this[TOPIC_LEVEL] = _newLevel;\r\n        const childrenNodes = this.#getChildrenNods();\r\n        const nextLevel = _newLevel + 1;\r\n        childrenNodes && childrenNodes.forEach(item => {\r\n            let child = item && Topic.GetInstance(item);\r\n            (child instanceof Topic) && child.#changeLevel(nextLevel);\r\n        });\r\n    }\r\n\r\n    async #loadImageInStorage(_url, _href, _node, _width, _height, _config) {\r\n        try {\r\n            const storageNode = this.$assignedNode.ownerSVGElement.querySelector(\"[season-topic-image-storage]\");\r\n            if (storageNode) {\r\n                let symbolNode = storageNode.querySelector(`symbol[d-url=\"${_url}\"]`);\r\n                if (symbolNode) {\r\n                    _node.setAttribute(\"href\", \"#\" + symbolNode.getAttribute(\"id\"));\r\n                } else {\r\n                    \r\n                    const id = \"storeimg-\" + generateID();\r\n                    symbolNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"symbol\");\r\n                    symbolNode.setAttribute(\"id\", id);\r\n                    symbolNode.setAttribute(\"d-href\", _href);\r\n                    symbolNode.setAttribute(\"d-url\", _url);\r\n                    symbolNode.setAttribute(\"preserveAspectRatio\", \"none\");\r\n                    symbolNode.setAttribute(\"width\", _width);\r\n                    symbolNode.setAttribute(\"height\", _height);\r\n                    symbolNode.setAttribute(\"viewBox\", `0 0 ${_width} ${_height}`);\r\n                    symbolNode.insertAdjacentHTML(\"afterbegin\", `<use href=\"#${_config.placeholderImageId || MindmapEnvironment.DefaultConfig.placeholderImageId}\" width=\"${_width}\" height=\"${_height}\" style=\"mix-blend-mode:difference;fill:#000;\" stroke=\"none\" />`);\r\n                    storageNode.appendChild(symbolNode);\r\n                    \r\n                    _node.setAttribute(\"href\", \"#\" + id);\r\n\r\n                    const imgRet = await this.env.getImageData(_url, {type:\"png\"});\r\n\r\n                    if (imgRet) {\r\n                        const { width, height } = imgRet;\r\n                        symbolNode.setAttribute(\"width\", symbolNode.$width = width);\r\n                        symbolNode.setAttribute(\"height\", symbolNode.$height = height);\r\n                        symbolNode.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\r\n                        symbolNode.innerHTML = `<image class=\"season-topic-image\" x=\"0\" y=\"0\" width=\"${width}\" height=\"${height}\" href=\"${imgRet.data}\" />`;\r\n                    } else {\r\n                        this.env.warn(\"Fail in loading image\", _url);\r\n                    }\r\n                }\r\n            } else {\r\n                throw \"Fail in locating the storage node for images\";\r\n            }\r\n        } catch(err) {\r\n            this.env.warn(\"Exception in loadImageInStorage:\", _url, err);\r\n        }\r\n    }\r\n\r\n    #renderTopicExtensions(_extGroupNode, _config, _data, ..._args) {\r\n        if (_extGroupNode && _data) {\r\n            // peek up all extensions have been rendered\r\n            const hasExtensions = {};\r\n            let nodes = _extGroupNode.querySelectorAll(\":scope > *\");\r\n            nodes && nodes.forEach(node => {\r\n                let extension = TopicExtension.GetInstance(node);\r\n                (extension && extension.name) && (hasExtensions[extension.name] = extension);\r\n            });\r\n            // render each extension\r\n            nodes = [];\r\n            this.env.extensionFactors.forEach(extFactor => {\r\n                let extension;\r\n                let name = extFactor.$info && extFactor.$info.name;\r\n                if (name in hasExtensions) {\r\n                    extension = hasExtensions[name];\r\n                } else if (name in _data) {\r\n                    extension = extFactor.generate(_extGroupNode, TopicExtension, _data, this);\r\n                }\r\n                if (extension) {\r\n                    extension.render.apply(extension, _args);\r\n                    extension.$assignedNode.isConnected && nodes.push(extension.$assignedNode);\r\n                }\r\n            });\r\n            // locate extension\r\n            let maxHeight = 0;\r\n            nodes.forEach(node => {\r\n                let bbox = node.getBBox();\r\n                node.$width = bbox.width;\r\n                let height = (node.$height = bbox.height);\r\n                (maxHeight < height) && (maxHeight = height);\r\n            });\r\n            const padding = Number(_config.secondaryPadding) || 0;\r\n            let x = 0;\r\n            nodes.forEach(node => {\r\n                node.setAttribute(\"transform\", `translate(${x}, ${(maxHeight - node.$height) / 2})`);\r\n                x += node.$width + padding;\r\n            });\r\n        }\r\n    }\r\n\r\n    #renderTopic() {\r\n        let args = Array.prototype.slice.call(arguments, 0);\r\n        args[2] || (args[2] = this.env.config);\r\n        EBlock.prototype.render.apply(this, args);\r\n        return this;\r\n    }\r\n\r\n    * #splitTitleText(_title, _textNode, _maxWidth) {\r\n        if (_title = (_title && String(_title).trim())) {\r\n            let canvas = TitleMeasureCanvasMap.get(this.env);\r\n            (!canvas) && TitleMeasureCanvasMap.set(this.env, canvas = document.createElement(\"canvas\"));\r\n            const context2d = canvas?.getContext(\"2d\");\r\n            if (context2d) {\r\n                let textStyles = getComputedStyle(_textNode);\r\n                context2d.font = textStyles.font;\r\n                const spaceWidth = context2d.measureText(\"\\u00A0\").width;\r\n                for (let titleLine of _title.split(/\\r?\\n/)) {\r\n                    let textLen = context2d.measureText(titleLine)?.width;\r\n                    if (textLen <= _maxWidth) {\r\n                        // the text is matched to the max width, return it directly\r\n                        yield titleLine;\r\n                    } else {\r\n                        // the text is wilder than the max width, split it into multi-line\r\n                        let titleWords = titleLine.split(/\\s/).map(e => { return { text: e, width: context2d.measureText(e)?.width||0 } });\r\n                        let cacheText = \"\";\r\n                        let cacheWidth = 0;\r\n                        for (let word of titleWords) {\r\n                            if (word.width >= _maxWidth) {\r\n                                // the word is wilder than the max width, return the text in the cache first, then split the current word into multi-line \r\n                                if (cacheWidth) {\r\n                                    yield cacheText;\r\n                                }\r\n                                cacheText = \"\";\r\n                                cacheWidth = 0;\r\n                                if (word.width === _maxWidth) {\r\n                                    // the word is matched to the max width return it directly\r\n                                    yield word.text;\r\n                                } else {\r\n                                    // the word is wilder than the max width, spliting it into multi-line\r\n                                    let subTotalText = word.text;\r\n                                    let subTotalWidth = word.width;\r\n                                    do {\r\n                                        let subTotalLen = subTotalText.length;\r\n                                        if (subTotalLen === 1) {\r\n                                            yield subTotalText;\r\n                                            subTotalText = \"\";\r\n                                        } else {\r\n                                            // find a sub string which's width is not less than the max width\r\n                                            let subPos = parseInt(subTotalLen * _maxWidth / subTotalWidth);\r\n                                            let subText = subTotalText.substring(0, subPos);\r\n                                            let subWidth = context2d.measureText(subText).width;\r\n                                            while ((subPos < subTotalLen) && (subWidth < _maxWidth)) {\r\n                                                subPos += (parseInt((_maxWidth - subWidth) / (subTotalWidth - subWidth)) || 1);\r\n                                                subText = subTotalText.substring(0, subPos);\r\n                                                subWidth = context2d.measureText(subText).width;\r\n                                            }\r\n                                            if (subWidth === _maxWidth) {\r\n                                                // if the sub string is matched to the max width, return it directly\r\n                                                yield subText;\r\n                                            } else {\r\n                                                // cut down the sub string let it's width is less than the max width\r\n                                                while ((subWidth > _maxWidth) && (subPos > 1)) {\r\n                                                    subText = subTotalText.substring(0, --subPos);\r\n                                                    subWidth = context2d.measureText(subText).width;\r\n                                                }\r\n                                                if (subPos < subTotalLen) {\r\n                                                    yield subText;\r\n                                                    subTotalText = subTotalText.substring(subPos);\r\n                                                    subTotalWidth -= subWidth;\r\n                                                } else {\r\n                                                    cacheText = subTotalText;\r\n                                                    cacheWidth = subTotalWidth;\r\n                                                    subTotalText = \"\";\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    } while(subTotalText);\r\n                                }\r\n                            } else {\r\n                                // if the word is not wilder than the max width, try to combine the words in cache, \r\n                                // and return the cache when it's width is near to the max width\r\n                                cacheWidth = (cacheWidth ? (cacheWidth + spaceWidth + word.width) : word.width);\r\n                                if (cacheWidth > _maxWidth) {\r\n                                    yield cacheText;\r\n                                    cacheText = word.text;\r\n                                    cacheWidth = word.width;\r\n                                } else {\r\n                                    cacheText = (cacheText ? (cacheText + \"\\u00A0\" + word.text) : word.text);\r\n                                    if (cacheWidth === _maxWidth) {\r\n                                        yield cacheText;\r\n                                        cacheText = \"\";\r\n                                        cacheWidth = 0;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        // return the text remained in the cache\r\n                        if (cacheText) {\r\n                            yield cacheText;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region public members\r\n    /**\r\n     * @summary Create an new instance of Topic or query an exist intsance\r\n     * You should call TopicFactor.generate to create the instance of Topic instead. \r\n     * @contructor\r\n     * @param {EBlockFactor|Node} _factorOrNode The factor or the node of the exist topic\r\n     * @param {Any} _data The data of the topic\r\n     * @param {Number} _level The level of the topic\r\n     * @param {MindmapEnvironment} _env The environment of the mindmap\r\n     */\r\n    constructor (_factorOrNode, _data, _level, _env) {\r\n\r\n        super(...arguments);\r\n        \r\n        // initialize the local field and the nodes\r\n        readonlyMember(this, {\r\n            env: this.$env,\r\n            handleDomEvent: true,\r\n            eventSelectorPrefix: \":scope > [season-topic-content-group] > \"//`:not([season-topic-children-group=\"${this.blockID}\"]) `\r\n        });\r\n        const topicContentNode = (this.#topicContentNode = this.$assignedNode.querySelector(\":scope > [season-topic-content-group]\"));\r\n        \r\n        if (!this.$stubFlag) {\r\n            topicContentNode.setAttribute(\"season-topic-content-group\", this.id);\r\n\r\n            const childrenGroupNode = this[CHILDREN_GROUP_NODE];\r\n            if (childrenGroupNode) {\r\n                \r\n                childrenGroupNode.innerHTML = \"\";\r\n                childrenGroupNode.setAttribute(\"season-topic-children-group\", this.id);\r\n                \r\n                // create the children topic\r\n                if (_data.children instanceof Array) {\r\n                    const nextLevel = this[TOPIC_LEVEL] + 1;\r\n                    _data.children.forEach((item) => {\r\n                        _factorOrNode.generate(childrenGroupNode, Topic, item, nextLevel, _env);\r\n                    });\r\n                    delete _data.children;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @summary Initialize the metadata of the topic\r\n     * Do not call this method manually.\r\n     * @param {Object} _metadata The container of the metadata\r\n     * @param {Any} _data The data of the topic\r\n     * @param {Node} _node The assigned node of the topic\r\n     * @param {Number} _level The level of the topic\r\n     * @param {MindmapEnvironment} _env The environment of the mindmap\r\n     */\r\n    initMetadata(_metadata, _data, _node, _level, _env) {\r\n        assert(_env instanceof MindmapEnvironment, MindmapError, -1, \"_env must be an instance of MindmapEnvironment\");\r\n\r\n        readonlyMember(_metadata, \"env\", _env);\r\n        _metadata[CHILDREN_GROUP_NODE] = _node.querySelector(\":scope > [season-topic-children-group]\");\r\n        _metadata[TOPIC_LEVEL] = (Number(_level) || 0);\r\n        _metadata[TOPIC_DIRECTION] = undefined;\r\n        _metadata[TOPIC_FOLD] = false;\r\n\r\n        let id = _data.id;\r\n        const invalidID = ((id === undefined) || (id === null));\r\n        invalidID && (id = generateID());\r\n        try {\r\n            Object.defineProperty(_data, \"id\", {\r\n                value: id,\r\n                writable: false,\r\n                configurable: false,\r\n                enumerable: true\r\n            });\r\n        } catch(err) {\r\n            if (invalidID) {\r\n                throw err;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The ID of the topic\r\n     * @type {String}\r\n     */\r\n    get id() {\r\n        return this.data.id;\r\n    }\r\n\r\n    /**\r\n     * The level of the topic\r\n     * @type {level}\r\n     */\r\n    get level() {\r\n        return this[TOPIC_LEVEL];\r\n    }\r\n\r\n    /**\r\n     * The direction of the topic.\r\n     * true for right, false for left\r\n     * @type {Boolean}\r\n     */\r\n    get direction() {\r\n        return this[TOPIC_DIRECTION];\r\n    }\r\n\r\n    /**\r\n     * The parent topic\r\n     * @type {Topic}\r\n     */\r\n    get parentTopic() {\r\n        let parentChildrenGroupNode = this.$assignedNode.parentNode;\r\n        let parentNode = parentChildrenGroupNode && parentChildrenGroupNode.parentNode;\r\n        return (parentNode && parentNode.hasAttribute(\"season-topic-global\")) ? Topic.GetInstance(parentNode) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Indicate if the topic has any child\r\n     * @type {Boolean}\r\n     */\r\n    get hasChildren() {\r\n        const childrenNodes = this.#getChildrenNods();\r\n        return childrenNodes && (childrenNodes.length > 0);\r\n    }\r\n\r\n    /**\r\n     * The root topic\r\n     * @type {Topic}\r\n     */\r\n    get rootTopic() {\r\n        return Topic.getFirstChildTopic(this.#getMindRootNode());\r\n    }\r\n\r\n    /**\r\n     * The first child topic\r\n     * @type {Topic}\r\n     */\r\n    get firstChildTopic() {\r\n        return Topic.getFirstChildTopic(this);\r\n    }\r\n\r\n    /**\r\n     * Get the list of the children topics\r\n     * @returns {Array<Topic>} The list of the children topics\r\n     */\r\n    getChildrenTopics() {\r\n        return [...this.#getChildrenNods()].map(item => Topic.GetInstance(item));\r\n    }\r\n\r\n    /**\r\n     * Get an iterator for enumerating the children topics\r\n     * @yields {Topic} The child topic\r\n     */\r\n    * enumerateChilrenTopics() {\r\n        const childrenNodes = this.#getChildrenNods();\r\n        const count = (childrenNodes && childrenNodes.length);\r\n        for (let idx = 0; idx < count; idx++) {\r\n            let child = Topic.GetInstance(childrenNodes[idx]);\r\n            if (child instanceof Topic) {\r\n                yield child;\r\n            }\r\n        } \r\n    }\r\n\r\n    /**\r\n     * Get an iterator for enumerating the descendant topics\r\n     * @yields {Topic} The topic\r\n     */\r\n    * enumerateDescendantTopics() {\r\n        const childrenNodes = this.#getChildrenNods();\r\n        const count = (childrenNodes && childrenNodes.length);\r\n        for (let idx = 0; idx < count; idx++) {\r\n            let child = Topic.GetInstance(childrenNodes[idx]);\r\n            if (child instanceof Topic) {\r\n                yield child;\r\n                yield * child.enumerateDescendantTopics();\r\n            }\r\n        } \r\n    }\r\n\r\n    /**\r\n     * Get an iterator for enumerating the descendant topics include this instance itself\r\n     * @yields {Topic} The topic\r\n     */\r\n    * enumerateTopics() {\r\n        yield this;\r\n        yield * this.enumerateDescendantTopics();\r\n    }\r\n\r\n    /**\r\n     * The sibling topic next to this instance\r\n     * @type {Topic}\r\n     */\r\n    get nextSiblingTopic() {\r\n        for (let siblingNode = this.$assignedNode.nextSibling; siblingNode; siblingNode = siblingNode.nextSibling) {\r\n            let topic = Topic.GetInstance(siblingNode);\r\n            if (topic instanceof Topic) {\r\n                return topic;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * The sibling topic before this instance\r\n     * @type {Topic}\r\n     */\r\n    get previousSiblingTopic() {\r\n        for (let siblingNode = this.$assignedNode.previousSibling; siblingNode; siblingNode = siblingNode.previousSibling) {\r\n            let topic = Topic.GetInstance(siblingNode);\r\n            if (topic instanceof Topic) {\r\n                return topic;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Find a special topic contained in this instance\r\n     * @param {String} _id The ID of the special topic\r\n     * @returns {Topic} The target topic\r\n     */\r\n    getTopicByID(_id) {\r\n        return (String(this.id) === String(_id)) ? this : Topic.getTopicByID(this.$assignedNode, _id);\r\n    }\r\n\r\n    /**\r\n     * The node of the instance\r\n     * @type {Node}\r\n     */\r\n    get topicNode() {\r\n        return this.$assignedNode;\r\n    }\r\n\r\n    /**\r\n     * @summary Export the data of the topic\r\n     * The exposed data is include the children topic of this instance\r\n     * @param {Boolean} _removeID if remove the ID of the topic from the data\r\n     * @returns {TopicData} The data of the topic\r\n     */\r\n    exportTopicData(_removeID) {\r\n        const data = cloneObject({}, this.data);\r\n        _removeID && (delete data.id);\r\n        const children = [];\r\n        for (let childTopic of this.enumerateChilrenTopics()) {\r\n            children.push(childTopic.exportTopicData());\r\n        }\r\n        (children.length > 0) && (data.children = children);\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Collect the unused elements in the storage of the image resource\r\n     */\r\n    collectImageStorage() {\r\n        try {\r\n            const storageNode = this.$assignedNode.ownerSVGElement.querySelector(\"[season-topic-image-storage]\");\r\n            const rootNode = this.#getMindRootNode();\r\n            if (storageNode && rootNode) {\r\n                const nodeList = storageNode.querySelectorAll(\":scope > *\");\r\n                nodeList && nodeList.forEach(item => {\r\n                    let id = item.getAttribute(\"id\");\r\n                    if (id) { \r\n                        rootNode.querySelector(`use[href=\"#${id}\"]`) || item.remove();\r\n                    } else {\r\n                        item.remove();\r\n                    }\r\n                });\r\n            }\r\n        } catch(err) {\r\n            this.env.warn(\"Fail in collecting the images in the storage\", err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get an iterator for enumerating the image in the storage\r\n     * @yields {{id: String, href: String, width: Number, height: Number, sourceHRef: String}} The data of the image\r\n     */\r\n    * enumerateImageInStorage() {\r\n        try {\r\n            const storageNode = this.$assignedNode.ownerSVGElement.querySelector(\"[season-topic-image-storage]\");\r\n            if (storageNode) {\r\n                const nodeList = [...storageNode.querySelectorAll(\":scope > *\")];\r\n                for (let item of nodeList) {\r\n                    let imageNode = item.querySelector(\":scope > image\");\r\n                    yield {\r\n                        id: item.getAttribute(\"id\"),\r\n                        href: imageNode && imageNode.getAttribute(\"href\"),\r\n                        width: item.$width || Number(item.getAttribute(\"width\")) || 0,\r\n                        height: item.$height || Number(item.getAttribute(\"height\")) || 0,\r\n                        sourceURL: item.getAttribute(\"d-url\"),\r\n                        sourceHRef: item.getAttribute(\"d-href\")\r\n                    };\r\n                }\r\n            }\r\n        } catch(err) {\r\n            this.env.warn(\"Fail in enumerating the images in the storage\", err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Move this topic to the center of the viewport\r\n     * @returns {Topic} This instance\r\n     */\r\n    showInCenterOfView() {\r\n        const { width:topicWidth, height:topicHeight } = this.#topicContentNode.getBBox();\r\n        let topicCTM = this.#topicContentNode.getCTM();\r\n        let topicX = topicCTM.e / topicCTM.a;\r\n        let topicY = topicCTM.f / topicCTM.d;\r\n        const svgNode = this.#topicContentNode.ownerSVGElement;\r\n        let { x:viewX, y:viewY, width:viewWidth, height:viewHeight} = (svgNode.viewBox.baseVal || {x:0, y:0, width:0, height:0});\r\n        (viewWidth <= 0) && (viewWidth = svgNode.width.baseVal.value);\r\n        (viewHeight <= 0) && (viewHeight = svgNode.height.baseVal.value);\r\n        topicX = parseInt(topicX + topicWidth / 2);\r\n        topicY = parseInt(topicY + topicHeight / 2);\r\n        const centerX = parseInt(viewWidth / 2);\r\n        const centerY = parseInt(viewHeight / 2);\r\n        viewX -= (centerX - topicX);\r\n        viewY -= (centerY - topicY);\r\n        svgNode.setAttribute(\"viewBox\", `${viewX} ${viewY} ${viewWidth} ${viewHeight}`);\r\n\r\n        this.notify(\"topic-event-view-move\");\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Move this topic into the viewport\r\n     * @returns {Topic} This instance\r\n     */\r\n    showInView() {\r\n        Topic.showNodeInSvgView(this.#topicContentNode, this.$assignedNode.ownerSVGElement);\r\n        this.notify(\"topic-event-view-move\");\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Fire an event to notify a state\r\n     * @param {String} _event The name of the event\r\n     * @param {Any} _param The detail of the event\r\n     * @returns {Topic} This instance\r\n     */\r\n    notify(_event, _param) {\r\n        (typeof _param === \"object\") ? (_param.eventTarget = this) : (_param = {eventTarget: this});\r\n        this.fireEvent(_event, _param);\r\n        this.env.fireEvent(_event, _param);\r\n\r\n        return this;\r\n    }\r\n\r\n    [\"on-ebevent-rendering\"](_data, _context, _limitLevel, _direction, _config) {\r\n        ///////////////////////////////////////////////////////////////////////\r\n        // rendering the content of the topic\r\n        const curLevel = this[TOPIC_LEVEL];\r\n        this.$assignedNode.setAttribute(\"season-topic-global\", _data.id);\r\n        this.$assignedNode.setAttribute(\"d-topic-level\", curLevel);\r\n        (curLevel > 0) && (this[TOPIC_DIRECTION] = _direction);\r\n        const topicContentNode = this.#topicContentNode;\r\n        topicContentNode.setAttribute(\"d-topic-id\", _data.id);\r\n        topicContentNode.setAttribute(\"d-topic-level\", curLevel);\r\n        const topicContentComputedStyles = getComputedStyle(topicContentNode);\r\n        // calculating the suitable width of the line\r\n        const suitableLineWidth = Math.max((Number(_data.image?.width)||0), \r\n            (Number(_data.customWidth) || Number(Object(/^\\d+/ig.exec(topicContentComputedStyles?.maxWidth))[0]) || Number(_config.maxTopicLineWidth) || MindmapEnvironment.DefaultConfig.maxTopicLineWidth));\r\n        // render the content of the title\r\n        const titleNode = topicContentNode.querySelector(\".season-topic-title\");\r\n        if (titleNode) {\r\n            titleNode.innerHTML = \"\";\r\n            let tspanList = [];\r\n            for (let titleLine of this.#splitTitleText(_data.title, titleNode, suitableLineWidth)) {\r\n                let tspan = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\r\n                if (tspan) {\r\n                    tspan.textContent = titleLine;\r\n                    tspan.setAttribute(\"x\", \"0\");\r\n                    (tspanList.length > 0) && tspan.setAttribute(\"dy\", \"1.1em\");\r\n                }\r\n                tspanList.push(tspan);\r\n            }\r\n            if (tspanList.length > 0) {\r\n                titleNode.append(...tspanList);\r\n            } else {\r\n                titleNode.innerHTML = \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\";\r\n            }\r\n        }\r\n        const { width:titleWidth, height:titleHeight } = titleNode.getBBox();\r\n        // render the extends\r\n        const extendsNode = topicContentNode.querySelector(\"[season-topic-extends]\");\r\n        this.#renderTopicExtensions(extendsNode, _config, _data, this, _limitLevel, _direction);\r\n        const { width:extendsWidth, height:extendsHeight } = extendsNode.getBBox();\r\n        let titleTop;\r\n        // render the image\r\n        let imageWidth = 0, imageHeight = 0, topicImageNode;\r\n        const imageRes = _data.image && this.env.translateHRefToURL(_data.image.src);\r\n        if (imageRes) {\r\n            topicImageNode = this.acquireNode(\":scope > [season-topic-content-group] > .season-topic-image\", topicContentNode, \"beforeend\");\r\n            imageWidth = (Number(_data.image.width) || suitableLineWidth);\r\n            imageHeight = (Number(_data.image.height) || 0);\r\n            imageHeight || (imageHeight = imageWidth / 4 * 3);\r\n            if (topicImageNode) {\r\n                topicImageNode.setAttribute(\"width\", imageWidth);\r\n                topicImageNode.setAttribute(\"height\", imageHeight);\r\n                this.#loadImageInStorage(imageRes.destination, imageRes.source, topicImageNode, imageWidth, imageHeight, _config);\r\n                titleTop = _config.padding * 2 + imageHeight;\r\n            } else {\r\n                titleTop = _config.padding;\r\n            }\r\n        } else {\r\n            topicImageNode = this.acquireNode(\":scope > [season-topic-content-group] > .season-topic-image\");\r\n            topicImageNode && topicImageNode.remove();\r\n            topicImageNode = undefined;\r\n            titleTop = _config.padding;\r\n        }\r\n        // locate the content\r\n        let titleAndExtendWidth = titleWidth + ((extendsWidth > 0) ? (_config.padding + extendsWidth) : 0);\r\n        let maxWidth;\r\n        if (titleAndExtendWidth > suitableLineWidth) {\r\n            // the title + extends line is too long, so split them to two lines\r\n            maxWidth = Math.max(titleWidth, imageWidth, extendsWidth);\r\n            titleNode.setAttribute(\"transform\", `translate(${(titleWidth >= maxWidth) ? _config.padding : (_config.padding + (maxWidth - titleWidth) / 2)}, ${titleTop})`);\r\n            extendsNode.setAttribute(\"transform\", `translate(${(extendsWidth >= maxWidth) ? _config.padding : (_config.padding + (maxWidth - extendsWidth) / 2)}, ${titleTop += _config.padding + titleHeight})`);\r\n            titleTop += extendsHeight;\r\n        } else {\r\n            // the title and extends are in the same line\r\n            let centerPadding;\r\n            if (titleAndExtendWidth < imageWidth) {\r\n                centerPadding = _config.padding + (imageWidth - titleAndExtendWidth) / 2;\r\n                maxWidth = imageWidth;\r\n            } else {\r\n                centerPadding = _config.padding;\r\n                maxWidth = titleAndExtendWidth;\r\n            }\r\n            titleNode.setAttribute(\"transform\", `translate(${centerPadding}, ${titleTop})`);\r\n            if (titleHeight >= extendsHeight) {\r\n                extendsNode.setAttribute(\"transform\", `translate(${centerPadding + _config.padding + titleWidth}, ${titleTop + (titleHeight - extendsHeight) / 2})`);\r\n                titleTop += titleHeight;\r\n            } else {\r\n                extendsNode.setAttribute(\"transform\", `translate(${centerPadding + _config.padding + titleWidth}, ${titleTop})`);\r\n                titleTop += extendsHeight;\r\n            }\r\n        }\r\n        topicImageNode && topicImageNode.setAttribute(\"transform\", `translate(${(imageWidth >= maxWidth) ? _config.padding : (_config.padding + ((maxWidth - imageWidth) / 2))}, ${_config.padding})`);\r\n        const boxNode = topicContentNode.querySelector(\".season-topic-box\");\r\n        const boxWidth = (_context.contentWidth = _config.padding * 2 + maxWidth);\r\n        const boxHeight = (_context.contentHeight = _config.padding + titleTop);\r\n        if (boxNode) {\r\n            boxNode.setAttribute(\"href\", `#${_config.topicBoxRefID || \"topic-default-box\"}`);\r\n            boxNode.setAttribute(\"width\", boxWidth);\r\n            boxNode.setAttribute(\"height\", boxHeight);\r\n            let style = boxNode.style;\r\n            style.setProperty(\"--topic-rect-width\", `${boxWidth}px`);\r\n            style.setProperty(\"--topic-rect-height\", `${boxHeight}px`);\r\n            style.setProperty(\"--topic-title-top\", `${titleTop}px`);\r\n        }\r\n        topicContentNode.setAttribute(\"d-topic-rect-width\", boxWidth);\r\n        topicContentNode.setAttribute(\"d-topic-rect-height\", boxHeight);\r\n\r\n        // render the fold icon\r\n        const childrenNodes = (_context.childrenNodes = this.#getChildrenNods());\r\n        let isFold;\r\n        if ((curLevel > 0) && childrenNodes && (childrenNodes.length > 0)) {\r\n            isFold = !((_limitLevel > curLevel) || ((isNaN(_limitLevel) || (_limitLevel <= 0)) && (!this[TOPIC_FOLD])));\r\n            this[TOPIC_FOLD] = isFold;\r\n            const topicFoldNode = this.acquireNode(':scope > [season-topic-content-group] > [season-topic-content-type=\"fold\"]', this.#topicContentNode, \"beforeend\");\r\n            if (topicFoldNode) {\r\n                topicFoldNode.setAttribute(\"href\", isFold ? \"#topic-fold-icon-plus\" : \"#topic-fold-icon-minus\");\r\n                topicContentNode.insertAdjacentElement(\"beforeend\", topicFoldNode);\r\n                const { width:foldWidth, height:foldHeight } = topicFoldNode.getBBox();\r\n                topicFoldNode.setAttribute(\"transform\", `translate(${_direction ? (boxWidth - (foldWidth / 2)) : (0 - foldWidth / 2)}, ${(boxHeight - foldHeight) / 2})`);\r\n            }\r\n        } else {\r\n            isFold = (this[TOPIC_FOLD] = false);\r\n            const topicFoldNode = this.acquireNode(':scope > [season-topic-content-group] > [season-topic-content-type=\"fold\"]');\r\n            topicFoldNode && topicFoldNode.remove();\r\n        }\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        // invoke the extend rendering functions\r\n        this.env.fireEvent(\"topic-rendering-extend\", {\r\n            topic: this,\r\n            context: _context,\r\n            limitLevel: _limitLevel,\r\n            direction: _direction\r\n        });\r\n\r\n        ///////////////////////////////////////////////////////////////////////\r\n        // triger rendering the children topics\r\n        const childrenGroupNode = this[CHILDREN_GROUP_NODE];\r\n        if (!isFold) {\r\n            try {\r\n                childrenGroupNode && childrenGroupNode.isConnected || this.$assignedNode.insertAdjacentElement(\"afterbegin\", childrenGroupNode);\r\n                const dirIndexThresold = (_context.dirIndexThresold = parseInt((childrenNodes.length + 1) / 2));\r\n                const rightPriority = (_context.rightPriority = (String(_config.directionPriority).toLowerCase() !== \"left\"));\r\n                childrenNodes.forEach((item, index) => {\r\n                    let childTopic = Topic.GetInstance(item);\r\n                    childTopic && childTopic.#renderTopic(_limitLevel, (this[TOPIC_LEVEL] <= 0) ? (rightPriority ^ (index >= dirIndexThresold)) : _direction);\r\n                });\r\n            } catch (_err) {\r\n                console.error(\"Exception raised in rendering children\", _err);\r\n            }\r\n        } else {\r\n            childrenGroupNode && childrenGroupNode.remove();\r\n        }\r\n    }\r\n\r\n    [\"on-ebevent-rendered\"](_data, _context, _limitLevel, _direction, _config) {\r\n        const childrenNodes = _context.childrenNodes;\r\n        const childrenGroupNode = this[CHILDREN_GROUP_NODE];\r\n        if (childrenNodes && (childrenNodes.length > 0) && childrenGroupNode) {\r\n            let siblingMargin, levelMargin;\r\n            if ((this.level + 1) >= _config.secondaryTopicLevel) {\r\n                siblingMargin = _config.secondarySiblingMargin;\r\n                levelMargin = _config.secondaryLevelMargin;\r\n            } else {\r\n                siblingMargin = _config.siblingMargin;\r\n                levelMargin = _config.levelMargin;\r\n            }\r\n            //const { width:contentWidth, height:contentHeight } = this.#topicContentNode.getBBox();\r\n            const { contentWidth, contentHeight} = _context;\r\n            \r\n            // locate each child and draw the connect line\r\n            if (this[TOPIC_LEVEL] < 1) {\r\n                // the root topic should divid the children to left and right\r\n                let leftContext = {\r\n                    itemList: [],\r\n                    _config,\r\n                    siblingMargin,\r\n                    levelMargin,\r\n                    contentWidth,\r\n                    listHeight: 0\r\n                };\r\n                let rightContext = {\r\n                    itemList: [],\r\n                    _config,\r\n                    siblingMargin,\r\n                    levelMargin,\r\n                    contentWidth,\r\n                    listHeight: 0\r\n                };\r\n                const dirIndexThresold = _context.dirIndexThresold;\r\n                const rightPriority = _context.rightPriority;\r\n                childrenNodes.forEach((item, index) => {\r\n                    let childTopic = Topic.GetInstance(item);\r\n                    if (childTopic) {\r\n                        (rightPriority ^ (index >= dirIndexThresold))\r\n                            ? childTopic.#calculatePositionAsRightChild(rightContext) \r\n                            : childTopic.#calculatePositionAsLeftChild(leftContext);\r\n                    }\r\n                });\r\n                leftContext.listHeight -= siblingMargin;\r\n                rightContext.listHeight -= siblingMargin;\r\n                this.#balanceChildListPosition(leftContext, rightContext);\r\n                this.#locateChild(rightContext);\r\n                this.#locateChild(leftContext);\r\n                const centerY = ((rightContext.listHeight >= leftContext.listHeight) ? rightContext.listHeight : leftContext.listHeight) / 2;\r\n                this.#drawChildConnectLine(rightContext, childrenGroupNode, centerY);\r\n                this.#drawChildConnectLine(leftContext, childrenGroupNode, centerY);\r\n            } else if (!this[TOPIC_FOLD]) {\r\n                // the no-root topic locatet the children in the specail side\r\n                let context = {\r\n                    itemList: [],\r\n                    _config,\r\n                    siblingMargin,\r\n                    levelMargin,\r\n                    contentWidth,\r\n                    listHeight: 0\r\n                };\r\n                _direction \r\n                    ? _context.childrenNodes.forEach(item => {\r\n                        let childTopic = Topic.GetInstance(item);\r\n                        childTopic && childTopic.#calculatePositionAsRightChild(context);\r\n                    }) : _context.childrenNodes.forEach(item => {\r\n                        let childTopic = Topic.GetInstance(item);\r\n                        childTopic && childTopic.#calculatePositionAsLeftChild(context);\r\n                    });\r\n                context.listHeight -= siblingMargin;\r\n                this.#locateChild(context);\r\n                const centerY = context.listHeight / 2;\r\n                this.#drawChildConnectLine(context, childrenGroupNode, centerY);\r\n            }\r\n\r\n            // locate the global children group\r\n            const { y:childrenTop, height:childrenHeight } = childrenGroupNode.getBBox();\r\n            childrenGroupNode.setAttribute(\"transform\", `translate(0, ${(contentHeight - (childrenHeight + childrenTop)) / 2})`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Render all the topic\r\n     * @returns {Topic} This instance\r\n     */\r\n    render() {\r\n        this.env.fireEvent(\"topic-event-before-render\");\r\n        ((this[TOPIC_LEVEL] < 1) ? this : this.rootTopic).#renderTopic(...arguments);\r\n        this.env.fireEvent(\"topic-event-after-render\");\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get the focus topic\r\n     * @returns {Topic} The focus topic\r\n     */\r\n    getFocus() {\r\n        return Topic.getFocusTopic(this.#getMindRootNode());\r\n    }\r\n\r\n    /**\r\n     * Kill the focus of this topic\r\n     * @returns {Topic} This instance\r\n     */\r\n    killFocus() {\r\n        if (this.$assignedNode.hasAttribute(FOCUS_ATTR_KEY) || this.#topicContentNode.hasAttribute(FOCUS_ATTR_KEY)) {\r\n            this.notify(\"topic-event-cancel-edit\");\r\n            this.notify(\"topic-event-kill-focus\");\r\n            \r\n            this.$assignedNode.removeAttribute(FOCUS_ATTR_KEY);\r\n            this.#topicContentNode.removeAttribute(FOCUS_ATTR_KEY);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the focus of this topic\r\n     * @param {Boolean} _resultForChecked Optional. Indicate if the result is the result of the setting action\r\n     * @returns {Boolean|Topic} If the _resultForCheched is true, the function return true means the topic was not focus and the setting action is successful. If the _resultForChecked is not true, the function return the instance of this topic.\r\n     */\r\n    setFocus(_resultForChecked) {\r\n        const oriFocus = this.getFocus();\r\n        if (!this.equal(oriFocus)) {\r\n            (oriFocus instanceof Topic) && oriFocus.killFocus();\r\n\r\n            this.$assignedNode.setAttribute(FOCUS_ATTR_KEY, \"true\");\r\n            this.#topicContentNode.setAttribute(FOCUS_ATTR_KEY, \"true\");\r\n\r\n            this.notify(\"topic-event-set-focus\");\r\n\r\n            return _resultForChecked ? true : this;\r\n        } else {\r\n            return _resultForChecked ? false : this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if the topic has focus\r\n     * @type {Boolean}\r\n     */\r\n    get hasFocus() {\r\n        return this.$assignedNode.hasAttribute(FOCUS_ATTR_KEY);\r\n    }\r\n\r\n    /**\r\n     * Create a child topic in this topic.\r\n     * If the data contains the children, all the descendant topics will be created.\r\n     * @param {TopicData} _data The data of the child topic\r\n     * @param {Topic} _nextSiblingTopic Optional. Indicate the new topic insert before which topic. The new topic will add at the end of the children topics if the argument is ignored.\r\n     * @param {Boolean} _forbitNotify Set true to forbit emitting the notification event\r\n     * @returns {Topic} The new topic\r\n     */\r\n    createChild(_data, _nextSiblingTopic, _forbitNotify) {\r\n        const newTopic = this.factor.generate(this[CHILDREN_GROUP_NODE], Topic, _data, this[TOPIC_LEVEL] + 1, this.env);\r\n        if (newTopic) {\r\n            (_nextSiblingTopic instanceof Topic) && this.equal(_nextSiblingTopic.parentTopic) && _nextSiblingTopic.$assignedNode.insertAdjacentElement(\"beforebegin\", newTopic.$assignedNode);\r\n            (!_forbitNotify) && newTopic.notify(\"topic-event-change\", {\r\n                action: \"create\"\r\n            });\r\n        }\r\n        return newTopic;\r\n    }\r\n\r\n    /**\r\n     * @summary Change the data of the topic\r\n     * It's the best practice to change the data of the topic by this fucntion. Changing the data directly by the data member will not notify the changing singal to the watchers.\r\n     * @param {String} _key The key of the member in the data\r\n     * @param {Any} _newVal The new value of the member. If this argument is undefined, the member with the key will be deleted.\r\n     * @param {Boolean} _forbitNotify Set true to forbit emitting the notification event\r\n     * @returns {Topic} This instance\r\n     */\r\n    changeData(_key, _newVal, _forbitNotify) {\r\n        if (_key) {\r\n            const originValue = (_forbitNotify || cloneObject({}, this.data));\r\n            if (undefined === _newVal) {\r\n                delete this.data[_key];\r\n            } else {\r\n                this.data[_key] = _newVal;\r\n            }\r\n            (!_forbitNotify) && this.notify(\"topic-event-change\", {\r\n                action: \"changeData\",\r\n                key: _key,\r\n                originValue\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Move the topic to an other position\r\n     * @param {Topic} _parentTopic The destination parent topic\r\n     * @param {Topic} _nextSiblingTopic Optional. The destination sibling topic. The topic will move to the end of the _parentTopic's children if this argument is ignored.\r\n     * @param {Boolean} _forbitNotify Set true to forbit emitting the notification event\r\n     * @returns {Topic} This instance\r\n     */\r\n    moveTo(_parentTopic, _nextSiblingTopic, _forbitNotify) {\r\n        if (_parentTopic instanceof Topic) {\r\n\r\n            const originParent = this.parentTopic;\r\n            const originSibling = this.nextSiblingTopic;\r\n            \r\n            if (!Topic.equal(originParent, _parentTopic)) {\r\n                let parentChildrenGroupNode = this.$assignedNode.parentNode;\r\n                let connectLineNode = parentChildrenGroupNode && parentChildrenGroupNode.querySelector(`path[d-topic-id=\"${this.id}\"]`);\r\n                connectLineNode && connectLineNode.remove();\r\n            }\r\n\r\n            if (_nextSiblingTopic && Topic.equal(_nextSiblingTopic.parentTopic, _parentTopic)) {\r\n                _nextSiblingTopic.$assignedNode.insertAdjacentElement(\"beforebegin\", this.$assignedNode);\r\n            } else {\r\n                _parentTopic[CHILDREN_GROUP_NODE] && _parentTopic[CHILDREN_GROUP_NODE].insertAdjacentElement(\"beforeend\", this.$assignedNode);\r\n            }\r\n            this.#changeLevel(_parentTopic[TOPIC_LEVEL] + 1);\r\n\r\n            (!_forbitNotify) && this.notify(\"topic-event-change\", {\r\n                action: \"move\",\r\n                originParent,\r\n                originSibling\r\n            });\r\n        } else {\r\n            this.env.warn(\"No effect if the _parentTopic is not an instance of Topic\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Drop the topic\r\n     * @param {Function} _rootChecker Optional. If you want to drop the root topic, you should pass a function impelement increasing action as this argument.\r\n     * @param {Boolean} _forbitNotify Set true to forbit emitting the notification event\r\n     */\r\n    drop(_rootChecker, _forbitNotify) {\r\n        let rndCode;\r\n        if ((this.level > 0) \r\n            || ((typeof _rootChecker === \"function\") \r\n                && (_rootChecker(rndCode = parseInt(Math.random() * 100)) === (rndCode + 1)))) {\r\n\r\n            (this.level > 0) && (!_forbitNotify) && this.notify(\"topic-event-change\", {\r\n                action: \"drop\",\r\n            });\r\n\r\n            this.killFocus();\r\n\r\n            for (let descendant of this.enumerateDescendantTopics()) {\r\n                descendant[CHILDREN_GROUP_NODE] = undefined;\r\n                descendant.unmount();\r\n            }\r\n\r\n            const parent = this.parentTopic;\r\n            if (parent) {\r\n                let connectLineNode = parent[CHILDREN_GROUP_NODE].querySelector(`path[d-topic-id=\"${this.id}\"]`);\r\n                connectLineNode && connectLineNode.remove();\r\n            }\r\n\r\n            this[CHILDREN_GROUP_NODE] = undefined;\r\n            this.unmount();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the rect of the topic in the screen\r\n     * @param {String} _type Optional. The selector to matche the content of the topic. The \".season-topic-box\" will be taken as default.\r\n     * @returns {DOMRect} The destination rect\r\n     */\r\n    getRect(_type) {\r\n        let node = (_type ? this.#topicContentNode.querySelector(_type)\r\n                          : (this.#topicContentNode.querySelector(\".season-topic-box\") || this.#topicContentNode));\r\n        let rect = node && node.getBoundingClientRect();\r\n        if (rect)\r\n        {\r\n            if (!_type || (_type === \".season-topic-box\"))\r\n            {\r\n                let width = Number(this.#topicContentNode.getAttribute(\"d-topic-rect-width\"));\r\n                let height = Number(this.#topicContentNode.getAttribute(\"d-topic-rect-height\"));\r\n                width && (rect.width = width);\r\n                height && (rect.height = height);\r\n            }\r\n            return rect;\r\n        }\r\n        else\r\n        {\r\n            return new DOMRect();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the box of the topic\r\n     * @param {String} _type Optional. The selector to matche the content of the topic. The \".season-topic-box\" will be taken as default.\r\n     * @returns {SVGRect} The destination box\r\n     */\r\n    getBBox(_type) {\r\n        let node = (_type ? this.#topicContentNode.querySelector(_type)\r\n                          : (this.#topicContentNode.querySelector(\".season-topic-box\") || this.#topicContentNode));\r\n        let box = (node instanceof SVGGraphicsElement) && node.getBBox();\r\n        if (box)\r\n        {\r\n            if (!_type || (_type === \".season-topic-box\"))\r\n            {\r\n                let width = Number(this.#topicContentNode.getAttribute(\"d-topic-rect-width\"));\r\n                let height = Number(this.#topicContentNode.getAttribute(\"d-topic-rect-height\"));\r\n                width && (box.width = width);\r\n                height && (box.height = height);\r\n            }\r\n            return box;\r\n        }\r\n        else\r\n        {\r\n            return {x:0,y:0,width:0,height:0};\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the rect of the topic in the svg image\r\n     * @param {String} _type Optional. The selector to matche the content of the topic. The \".season-topic-box\" will be taken as default.\r\n     * @returns {{x: Number, y: Number, width: Number, height: Number}} The destination rect\r\n     */\r\n    getGraphicRect(_type) {\r\n        let node = (_type ? this.#topicContentNode.querySelector(_type)\r\n                          : (this.#topicContentNode.querySelector(\".season-topic-box\") || this.#topicContentNode));\r\n\r\n        if (node instanceof SVGGraphicsElement) {\r\n            let ctm = (node.getCTM() || node.getScreenCTM());\r\n            let bbox = node.getBBox();\r\n            const svgCTM = this.#topicContentNode.ownerSVGElement.getScreenCTM().inverse();\r\n            const { e:x, f:y } = svgCTM.translate(ctm.e, ctm.f);\r\n            let { e:width, f:height} = ctm.translate(bbox.width, bbox.height);\r\n            if (ctm && (!_type || (_type === \".season-topic-box\")))\r\n            {\r\n                let n = Number(this.#topicContentNode.getAttribute(\"d-topic-rect-width\"));\r\n                n && (width = n);\r\n                n = Number(this.#topicContentNode.getAttribute(\"d-topic-rect-height\"));\r\n                n && (height = n);\r\n            }\r\n            else\r\n            {\r\n                width -= ctm.e, height -= ctm.f;\r\n            }\r\n            return { x, y, width, height };\r\n        } else {\r\n            return { x: 0, y: 0, width: 0, height: 0 };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the transform matrix of the topic\r\n     * @param {String} _type Optional. The selector to matche the content of the topic. The \".season-topic-box\" will be taken as default.\r\n     * @returns {DOMMatrix} The destination matrix\r\n     */\r\n    getMatrix(_type) {\r\n        let node = (_type ? this.#topicContentNode.querySelector(_type)\r\n                          : (this.#topicContentNode.querySelector(\".season-topic-box\") || this.#topicContentNode));\r\n        let ctm = (node instanceof SVGGraphicsElement) && (node.getCTM() || node.getScreenCTM());\r\n        return ctm || new DOMMatrix([1, 0, 0, 1, 0, 0]);\r\n    }\r\n\r\n    /**\r\n     * Get the rect of the topic in the viewport\r\n     * @param {String} _type Optional. The selector to matche the content of the topic. The \".season-topic-box\" will be taken as default.\r\n     * @returns {{x: Number, y: Number, width: Number, height: Number}} The destination rect\r\n     */\r\n    getRectInViewport(_type) {\r\n        let node = (_type ? this.#topicContentNode.querySelector(_type)\r\n                          : (this.#topicContentNode.querySelector(\".season-topic-box\") || this.#topicContentNode));\r\n\r\n        if (node instanceof SVGGraphicsElement) {\r\n            let ctm = (node.getCTM() || node.getScreenCTM());\r\n            let bbox = node.getBBox();\r\n            let pt = ctm.translate(bbox.x, bbox.y);\r\n            let et = ctm.translate(bbox.x + bbox.width, bbox.y + bbox.height);\r\n            if (_type && (_type !== \".season-topic-box\"))\r\n            {\r\n                return { x: pt.e, y: pt.f, width: et.e - pt.e, height: et.f - pt.f };\r\n            }\r\n            else\r\n            {\r\n                let width = Number(this.#topicContentNode.getAttribute(\"d-topic-rect-width\"));\r\n                let height = Number(this.#topicContentNode.getAttribute(\"d-topic-rect-height\"));\r\n                return { x: pt.e, y: pt.f, width: width || (et.e - pt.e), height: height || (et.f - pt.f) };\r\n            }\r\n        } else {\r\n            return { x: 0, y: 0, width: 0, height: 0 };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the box of the global stage of this topic\r\n     * @returns {{x: Number, y: Number, width: Number, height: Number}} The destination rect\r\n     */\r\n    getGlobalRect() {\r\n        const rootNode = this.#getMindRootNode();\r\n        const rect = rootNode ? rootNode.getBBox() : {x:0, y:0, width:0, height:0};\r\n        let n = Number(this.#topicContentNode.getAttribute(\"d-topic-rect-width\"));\r\n        n && (rect.width = n);\r\n        n = Number(this.#topicContentNode.getAttribute(\"d-topic-rect-height\"));\r\n        n && (rect.height = n);\r\n    }\r\n\r\n    /**\r\n     * The visible state of the topic\r\n     * @type {Boolean}\r\n     */\r\n    set visible(_val) {\r\n        const display = (_val ? \"\" : \"none\");\r\n        this.$assignedNode.style.display = display;\r\n        const lineNode = this.$assignedNode.parentNode.querySelector(`path[d-topic-id=\"${this.id}\"]`);\r\n        lineNode && (lineNode.style.display = display);\r\n    }\r\n\r\n    /**\r\n     * The visible state of the topic\r\n     * @ignore\r\n     */\r\n    get visible() {\r\n        return this.$assignedNode.style.display != \"none\";\r\n    }\r\n\r\n    /**\r\n     * Get an instance of the special extension element in this topic\r\n     * @param {String} _extensionName The name of the extension element. such as \"task-marker\", \"priority\", and so on.\r\n     * @returns {TopicExtension} The instance of the extension element\r\n     */\r\n    getExtensionInstance(_extensionName) {\r\n        if (_extensionName) {\r\n            let ret = undefined;\r\n            try {\r\n                const extendsNode = this.#topicContentNode.querySelector(\"[season-topic-extends]\");\r\n                const nodes = extendsNode && extendsNode.querySelectorAll(\":scope > *\");\r\n                nodes && nodes.forEach(node => {\r\n                    let extension = TopicExtension.GetInstance(node);\r\n                    if (extension && (extension.name === _extensionName)) {\r\n                        ret = extension;\r\n                        throw null;\r\n                    }\r\n                });\r\n            } catch (err) {\r\n                err && this.env.warn(\"Fail in get extension instance of\", _extensionName, err);\r\n            }\r\n            return ret;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Export the image of this topic\r\n     * @param {Object} _opt Optional. The options\r\n     * @param {String} _opt.fill The color of the background\r\n     * @param {String} _opt.type Optional. The type of the destination image. Such as png, jpeg, and so on\r\n     * @returns {Promise<{width:Number, height:Number: data:Any}>} The result\r\n     */\r\n    exportImage(_opt) {\r\n        let hasFocus = this.hasFocus;\r\n        this.env.fireEvent(\"topic-event-before-render\");\r\n        hasFocus && this.killFocus();\r\n        let ret;\r\n        try {\r\n            _opt || (_opt = {});\r\n            const srcSVG = this.$assignedNode.ownerSVGElement;\r\n            const cloneSVG = srcSVG.cloneNode(true);\r\n            const stage = cloneSVG.querySelector(\"g[season-topic-root-node]\");\r\n            if (stage) {\r\n                const { x, y, width, height } = this.$assignedNode.getBBox();\r\n                cloneSVG.setAttribute(\"overflow\", \"hidden\");\r\n                cloneSVG.setAttribute(\"width\", width);\r\n                cloneSVG.setAttribute(\"height\", height);\r\n                cloneSVG.setAttribute(\"viewBox\", `${x} ${y} ${width} ${height}`);\r\n                cloneSVG.style.fontSize = getComputedStyle(srcSVG)[\"font-size\"];\r\n                stage.innerHTML = \"\";\r\n                const cloneTopicNode = this.$assignedNode.cloneNode(true);\r\n                cloneTopicNode.removeAttribute(\"transform\");\r\n                cloneTopicNode.style.transform = \"\";\r\n                stage.appendChild(cloneTopicNode);\r\n                stage.querySelectorAll(\"[season-topic-focus]\").forEach(item => item.removeAttribute(\"season-topic-focus\"));\r\n                const serializer = new XMLSerializer();\r\n                const source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + serializer.serializeToString(cloneSVG);\r\n                ret = this.env.getImageData(\"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source), Object.assign({}, _opt, {\r\n                    width, \r\n                    height\r\n                }));\r\n            }\r\n        } catch (err) {\r\n            ret = Promise.resolve(undefined);\r\n            this.env.warn(\"Exception raised in export image from topic\", err);\r\n        }\r\n        hasFocus && this.setFocus();\r\n        this.env.fireEvent(\"topic-event-after-render\");\r\n        return ret;\r\n    }\r\n    \r\n    [\"on-topic-domevent-click\"](_eventDetail) {\r\n        _eventDetail.preventDefault = true;\r\n        if (!this.setFocus(true)) {\r\n            const triggerContentType = _eventDetail.triggerContentType;\r\n            if (triggerContentType === \"fold\") {\r\n                this[TOPIC_FOLD] = !this[TOPIC_FOLD];\r\n                this.render();\r\n            } else {\r\n                _eventDetail.extensionInstance = this.getExtensionInstance(triggerContentType);\r\n                this.notify(\"topic-event-trigger\", _eventDetail);\r\n            }\r\n        } else {\r\n            _eventDetail.triggerContentType = undefined;\r\n            this.notify(\"topic-event-trigger\", _eventDetail);\r\n        }\r\n    }\r\n\r\n    [\"on-topic-domevent-dblclick\"](_eventDetail) {\r\n        _eventDetail.preventDefault = true;\r\n        if (this.env.editable) {\r\n            this.showInView();\r\n            this.notify(\"topic-event-edit\", _eventDetail);\r\n        }\r\n    }\r\n\r\n    [\"on-topic-domevent-mousedown\"](_eventDetail) {\r\n        const originEvent = _eventDetail.originEvent;\r\n        if ((originEvent.buttons === 1) && (!this.env.dragContext) && this.env.editable && this.env.dragable && (this[TOPIC_LEVEL] > 0)) {\r\n            const dragContext = {\r\n                sourceTopic: this,\r\n                parentTopic: this.parentTopic,\r\n                draging: false,\r\n                timeStamp: Date.now()\r\n            };\r\n            this.env.dragContext = dragContext;\r\n        }\r\n    }\r\n\r\n    [\"on-topic-domevent-mousemove\"](_eventDetail) {\r\n        const dragContext = this.env.dragContext;\r\n        if (dragContext && !dragContext.draging) {\r\n            const config = this.env.config;\r\n            const deltaTime = Date.now() - dragContext.timeStamp;\r\n            if ((this.hasFocus && (deltaTime >= config.dragStartFocusFilterTimer)) || (deltaTime >= config.dragStartNoFocusFilterTimer)) {\r\n                if (this.equal(dragContext.sourceTopic)) {\r\n                    this.notify(\"topic-event-cancel-edit\");\r\n                    _eventDetail.preventDefault = true;\r\n                    dragContext.draging = true;\r\n                    this.factor.prepareDragTipElements(this, dragContext);\r\n                    this.visible = false;\r\n                } else {\r\n                    this.factor.clearDragContext(this.env);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    [\"on-topic-domevent-mouseover\"](_eventDetail) {\r\n        const dragContext = this.env.dragContext;\r\n        if (dragContext && dragContext.draging && !this.equal(dragContext.parentTopic)) {\r\n            this.factor.clearDragoverTimer(dragContext);\r\n\r\n            dragContext.dragoverTopic = this;\r\n            dragContext.dragoverTimer = setTimeout(() => {\r\n                dragContext.parentTopic = dragContext.dragoverTopic;\r\n                this.factor.updateDragTipElements(dragContext);\r\n                this.factor.clearDragoverTimer(dragContext);\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    [\"on-topic-domevent-mouseout\"](_eventDetail) {\r\n        const dragContext = this.env.dragContext;\r\n        if (dragContext && this.equal(dragContext.dragoverTopic)) {\r\n            this.factor.clearDragoverTimer(dragContext);\r\n        }\r\n    }\r\n    //#endregion\r\n}","import { readonlyMember } from \"../thirdpart/toolkits/src/readonly\";\r\n\r\nexport function functionWithBindMap(_func) {\r\n    const map = new WeakMap();\r\n\r\n    return readonlyMember(_func, {\r\n        binding(_obj) {\r\n            if (!map.has(_obj)) {\r\n                let fn = _func.bind(_obj);\r\n                map.set(_obj, fn);\r\n                return fn;\r\n            } else {\r\n                return map.get(_obj);\r\n            }\r\n        },\r\n\r\n        deleteBinding(_obj) {\r\n            return map.delete(_obj);\r\n        }\r\n    });\r\n}\r\n\r\nconst NormalizeDialogBubbleRaiseEdgeValues = [\"top\", \"left\", \"right\", \"bottom\"];\r\n\r\nfunction calcDialogBubbleRaiseDashArray(_total, _cornerRadius, _raiseOffset, _raiseBase) {\r\n    _total -= _cornerRadius * 2;\r\n    let middle = _total / 2;\r\n    (_raiseBase + _raiseBase > _total) && (_raiseBase = middle);\r\n    let dash1 = middle + _raiseOffset - _raiseBase;\r\n    (dash1 < 0) && (dash1 = 0);\r\n    let dash2 = _total - dash1 - _raiseBase * 2;\r\n    if (dash2 < 0) {\r\n        dash2 = 0;\r\n        dash1 = _total - _raiseBase * 2;\r\n    }\r\n    return [dash1, dash2];\r\n}\r\n\r\nexport function generateDialogBubblePath(_x, _y, _width, _height, _cornerRadius, _raiseHeight, _raiseBase, _raiseOffset, _raiseEbge) {\r\n    NormalizeDialogBubbleRaiseEdgeValues.includes(_raiseEbge) || (_raiseEbge = \"top\");\r\n    const path = [];\r\n    path.push(`M${_x + _cornerRadius} ${_y}`);\r\n    if (_raiseEbge === \"top\") {\r\n        let dash = calcDialogBubbleRaiseDashArray(_width, _cornerRadius, _raiseOffset, _raiseBase);\r\n        (dash[0] > 0) && path.push(`h${dash[0]}`);\r\n        path.push(`l${_raiseBase} ${0 - _raiseHeight}l${_raiseBase} ${_raiseHeight}`);\r\n        (dash[1] > 0) && path.push(`h${dash[1]}`);\r\n    } else {\r\n        path.push(`h${_width - _cornerRadius * 2}`);\r\n    }\r\n    path.push(`a${_cornerRadius} ${_cornerRadius} 0 0 1 ${_cornerRadius} ${_cornerRadius}`);\r\n    if (_raiseEbge === \"right\") {\r\n        let dash = calcDialogBubbleRaiseDashArray(_height, _cornerRadius, _raiseOffset, _raiseBase);\r\n        (dash[0] > 0) && path.push(`v${dash[0]}`);\r\n        path.push(`l${_raiseHeight} ${_raiseBase}l${0 - _raiseHeight} ${_raiseBase}`);\r\n        (dash[1] > 0) && path.push(`v${dash[1]}`);\r\n    } else {\r\n        path.push(`v${_height - _cornerRadius * 2}`);\r\n    }\r\n    path.push(`a${_cornerRadius} ${_cornerRadius} 0 0 1 ${0 - _cornerRadius} ${_cornerRadius}`);\r\n    if (_raiseEbge === \"bottom\") {\r\n        let dash = calcDialogBubbleRaiseDashArray(_width, _cornerRadius, _raiseOffset, _raiseBase);\r\n        (dash[1] > 0) && path.push(`h${0 - dash[1]}`);\r\n        path.push(`l${0 - _raiseBase} ${_raiseHeight}l${0 - _raiseBase} ${0 - _raiseHeight}`);\r\n        (dash[0] > 0) && path.push(`h${0 - dash[0]}`);\r\n    } else {\r\n        path.push(`h${0 - _width + _cornerRadius * 2}`);\r\n    }\r\n    path.push(`a${_cornerRadius} ${_cornerRadius} 0 0 1 ${0 - _cornerRadius} ${0 - _cornerRadius}`);\r\n    if (_raiseEbge === \"left\") {\r\n        let dash = calcDialogBubbleRaiseDashArray(_height, _cornerRadius, _raiseOffset, _raiseBase);\r\n        (dash[1] > 0) && path.push(`v${0 - dash[1]}`);\r\n        path.push(`l${0 - _raiseHeight} ${0 - _raiseBase}l${_raiseHeight} ${0 - _raiseBase}`);\r\n        (dash[0] > 0) && path.push(`v${0 - dash[0]}`);\r\n    } else {\r\n        path.push(`v${0 - _height + _cornerRadius * 2}`);\r\n    }\r\n    path.push(`a${_cornerRadius} ${_cornerRadius} 0 0 1 ${_cornerRadius} ${0 - _cornerRadius}z`);\r\n    return path.join(\"\");\r\n}\r\n\r\nexport function registerInstanceEventHandler(_obj, _eventTarget) {\r\n    if (_obj && _eventTarget) {\r\n        const handler = function (_event) {\r\n            const fn = _obj[\"@\" + _event.type];\r\n            (typeof fn === \"function\") && fn.call(_obj, _event);\r\n        }\r\n        const installed = (handler.$installed = new Set());\r\n\r\n        let prototype = Object.getPrototypeOf(_obj);\r\n        while (prototype) {\r\n            for (let key of Object.getOwnPropertyNames(prototype)) {\r\n                if (key.startsWith(\"@\") && !installed.has(key) && (typeof _obj[key] === \"function\")) {\r\n                    installed.add(key);\r\n                    _eventTarget.addEventListener(key.substring(1), handler);\r\n                }\r\n            }\r\n            prototype = Object.getPrototypeOf(prototype);\r\n        }\r\n        for (let key in _obj) {\r\n            if (key.startsWith(\"@\") && !installed.has(key) && (typeof _obj[key] === \"function\")) {\r\n                installed.add(key);\r\n                _eventTarget.addEventListener(key.substring(1), handler);\r\n            }\r\n        }\r\n\r\n        return handler;\r\n    }\r\n}\r\n\r\nexport function unregisterInstanceEventHandler(_eventTarget, _handler) {\r\n    if (_obj && _eventTarget && _handler && (_handler.$installed instanceof Set)) {\r\n        _handler.$installed.forEach(item => {\r\n            _eventTarget.removeEventListener(item.substring(1), _handler);\r\n        });\r\n    }\r\n}","/**\r\n * @author season <season-studio@outlook.com>\r\n * @license Apache-2.0\r\n */\r\n\r\nimport { EBlock, EBlockContainer, EBlockFactor } from \"../thirdpart/eblock\";\r\nimport { MindmapError } from \"./mindmapError\";\r\nimport { functionWithBindMap } from \"./miscUtilities\";\r\nimport { assert } from \"../thirdpart/toolkits/src/assert\";\r\nimport { readonlyMember } from \"../thirdpart/toolkits/src/readonly\";\r\n\r\nconst TopicTemplateXML = `\r\n<!--template XML-->\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n    <defs eblock-predefined=\"\">\r\n        <path id=\"topic-fold-icon-plus\" fill=\"#fff\" fill-opacity=\"0.8\" stroke=\"#000\" stroke-width=\"1\" transform=\"translate(-3, -1), scale(1.5, 1.5)\" d=\"M1 4A3 3 0 1 0 8 4A3 3 0 1 0 1 4M2.5 4L6.5 4M4.5 2L4.5 6\" />\r\n        <path id=\"topic-fold-icon-minus\" fill=\"#fff\" fill-opacity=\"0.8\" stroke=\"#000\" stroke-width=\"1\" transform=\"translate(-3, -1), scale(1.5, 1.5)\" d=\"M1 4A3 3 0 1 0 8 4A3 3 0 1 0 1 4M2.5 4L6.5 4\" />\r\n        <pattern id=\"season-topic-drag-mask\" x=\"0\" y=\"0\" width=\"4\" height=\"4\" patternUnits=\"userSpaceOnUse\">\r\n            <rect x=\"2\" y=\"0\" width=\"2\" height=\"2\" fill=\"#000\" stroke=\"none\" />\r\n            <rect x=\"0\" y=\"2\" width=\"2\" height=\"2\" fill=\"#000\" stroke=\"none\" />\r\n        </pattern>\r\n        <style type=\"text/css\">\r\n        /* clean-css ignore:start */<![CDATA[/* clean-css ignore:end */\r\n            .topic-box-inner-rect {\r\n                width: calc(var(--topic-rect-width) - var(--topic-border-size));\r\n                height: calc(var(--topic-rect-height) - var(--topic-border-size));\r\n                /* clean-css ignore:start */x: calc(var(--topic-border-size)/2);/* clean-css ignore:end */\r\n                /* clean-css ignore:start */y: calc(var(--topic-border-size)/2);/* clean-css ignore:end */\r\n                stroke-width: var(--topic-border-size);\r\n                /* clean-css ignore:start */rx: var(--topic-box-radius) !important;/* clean-css ignore:end */\r\n                /* clean-css ignore:start */ry: var(--topic-box-radius) !important;/* clean-css ignore:end */\r\n            }\r\n        /* clean-css ignore:start */]]>/* clean-css ignore:end */\r\n        </style>\r\n        <symbol id=\"topic-default-box\" preserveAspectRatio=\"none\">\r\n            <rect rx=\"6\" ry=\"6\" class=\"topic-box-inner-rect\" pathLength=\"100\"></rect>\r\n        </symbol>\r\n    </defs>\r\n    <style type=\"text/css\" eblock-predefined=\"\">\r\n    <![CDATA[\r\n            \r\n        .season-topic-drag-group {\r\n            opacity: 0.7;\r\n        }\r\n\r\n        .season-topic-drag-mask {\r\n            /* clean-css ignore:start */rx: var(--topic-box-radius, 6px);/* clean-css ignore:end */\r\n            /* clean-css ignore:start */ry: var(--topic-box-radius, 6px);/* clean-css ignore:end */\r\n            fill: url(#season-topic-drag-mask);\r\n            fill-opacity: 0.3;\r\n            stroke: none;\r\n        }\r\n\r\n        .season-topic-drag-line {\r\n            fill: none;\r\n            stroke: #2c3e50;\r\n            stroke-width: 3px;\r\n            stroke-dasharray: 5, 5;\r\n            stroke-opacity: 0.6;\r\n        }\r\n\r\n        [season-topic-root-node], .season-topic-drag-group {\r\n            --topic-base-fill-color: #ff6600;\r\n            --topic-base-line-color: #ff6600;\r\n            --topic-base-font-color: #fff;\r\n        }\r\n\r\n        [season-topic-global] {\r\n            --topic-fill-color: var(--topic-base-fill-color);\r\n\r\n            --topic-font-color: #000;\r\n            --topic-font-weight: 400;\r\n            --topic-font-size: 1em;\r\n            \r\n            --topic-line-color: var(--topic-base-line-color);\r\n            --topic-line-size: 2px;\r\n            --topic-line-dasharray: none;\r\n            --topic-line-opacity: 1;\r\n\r\n            --topic-border-color: var(--topic-line-color);\r\n            --topic-border-opacity: 0.3;\r\n            --topic-border-size: 0.5px;\r\n            --topic-border-dasharray: 1,0.3;\r\n\r\n            --topic-box-opacity: 0.01;\r\n            --topic-box-radius: 6px;\r\n        }\r\n\r\n        [season-topic-global] * {\r\n            outline: none;\r\n        }\r\n\r\n        [season-topic-content-group] {\r\n            font-size: var(--topic-font-size);\r\n            max-width: calc(1px * var(--suitable-title-line-width));\r\n        }\r\n\r\n        .season-topic-box {\r\n            fill: var(--topic-fill-color);\r\n            fill-opacity: var(--topic-box-opacity);\r\n            stroke: var(--topic-border-color);\r\n            stroke-opacity: var(--topic-border-opacity);\r\n            stroke-dasharray: var(--topic-border-dasharray);\r\n            stroke-width: var(--topic-border-size);\r\n        }\r\n\r\n        .season-topic-title {\r\n            alignment-baseline: before-edge;\r\n            dominant-baseline: text-before-edge;\r\n            fill: var(--topic-font-color);\r\n            font-weight: var(--topic-font-weight);\r\n        }\r\n\r\n        .season-topic-connect-line {\r\n            fill: none;\r\n            stroke: var(--topic-line-color);\r\n            stroke-width: var(--topic-line-size);\r\n            stroke-opacity: var(--topic-line-opacity);\r\n            stroke-dasharray: var(--topic-line-dasharray);\r\n        }\r\n\r\n        .season-topic-image {\r\n            \r\n        }\r\n\r\n        [season-topic-content-group][d-topic-level=\"0\"] {\r\n            --topic-font-size: 1.3em;\r\n            --topic-font-color: #fff;\r\n            --topic-font-weight: 700;\r\n            --topic-box-opacity: 1;\r\n            --topic-border-size: 1.5px;\r\n            --topic-border-opacity: 1;\r\n            --topic-border-dasharray: none;\r\n        }\r\n\r\n        [season-topic-content-group][d-topic-level=\"1\"] {\r\n            --topic-font-weight: 700;\r\n            --topic-box-opacity: 0.17;\r\n            --topic-border-size: 1px;\r\n            --topic-border-opacity: 0.6;\r\n            --topic-border-dasharray: none;\r\n        }\r\n\r\n        [season-topic-content-group][season-topic-focus] {\r\n            --topic-fill-color: var(--topic-base-fill-color);\r\n            --topic-font-color: var(--topic-base-font-color);\r\n            --topic-border-color: #F04137;\r\n            --topic-font-weight: 700;\r\n            --topic-box-opacity: 1;\r\n            --topic-border-opacity: 1;\r\n            --topic-border-size: 2px;\r\n            --topic-border-dasharray: none;\r\n        }\r\n    ]]>\r\n    </style>\r\n    <g eblock-template=\"\" season-topic-global=\"\">\r\n        <g season-topic-children-group=\"\" />\r\n        <g season-topic-content-group=\"\" tabindex=\"0\" >\r\n            <use class=\"season-topic-box\" />\r\n            <text class=\"season-topic-title\" season-topic-content-type=\"title\" />\r\n            <use class=\"season-topic-image\" season-topic-content-type=\"image\" href=\"\" />\r\n            <g season-topic-extends=\"\" />\r\n            <use href=\"#\" season-topic-content-type=\"fold\" />\r\n        </g>\r\n    </g>\r\n</svg>\r\n`;\r\n\r\nfunction getEventPointInGraphic(_event) {\r\n    let target = _event.target;\r\n    if (target instanceof SVGGraphicsElement) {\r\n        (target instanceof SVGSVGElement) || (target = target.ownerSVGElement);\r\n        const ctm = target.getScreenCTM().inverse();\r\n        const svgRect = target.getBoundingClientRect();\r\n        const targetMatrix = ctm.translate(_event.clientX - svgRect.x, _event.clientY - svgRect.y);\r\n        return { x: targetMatrix.e, y: targetMatrix.f };\r\n    } else {\r\n        return { x: 0, y: 0 };\r\n    }\r\n}\r\n\r\nfunction prepareDragTipElements(_topic, _dragContext) {\r\n    if ((_topic instanceof EBlock) && (_topic.$assignedNode instanceof SVGGraphicsElement) && _dragContext) {\r\n        const svgNode = _topic.$assignedNode.ownerSVGElement;\r\n        if (svgNode) {\r\n            let dragStubNode = svgNode.querySelector(\".season-topic-drag-group\");\r\n            if (!dragStubNode) {\r\n                dragStubNode = (_dragContext.dragStubNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\"));\r\n                if (dragStubNode) {\r\n                    dragStubNode.setAttribute(\"class\", \"season-topic-drag-group\");\r\n                    dragStubNode.setAttribute(\"season-topic-global\", _topic.$assignedNode.getAttribute(\"season-topic-global\"));\r\n                    let contentNode = _topic.acquireNode(\":scope > [season-topic-content-group]\");\r\n                    let size = { $width:0, $height:0, $x:0, $y:0 };\r\n                    if (contentNode) {\r\n                        contentNode = contentNode.cloneNode(true);\r\n                        contentNode.removeAttribute(\"season-topic-focus\");\r\n                        let itemNode = contentNode.querySelector('.season-topic-box');\r\n                        if (itemNode && (itemNode = itemNode.cloneNode())) {\r\n                            itemNode.setAttribute(\"class\", \"season-topic-drag-mask\");\r\n                            size.$width = (parseInt(itemNode.getAttribute(\"width\")) || 0);\r\n                            size.$height = (parseInt(itemNode.getAttribute(\"height\")) || 0);\r\n                        }\r\n                        contentNode.appendChild(itemNode);\r\n                        itemNode = contentNode.querySelector('[season-topic-content-type=\"fold\"]');\r\n                        itemNode && itemNode.remove();\r\n                        dragStubNode.appendChild(contentNode);\r\n                    }\r\n                    /* let { x:offsetX, y:offsetY, width, height } = _topic.getRectInViewport();\r\n                    width += 1, height += 1;\r\n                    const stubImage = document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\r\n                    if (stubImage) {\r\n                        stubImage.setAttribute(\"width\", width);\r\n                        stubImage.setAttribute(\"height\", height);\r\n                        _topic.env.getImageData(\"data:image/svg+xml;charset=utf-8,\"+encodeURIComponent('<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n'+(new XMLSerializer()).serializeToString(svgNode)), {\r\n                            offsetX,\r\n                            offsetY,\r\n                            width,\r\n                            height\r\n                        }).then(imgRet => imgRet && stubImage.setAttribute(\"href\", imgRet.data));\r\n                        dragStubNode.appendChild(stubImage);\r\n                    }\r\n                    const maskNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\r\n                    if (maskNode) {\r\n                        maskNode.setAttribute(\"class\", \"season-topic-drag-mask\");\r\n                        maskNode.setAttribute(\"width\", width);\r\n                        maskNode.setAttribute(\"height\", height);\r\n                        dragStubNode.appendChild(maskNode);\r\n                    } */\r\n\r\n                    svgNode.appendChild(dragStubNode);\r\n                    Object.assign(dragStubNode, size);//{ $x:0, $y:0, $width:width, $height:height });\r\n                }\r\n            }\r\n\r\n            let dragLine = svgNode.querySelector(\".season-topic-drag-line\");\r\n            if (!dragLine) {\r\n                dragLine = (_dragContext.dragLine = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\"));\r\n                if (dragLine) {\r\n                    dragLine.setAttribute(\"class\", \"season-topic-drag-line\");\r\n                    svgNode.appendChild(dragLine);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction clearDragTipElements(_dragContext) {\r\n    if (_dragContext) {\r\n        _dragContext.dragStubNode && _dragContext.dragStubNode.remove();\r\n        _dragContext.dragStubNode = undefined;\r\n\r\n        _dragContext.dragLine && _dragContext.dragLine.remove();\r\n        _dragContext.dragLine = undefined;\r\n    }\r\n}\r\n\r\nfunction updateDragTipElements(_dragContext, _mouseEvent) {\r\n    if (_dragContext) {\r\n        const dragStubNode = _dragContext.dragStubNode;\r\n        let endX = 0, endY = 0;\r\n        if (dragStubNode) {\r\n            const { x, y } = (_mouseEvent instanceof MouseEvent) ? getEventPointInGraphic(_mouseEvent) : {x:dragStubNode.$x, y:dragStubNode.$y};\r\n            dragStubNode.setAttribute(\"transform\", `translate(${x + 2}, ${y + 2})`);\r\n            endX = x + 1 + dragStubNode.$width / 2;\r\n            endY = y + 1 + dragStubNode.$height / 2;\r\n            dragStubNode.$x = x;\r\n            dragStubNode.$y = y;\r\n        }\r\n\r\n        const dragLine = _dragContext.dragLine;\r\n        if (dragLine && _dragContext.parentTopic) {\r\n            const startRect = _dragContext.parentTopic.getGraphicRect();\r\n            dragLine.setAttribute(\"d\", `M${startRect.x + startRect.width / 2} ${startRect.y + startRect.height / 2}L${endX} ${endY}`);\r\n        }\r\n    }\r\n}\r\n\r\nfunction clearDragoverTimer(_dragContext) {\r\n    if (_dragContext) {\r\n        _dragContext.dragoverTimer && clearTimeout(_dragContext.dragoverTimer);\r\n        _dragContext.dragoverTimer = undefined;\r\n        _dragContext.dragoverTopic = undefined;\r\n    }\r\n}\r\n\r\nfunction clearDragContext(_env) {\r\n    if (_env) {\r\n        const dragContext = _env.dragContext;\r\n        if (dragContext) {\r\n            clearDragoverTimer(dragContext);\r\n            clearDragTipElements(dragContext);\r\n            dragContext.sourceTopic && (dragContext.sourceTopic.visible = true);\r\n            dragContext.sourceTopic = undefined;\r\n            _env.dragContext = undefined;\r\n        }\r\n    }\r\n}\r\n\r\nconst onDomMouseMoveForDrag = functionWithBindMap(function (_event) {\r\n    const eventDetail = _event.detail;\r\n    const originEvent = eventDetail.originEvent;\r\n    const dragContext = this.env.dragContext;\r\n    if (0 !== (originEvent.buttons & 1)) {\r\n        if (dragContext && dragContext.draging && dragContext.sourceTopic) {\r\n            updateDragTipElements(dragContext, originEvent);\r\n        }\r\n    } else if (dragContext) {\r\n        clearDragContext(this.env);\r\n    }\r\n});\r\n\r\nconst onDomMouseUpForDrag = functionWithBindMap(function (_event) {\r\n    const eventDetail = _event.detail;\r\n    const originEvent = eventDetail.originEvent;\r\n    if (0 === (originEvent.buttons & 1)) {\r\n        const dragContext = this.env.dragContext;\r\n        if (dragContext) {\r\n            if (dragContext.draging) {\r\n                // drag-drop\r\n                eventDetail.preventDefault = true;\r\n\r\n                const destPoint = getEventPointInGraphic(originEvent);\r\n                const destParent = dragContext.parentTopic;\r\n                const sourceTopic = dragContext.sourceTopic;\r\n\r\n                let sibling;\r\n                if (destParent.level > 0) {\r\n                    for (sibling = destParent.firstChildTopic; sibling; sibling = sibling.nextSiblingTopic) {\r\n                        const siblingPoint = sibling.getGraphicRect();\r\n                        if (!sibling.equal(sourceTopic) && (siblingPoint.y >= destPoint.y)) {\r\n                            break;\r\n                        }\r\n                    }\r\n                } else {\r\n                    const destParentRect = destParent.getGraphicRect();\r\n                    const directionThreshold = (destParentRect.x + destParentRect.width / 2);\r\n                    const toRight = (destPoint.x >= directionThreshold);\r\n                    let matchDirection = false;\r\n                    for (sibling = destParent.firstChildTopic; sibling; sibling = sibling.nextSiblingTopic) {\r\n                        let siblingRect = sibling.getGraphicRect();\r\n                        if (toRight === (siblingRect.x >= directionThreshold)) {\r\n                            matchDirection = true;\r\n                            if (!sibling.equal(sourceTopic) && (siblingRect.y >= destPoint.y)) {\r\n                                break;\r\n                            }\r\n                        } else if (matchDirection) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!EBlock.equal(destParent, sourceTopic.parentTopic) || !EBlock.equal(sibling, sourceTopic.nextSiblingTopic)) {\r\n                    sourceTopic.moveTo(destParent, sibling);\r\n                }\r\n\r\n                sourceTopic.queueAction(() => {\r\n                    sourceTopic.render();\r\n                    sourceTopic.$assignedNode.ownerSVGElement.focus();\r\n                });\r\n            }\r\n\r\n            clearDragContext(this.env);\r\n        }\r\n    }\r\n});\r\n\r\nconst onDomKeyDownForDrag = functionWithBindMap(function (_event) {\r\n    const eventDetail = _event.detail;\r\n    const originEvent = eventDetail.originEvent;\r\n    const key = String(originEvent.key).toLowerCase();\r\n    if (key === \"escape\") {\r\n        clearDragContext(this.env);\r\n        eventDetail.preventDefault = true;\r\n    }\r\n});\r\n\r\nexport\r\n/**\r\n * The factor of the topic\r\n * @static\r\n * @constant\r\n * @type {EBlockFactor} \r\n */\r\nconst TopicFactor = new EBlockFactor((new DOMParser()).parseFromString(TopicTemplateXML, \"image/svg+xml\").querySelector(\"svg\"));\r\n\r\nreadonlyMember(TopicFactor, {\r\n\r\n    getEventPointInGraphic,\r\n\r\n    clearDragoverTimer,\r\n\r\n    prepareDragTipElements,\r\n\r\n    clearDragTipElements,\r\n\r\n    updateDragTipElements,\r\n\r\n    clearDragContext,\r\n\r\n    onFactorRegister(_container) {\r\n        assert(_container instanceof EBlockContainer, MindmapError, -1, \"_container must be an instance of EBlockContainer\");\r\n\r\n        _container.enableDomEvent(\"click\");\r\n        _container.enableDomEvent(\"dblclick\");\r\n        _container.enableDomEvent(\"mousedown\");\r\n        _container.enableDomEvent(\"mousemove\");\r\n        _container.enableDomEvent(\"mouseover\");\r\n        _container.enableDomEvent(\"mouseout\");\r\n        _container.enableDomEvent(\"mouseup\");\r\n        _container.enableDomEvent(\"keydown\");\r\n        _container.addEventListener(\"topic-domevent-mousemove\", onDomMouseMoveForDrag.binding(_container));\r\n        _container.addEventListener(\"topic-domevent-mouseup\", onDomMouseUpForDrag.binding(_container));\r\n        _container.addEventListener(\"topic-domevent-keydown\", onDomKeyDownForDrag.binding(_container));\r\n    },\r\n\r\n    onFactorUnregister(_container) {\r\n        assert(_container instanceof EBlockContainer, MindmapError, -1, \"_container must be an instance of EBlockContainer\");\r\n\r\n        _container.disableDomEvent(\"click\");\r\n        _container.disableDomEvent(\"dblclick\");\r\n        _container.disableDomEvent(\"mousedown\");\r\n        _container.disableDomEvent(\"mousemove\");\r\n        _container.disableDomEvent(\"mouseover\");\r\n        _container.disableDomEvent(\"mouseout\");\r\n        _container.disableDomEvent(\"mouseup\");\r\n        _container.disableDomEvent(\"keydown\");\r\n        _container.removeEventListener(\"topic-domevent-mousemove\", onDomMouseMoveForDrag.binding(_container));\r\n        _container.removeEventListener(\"topic-domevent-mouseup\", onDomMouseUpForDrag.binding(_container));\r\n        _container.removeEventListener(\"topic-domevent-keydown\", onDomKeyDownForDrag.binding(_container));\r\n        onDomMouseMoveForDrag.deleteBinding(_container);\r\n        onDomMouseUpForDrag.deleteBinding(_container);\r\n        onDomKeyDownForDrag.deleteBinding(_container);\r\n    }\r\n\r\n});\r\n","/**\r\n * @author season <season-studio@outlook.com>\r\n * @license Apache-2.0\r\n */\r\n\r\nimport { generateID } from \"../thirdpart/eblock\";\r\nimport { MindmapError } from \"./mindmapError\";\r\nimport { MindmapEnvironment } from \"./mindmapEnv\";\r\nimport { assert } from \"../thirdpart/toolkits/src/assert\";\r\nimport { cloneObject } from \"../thirdpart/toolkits/src/cloneObject\";\r\nimport { readonlyMember } from \"../thirdpart/toolkits/src/readonly\";\r\nimport { registerInstanceEventHandler, unregisterInstanceEventHandler } from \"./miscUtilities\";\r\nimport { Topic } from \"./topic\";\r\n\r\n/**\r\n * The data model of the topic's image\r\n * @static\r\n * @typedef {Object} TopicImageData\r\n * @property {String} href The href of the image\r\n * @property {Number} width The width when the image is displaying\r\n * @property {Number} height The height when the image is displaying\r\n */\r\n\r\n/**\r\n * The data model of the topic\r\n * The following properties are defined by default. Any other property can be defined by custom.\r\n * @static\r\n * @typedef {Object} TopicData\r\n * @property {String} id The id of the topic\r\n * @property {String} title The title of the topic\r\n * @property {TopicImageData} image Optional. The image of the topic\r\n * @property {Array<TopicData>} children Optional. The list of the children topic of the topic\r\n */\r\n\r\n/**\r\n * The data model of the sheet\r\n * @static\r\n * @typedef {Object} SheetData\r\n * @property {String} id The id of the sheet\r\n * @property {String} title The title of the sheet\r\n * @property {TopicData} topic The root topic of the sheet\r\n */\r\n\r\nexport\r\n/**\r\n * Class of document model describing the mindmap\r\n * @class\r\n * @property {MindmapEnvironment} env The environment of the mindmap\r\n */\r\nclass MindmapDocument {\r\n    /**\r\n     * The template of the default sheet\r\n     * @static\r\n     */\r\n    static DefaultSheetTemplate = {\r\n        title: \"Untitled Sheet\",\r\n        topic: { \r\n            title: \"Main Topic\" \r\n        }\r\n    };\r\n\r\n    /**\r\n     * The template of the default topic\r\n     * @static\r\n     */\r\n    static DefaultTopicTemplate = {\r\n        title: \"New Topic\"\r\n    };\r\n\r\n    #attachments;\r\n    #sheets;\r\n    #eventHandler;\r\n    #dirty;\r\n\r\n    /**\r\n     * Create the instance of the MindmapDocument\r\n     * @constructor\r\n     * @param {MindmapEnvironment} _env The environment of the mindmap\r\n     */\r\n    constructor(_env) {\r\n        assert(_env instanceof MindmapEnvironment, MindmapError, -1, \"_env must be an instance of MindmapEnvironment\");\r\n\r\n        readonlyMember(this, \"env\", _env);\r\n        this.#attachments = {};\r\n        this.#sheets = [];\r\n        this.#eventHandler = registerInstanceEventHandler(this, _env);\r\n        this.#dirty = false;\r\n    }\r\n\r\n    /**\r\n     * The count of the sheets in the mindmap document\r\n     * @type {Number}\r\n     */\r\n    get sheetCount() {\r\n        return this.#sheets.length;\r\n    }\r\n\r\n    /**\r\n     * The first sheet of the mindmap document\r\n     * @type {SheetData}\r\n     */\r\n    get firstSheet() {\r\n        return this.#sheets[_index];\r\n    }\r\n\r\n    /**\r\n     * Get a sheet matched the special ID\r\n     * @param {String} _id The id of the target sheet\r\n     * @returns {SheetData} The data of the sheet\r\n     */\r\n    getSheetByID(_id) {\r\n        let sheet;\r\n        try {\r\n            this.#sheets.forEach(item => {\r\n                if (_id === item.id) {\r\n                    sheet = item;\r\n                }\r\n            });\r\n        } catch (err) {\r\n            err && console.warn(err);\r\n        }\r\n        return sheet;\r\n    }\r\n\r\n    /**\r\n     * Switch the sheet into the view assigned to this document\r\n     * @param {String} _id The id of the target sheet\r\n     * @param {Boolean} _syncCurrentView Optional. Pass true if you want to save the change in the view first\r\n     * @returns {MindmapDocument} This object\r\n     */\r\n    switchToSheet(_id, _syncCurrentView) {\r\n        const sheet = this.getSheetByID(_id);\r\n        if (sheet) {\r\n            _syncCurrentView && this.synchronizeSheetWithView();\r\n            this.env.fireEvent(\"topic-event-view-switch-sheet\", { sheet });\r\n        } else {\r\n            this.env.warn(`sheet[${_id}] no found`);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Enumerate each sheet in the mindmap document\r\n     * @yields {{index: Number, sheet: SheetData}} The data of each sheet\r\n     */\r\n    * enumerateSheet() {\r\n        for (let index in this.#sheets) {\r\n            yield {\r\n                index,\r\n                sheet: this.#sheets[index]\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove a special sheet.\r\n     * This function will switch the view to the sheet before the sheet removed.\r\n     * A new sheet will be inserted automatically if there is no sheet in the document after remove the special sheet.\r\n     * @param {String} _id The id of the sheet which will be removed\r\n     * @param {Boolean} _syncCurrentView Optional. Pass true if you want to save the change in the view first\r\n     * @returns {SheetData} The data of the sheet which is removed\r\n     */\r\n    removeSheet(_id, _syncCurrentView) {\r\n        _syncCurrentView && this.synchronizeSheetWithView();\r\n        let oriSheet, index;\r\n        for (index in this.#sheets) {\r\n            if (this.#sheets[index].id === _id) {\r\n                oriSheet = this.#sheets.splice(index, 1);\r\n                this.#dirty = true;\r\n                (index > 0) && (index -= 1);\r\n                break;\r\n            }\r\n        }\r\n        let sheet = this.#sheets[index];\r\n        if (!sheet) {\r\n            sheet = cloneObject({}, this.constructor.DefaultSheetTemplate);\r\n            this.addSheet(sheet);\r\n        }\r\n        this.env.fireEvent(\"topic-event-view-switch-sheet\", { sheet });\r\n        return oriSheet;\r\n    }\r\n\r\n    /**\r\n     * Insert a new sheet into the document.\r\n     * If the id of the sheet had been contained in the document, this function will be failed.\r\n     * @param {SheetData} _newSheet The data of the sheet inserted. A new id will be created if there is no special one in the data.\r\n     * @param {Number} _index Optional. The position of the sheet will be insert to. If the argument is ignored, the sheet will be insert to the end of the document.\r\n     * @returns {MindmapDocument} This object\r\n     */\r\n    addSheet(_newSheet, _index) {\r\n        if (_newSheet) {\r\n            _newSheet.id || (_newSheet.id = generateID());\r\n\r\n            assert(!this.getSheetByID(_newSheet.id), MindmapError, -1, \"The id of the sheet had been contained in the document\");\r\n\r\n            if (isNaN(_index)) {\r\n                this.#sheets.push(_newSheet);\r\n            } else {\r\n                this.#sheets.splice(_index, 0, _newSheet);\r\n            }\r\n            this.#dirty = true;\r\n            this.env.fireEvent(\"topic-event-sheet-list-changed\");\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Save the change of the view into the document\r\n     * @returns {MindmapDocument} This object\r\n     */\r\n    synchronizeSheetWithView() {\r\n        const param = {\r\n            sheets: [],\r\n            attachments: {}\r\n        };\r\n        this.env.fireEvent(\"topic-event-view-submit\", param);\r\n        let count = 0;\r\n        for (let { sheetID, topicData } of param.sheets) {\r\n            count ++;\r\n            let sheet = this.getSheetByID(sheetID);\r\n            if (sheet) {\r\n                sheet.topic = topicData;\r\n            } else {\r\n                this.addSheet({ topic: topicData });\r\n            }\r\n        }\r\n        (count > 0) && (this.#dirty = true);\r\n        for (let name in param.attachments) {\r\n            this.hasAttachment(name) || this.setAttachment(name, param.attachments[name]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Enumerate the attachments in the document\r\n     * @generator\r\n     * @yields {{name: String, data: Any}} the data of each attachment\r\n     */\r\n    * enumerateAttachment() {\r\n        for (let name in this.#attachments) {\r\n            yield {\r\n                name,\r\n                data: this.#attachments[name]\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove a special attachment\r\n     * @param {String} _name The name of the attachment will be removed\r\n     * @returns {MindmapDocument} This object\r\n     */\r\n    removeAttachment(_name) {\r\n        const data = this.#attachments[_name];\r\n        (data instanceof Blob) && data.$url && URL.revokeObjectURL(data.$url);\r\n        delete this.#attachments[_name];\r\n        this.#dirty = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get a special attachment\r\n     * @param {String} _name The name of the attchment\r\n     * @returns {Any} The data of the attachment\r\n     */\r\n    getAttachment(_name) {\r\n        return this.#attachments[_name];\r\n    }\r\n\r\n    /**\r\n     * Set an attachment.\r\n     * If the name of the attachment had been contained in the document, the data of the attachment will be changed to the new one.\r\n     * @param {String} _name The name of the attachment\r\n     * @param {Any} _data The data of the attachment\r\n     * @returns {MindmapDocument} This object\r\n     */\r\n    setAttachment(_name, _data) {\r\n        this.removeAttachment(_name);\r\n        this.#attachments[_name] = _data;\r\n        this.#dirty = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Remove all of the attachment in the document\r\n     * @returns {MindmapDocument} This object\r\n     */\r\n    clearAttachment() {\r\n        for (let name in this.#attachments) {\r\n            let data = this.#attachments[name];\r\n            (data instanceof Blob) && data.$url && URL.revokeObjectURL(data.$url);\r\n        }\r\n        this.#attachments = {};\r\n        this.#dirty = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Check if the an attachment specialed by the name is contained in the document\r\n     * @param {String} _name The name of the attachment\r\n     * @returns {Boolean} true means the attachment is contained in the document\r\n     */\r\n    hasAttachment(_name) {\r\n        return _name in this.#attachments;\r\n    }\r\n\r\n    /**\r\n     * Collect and remove the unused attachments in this document\r\n     */\r\n    collectAttachments() {\r\n        let referencedSet = new Set();\r\n        const xapPrefix = `${this.env.config.resourceScheme}:`;\r\n        const xapLen = xapPrefix.length;\r\n        (this.#sheets instanceof Array) && this.#sheets.forEach(sheet => {\r\n            for (let item of Topic.enumerateReferenceResource(this.env, sheet.topic)) {\r\n                String(item).startsWith(xapPrefix) && (item = String(item).substring(xapLen));\r\n                referencedSet.add(item);\r\n            }\r\n        });\r\n        Object.getOwnPropertyNames(this.#attachments).forEach(item => {\r\n            if (!referencedSet.has(item)) {\r\n                this.removeAttachment(item);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Reset the document as a new one.\r\n     * An template sheet will be inserted if the content is empty after calling the callback fucntion.\r\n     * The view assigned to the document will switch to the first sheet automatically after this function.\r\n     * @param {Function} _fn The callback function for preparing the content of the document\r\n     * @param  {...any} _args The arguments passed to the callback function\r\n     * @returns {Promise<MindmapDocument>} This object\r\n     */\r\n    async newDocument(_fn, ..._args) {\r\n        this.clearAttachment();\r\n        this.#sheets = [];\r\n        let ret = (typeof _fn === \"function\") && _fn.apply(this, _args);\r\n        (ret instanceof Promise) && await ret;\r\n        (this.#sheets.length <= 0) && (this.#sheets = [cloneObject({id: generateID()}, this.constructor.DefaultSheetTemplate)]);\r\n        this.env.fireEvent(\"topic-event-sheet-list-changed\");\r\n        this.env.fireEvent(\"topic-event-view-switch-sheet\", { sheet: this.#sheets[0] });\r\n        this.#dirty = false;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Save the document.\r\n     * Almost as the same as the synchronizeSheetWithView.\r\n     * @param {Function} _fn Optional. The callback function for saving the document\r\n     * @param {Boolean} _keepWorkState Optional. If this argument is set to true, the working element such as editbox will keep in alive during saving\r\n     * @returns {Any} The result returned by the callback function\r\n     */\r\n    saveDocument(_fn, _keepWorkState) {\r\n        _keepWorkState || this.env.fireEvent(\"topic-event-cancel-edit\");\r\n        this.synchronizeSheetWithView();\r\n        return (typeof _fn === \"function\") && _fn.apply(this, Array.prototype.slice.call(arguments, 1));\r\n    }\r\n\r\n    /**\r\n     * Generate the thumb image of the current view of the document\r\n     * @param {Boolean} _toBlob Optional. Set true if the thumb image is strored as a blob\r\n     * @param {Boolean} _keepWorkState Optional. If this argument is set to true, the working element such as editbox will keep in alive during gettig the thumb\r\n     * @returns {Promise<String|Blob>} A promise that will resolve with the thumb image.\r\n     */\r\n    getThumbImage(_toBlob, _keepWorkState) {\r\n        _keepWorkState || this.env.fireEvent(\"topic-event-cancel-edit\");\r\n        const param = { image: undefined, option: { toBlob: (_toBlob || false) } };\r\n        this.env.fireEvent(\"topic-event-view-export-image\", param);\r\n        return param.image instanceof Promise ? param.image : Promise.resolve(param.image);\r\n    }\r\n\r\n    /**\r\n     * Dispose the resource if you do need this document any more.\r\n     */\r\n    dispose() {\r\n        unregisterInstanceEventHandler(this.env, this.#eventHandler);\r\n    }\r\n\r\n    /**\r\n     * Check if the document has been changed\r\n     */\r\n    get dirty() {\r\n        return this.#dirty;\r\n    }\r\n\r\n    /**\r\n     * Clear the dirty flag of the document\r\n     * @param {Function} _fn A checker function impelement increasing action.\r\n     */\r\n    clearDirtyFlag(_fn) {\r\n        let rndCode;\r\n        (typeof _fn === \"function\") && (_fn(rndCode = parseInt(Math.random() * 100)) === (rndCode + 1)) && (this.#dirty = false);\r\n    }\r\n\r\n    /**\r\n     * Event handler for translating a href to a URL\r\n     * @private\r\n     * @param {Event} _event \r\n     */\r\n    [\"@topic-event-translate-href-url\"](_event) {\r\n        const param = _event.detail;\r\n        if (param) {\r\n            let url = String(param.source);\r\n            const xapLen = String(this.env.config.resourceScheme || \"\").length;\r\n            if (url.startsWith(`${this.env.config.resourceScheme}:`)) {\r\n                url = (param.source = url.substring(xapLen + 1));\r\n                const data = this.#attachments[url];\r\n                if (data instanceof Blob) {\r\n                    param.destination = (data.$url || (data.$url = URL.createObjectURL(data)));\r\n                } else if (data) {\r\n                    param.destination = String(data);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event handler for getting the type of a href\r\n     * @private\r\n     * @param {Event} _event \r\n     */\r\n    [\"@topic-event-get-href-type\"](_event) {\r\n        const param = _event.detail;\r\n        if (param) {\r\n            if (String(param.href).startsWith(`${this.env.config.resourceScheme}:`)) {\r\n                param.type = \"resource\";\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event handler for updating the attachment\r\n     * @private\r\n     * @param {*} _event \r\n     */\r\n    [\"@topic-event-update-attachment\"](_event) {\r\n        const param = _event.detail;\r\n        if (param && param.resource) {\r\n            const name = (param.name || generateID());\r\n            this.setAttachment(name, param.resource);\r\n            param.href = this.env.config.resourceScheme + \":\" + name;\r\n        }\r\n    }\r\n}","/**\r\n * @author season <season-studio@outlook.com>\r\n * @license Apache-2.0\r\n */\r\n\r\nimport { MindmapError } from \"./mindmapError\";\r\nimport { MindmapContainer } from \"./mindmapContainer\";\r\nimport { MindmapDocument } from \"./mindmapDocument\";\r\nimport { assert } from \"../thirdpart/toolkits/src/assert\";\r\nimport { cloneObject } from \"../thirdpart/toolkits/src/cloneObject\";\r\nimport { readonlyMember } from \"../thirdpart/toolkits/src/readonly\";\r\nimport { Topic } from \"./topic\";\r\nimport { TopicFactor } from \"./topicFactor\";\r\nimport { registerInstanceEventHandler, unregisterInstanceEventHandler } from \"./miscUtilities\";\r\n\r\nconst SymbolCustomPropsLog = Symbol(\"mindmap.svg.js.custom.props.log\");\r\n\r\nexport\r\n/**\r\n * Class of the viewer for displaying and operating the mindmap\r\n * @class\r\n * @extends MindmapContainer\r\n */\r\nclass MindmapViewer extends MindmapContainer {\r\n\r\n    /**\r\n     * translate the event to a string used as the key of the control-map\r\n     * @static\r\n     * @param {Event} _event The event to be translate, such as keydown, mousedown, and so on\r\n     * @param {Boolean} _keepCase Set true to let the case left in the result\r\n     * @returns {String} The destination key\r\n     */\r\n    static getContrlMapKey(_event, _keepCase) {\r\n        let mapKey = [];\r\n        if (_event instanceof UIEvent) {\r\n            _event.ctrlKey && mapKey.push(_keepCase ? \"Ctrl\" : \"ctrl\");\r\n            _event.altKey && mapKey.push(_keepCase ? \"Alt\" : \"alt\");\r\n            _event.shiftKey && mapKey.push(_keepCase ? \"Shift\" : \"shift\");\r\n            _event.metaKey && mapKey.push(_keepCase ? \"Meta\" : \"meta\");\r\n            if (_event instanceof MouseEvent) {\r\n                (_event instanceof WheelEvent) && mapKey.push(\"wheel\");\r\n                (0 !== (_event.buttons & 1)) && mapKey.push(\"mouseleft\");\r\n                (0 !== (_event.buttons & 2)) && mapKey.push(\"mouseright\");\r\n                (0 !== (_event.buttons & 4)) && mapKey.push(\"mousemiddle\");\r\n                (0 !== (_event.buttons & 8)) && mapKey.push(\"mouseback\");\r\n                (0 !== (_event.buttons & 16)) && mapKey.push(\"mouseforward\");\r\n            } else if (_event instanceof KeyboardEvent) {\r\n                let key = String(_event.key);\r\n                if (_keepCase) {\r\n                    if ((key.length === 1) && (key[0] >= 'a') && (key[0] <= 'z')) {\r\n                        key = key.toLocaleUpperCase();\r\n                    }\r\n                    mapKey.push(key);\r\n                } else {\r\n                    mapKey.push(key.toLocaleLowerCase());\r\n                }\r\n            }\r\n        }\r\n        return mapKey.join(\"+\");\r\n    }\r\n\r\n    /**\r\n     * Dispatch the \"topic-event-trigger\" or \"topic-event-edit\" with the binding map.\r\n     * This function should be called with binding a map as the \"this\" object. This map is an object with the members of the actions for each element of the topic. \r\n     * @static\r\n     * @param {Event} _event The event\r\n     * @param {String} _type Optional. The type of the action. The _event.type will be used instead if this argument is ignored.\r\n     * @returns {Boolean} \"true\" means a function has been invoked, otherwise return \"false\".\r\n     * @example \r\n     * // Dispatch the event with the custom map\r\n     * MindmapViwer.dispatchTopicEventAction.call({ \r\n     *     title: { \r\n     *         trigger: function () { ... },\r\n     *         edit: function () { ... }\r\n     *     }, image: {\r\n     *         trigger: function () { ... },\r\n     *         edit: function () { ... }\r\n     *     }\r\n     * }, event);\r\n     * @example \r\n     * // Dispatch the event with the default map\r\n     * MindmapView.MindmapViewer.dispatchTopicEventAction.call(\r\n     *     MindmapView.DefaultTopicEventActions, \r\n     *     event\r\n     * );\r\n     */\r\n    static dispatchTopicEventAction(_event, _type) {\r\n        const eventDetail = ((_event instanceof Event) ? _event.detail : _event);\r\n        const contentConfig = eventDetail && this[eventDetail.triggerContentType || \"title\"];\r\n        const fn = contentConfig && contentConfig[_type || ((_event instanceof Event) && String(_event.type).replace(/^topic-event-/gi, \"\"))];\r\n        return (typeof fn === \"function\") ? (fn(eventDetail), true) : false;\r\n    }\r\n\r\n    /**\r\n     * Dispatch the event in the control-map\r\n     * @param {Event} _event The DOM's event to be dispatched\r\n     * @param {Object} _instance The instance contains the control-map\r\n     * @param {Function} _prefixCb Optional. The callback function before calling the action in the map\r\n     * @returns {Object} return the matched item if the action is processed.\r\n     */\r\n    static dispatchControlMapAction(_event, _instance, _prefixCb) {\r\n        let key = MindmapViewer.getContrlMapKey(_event);\r\n        let mapItem = _instance.UIControlMap[key];\r\n        if (mapItem) {\r\n            let fn = mapItem.action;\r\n            (typeof fn === \"function\") || (fn = _instance[fn]);\r\n            if (typeof fn === \"function\") {\r\n                (typeof _prefixCb === \"function\") && _prefixCb(mapItem);\r\n                fn.call(_instance, _event, ...(mapItem.args || []));\r\n                return mapItem;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    \r\n    #eventHandler;\r\n    #sheetID;\r\n    #uiCtrlContext;\r\n\r\n    /**\r\n     * Create an instance of the MindmapViewer\r\n     * @constructor\r\n     * @param {MindmapDocument} _doc The document assigned with this viewer\r\n     * @param {Node} _node The node to contain this viewer\r\n     */\r\n    constructor(_doc, _node) {\r\n        assert(_doc instanceof MindmapDocument, MindmapError, -1, \"_doc must be an instance of MindmapDocument\");\r\n\r\n        super(_node, _doc.env);\r\n        const env = _doc.env;\r\n\r\n        readonlyMember(this, \"doc\", _doc);\r\n\r\n        this.enableDomEvent(\"wheel\");\r\n        this.enableDomEvent(\"contextmenu\");\r\n        TopicFactor.register(this);\r\n        this.#sheetID = undefined;\r\n        this.#eventHandler = registerInstanceEventHandler(this, env);\r\n        this.#uiCtrlContext = {};\r\n\r\n        env.syncConfig();\r\n    }\r\n\r\n    /**\r\n     * Dispose the resource if you don't need this viewer any more.\r\n     */\r\n    dispose() {\r\n        unregisterInstanceEventHandler(this.doc.env, this.#eventHandler);\r\n        this.disableDomEvent(\"wheel\");\r\n        this.disableDomEvent(\"contextmenu\");\r\n        MindmapContainer.prototype.dispose.call(this);\r\n    }\r\n\r\n    /**\r\n     * The ID of the current sheet displayed in this viewer\r\n     * @type {String}\r\n     */\r\n    get sheetID() {\r\n        return this.#sheetID;\r\n    }\r\n\r\n    /**\r\n     * The root topic in the current viewer\r\n     * @type {Topic}\r\n     */\r\n    get rootTopic() {\r\n        return Topic.getFirstChildTopic(this.stageContainer);\r\n    }\r\n\r\n    /**\r\n     * The focus topic in the current viewer\r\n     * @type {Topic}\r\n     */\r\n    get focusTopic() {\r\n        return Topic.getFocusTopic(this.stageContainer);\r\n    }\r\n\r\n    /**\r\n     * Get the topic with special ID in the current viewer\r\n     * @param {String} _id The special ID\r\n     * @returns {Topic} The topic matched the special ID\r\n     */\r\n    getTopicByID(_id) {\r\n        return Topic.getTopicByID(this.stageContainer, _id);\r\n    }\r\n\r\n    /**\r\n     * Create a child topic in the focus topic in the current viewer\r\n     * @returns {MindmapViewer} This viewer\r\n     */\r\n    createChildTopic() {\r\n        let topic = this.focusTopic;\r\n        topic && (topic = topic.createChild(cloneObject({}, this.doc.constructor.DefaultTopicTemplate)));\r\n        topic && topic.setFocus().render().showInView().notify(\"topic-event-edit\", {eventTarget:topic});\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Create a sibling topic of the focus topic in the current viewer\r\n     * @returns {MindmapViewer} This viewer\r\n     */\r\n    createSiblingTopic() {\r\n        let topic = this.focusTopic;\r\n        let parentTopic = (topic && (topic.parentTopic || topic));\r\n        parentTopic && (topic = parentTopic.createChild(cloneObject({}, this.doc.constructor.DefaultTopicTemplate), topic.nextSiblingTopic));\r\n        topic && topic.setFocus().render().showInView().notify(\"topic-event-edit\", {eventTarget:topic});\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Let the focus topic into edit mode\r\n     * @param {String} _triggerContentType Optional. The type of the content to be edit. The title will be edit if this argument is ignored.\r\n     * @returns {MindmapViewer} This viewer\r\n     */\r\n    editFocusTopic(_triggerContentType) {\r\n        let topic = this.focusTopic;\r\n        topic && topic.showInView().notify(\"topic-event-edit\", {eventTarget:topic, triggerContentType:(_triggerContentType || \"title\")});\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Delete the focus topic in this viewer\r\n     * @returns {MindmapViewer} This viewer\r\n     */\r\n    deleteFocusTopic() {\r\n        let topic = this.focusTopic;\r\n        let newFocus = topic && (topic.nextSiblingTopic || topic.previousSiblingTopic || topic.parentTopic);\r\n        topic && topic.drop();\r\n        newFocus && newFocus.setFocus().render().showInView();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Move the focus to the next sibling topic from the current focus topic\r\n     * @returns {MindmapViewer} This viewer\r\n     */\r\n    gotoNextSiblingTopic() {\r\n        let topic = this.focusTopic;\r\n        topic && (topic = topic.nextSiblingTopic);\r\n        topic && topic.setFocus().showInView();\r\n        return this;\r\n    }\r\n    \r\n    /**\r\n     * Move the focus to the previous sibling topic from the current focus topic\r\n     * @returns {MindmapViewer} This viewer\r\n     */\r\n    gotoPreviousSiblingTopic() {\r\n        let topic = this.focusTopic;\r\n        topic && (topic = topic.previousSiblingTopic);\r\n        topic && topic.setFocus().showInView();\r\n        return this;\r\n    }\r\n    \r\n    /**\r\n     * Move the focus to the parent topic from the current focus topic\r\n     * @returns {MindmapViewer} This viewer\r\n     */\r\n    gotoParentTopic() {\r\n        let topic = this.focusTopic;\r\n        topic && (topic = topic.parentTopic);\r\n        topic && topic.setFocus().showInView();\r\n        return this;\r\n    }\r\n    \r\n    /**\r\n     * Move the focus to the first child topic from the current focus topic\r\n     * @returns {MindmapViewer} This viewer\r\n     */\r\n    gotoChildrenTopic() {\r\n        let topic = this.focusTopic;\r\n        topic && (topic = topic.firstChildTopic);\r\n        topic && topic.setFocus().showInView();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Move to the root topic in this view\r\n     * @returns {MindmapViewer} This viewer\r\n     */\r\n    gotoRootTopic() {\r\n        let topic = this.rootTopic;\r\n        topic && topic.setFocus().showInView();\r\n        return this;\r\n    }\r\n    \r\n    /**\r\n     * Render the view\r\n     * @returns {MindmapViewer} This viewer\r\n     */\r\n    render() {\r\n        this.rootTopic.render(...arguments);\r\n        return this;\r\n    }\r\n    \r\n    /**\r\n     * Export the image  of the viewer\r\n     * @param {Object} _opt Optional. The option\r\n     * @param {String} _opt.fill The color of the background\r\n     * @param {String} _opt.type Optional. The type of the destination image. Such as png, jpeg, and so on\r\n     * @param {Boolean} _opt.toBlob Optional. Set true if the image storged in a Blob\r\n     * @returns {Promise<{width: Number, height: Number, data: Any}>} The promise resolved with the data of the image\r\n     */\r\n    exportImage(_opt) {\r\n        _opt || (_opt = {});\r\n        _opt.keepWorkState || this.env.fireEvent(\"topic-event-cancel-edit\");\r\n        let focusTopic = this.focusTopic;\r\n        focusTopic && !_opt.keepWorkState && focusTopic.killFocus();\r\n        const { x, y, width, height } = this.stageContainer.getBBox();\r\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        svg.setAttribute(\"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\r\n        svg.setAttribute(\"overflow\", \"hidden\");\r\n        svg.setAttribute(\"width\", width);\r\n        svg.setAttribute(\"height\", height);\r\n        svg.setAttribute(\"viewBox\", `${x} ${y} ${width} ${height}`);\r\n        svg.style.fontSize = getComputedStyle(this.svgElement)[\"font-size\"];\r\n        svg.insertAdjacentHTML(\"afterbegin\", this.svgElement.innerHTML);\r\n        const serializer = new XMLSerializer();\r\n        const source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + serializer.serializeToString(svg);\r\n        focusTopic && !_opt.keepWorkState && focusTopic.setFocus();\r\n        return this.env.getImageData(\"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source), Object.assign({}, _opt, {\r\n            width, \r\n            height\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Handle the event of \"topic-event-report-configuration\"\r\n     * @private\r\n     * @param {Event} _event \r\n     */\r\n    [\"@topic-event-report-configuration\"](_event) {\r\n        let detail = _event && _event.detail;\r\n        let result = ((detail && detail.result) || {});\r\n        try {\r\n            let nodeList = document.evaluate('./*[local-name(.) = \"desc\" and @season-topic-parameters]', this.svgElement, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);\r\n            let index = 0;\r\n            let nodeItem;\r\n            while (nodeItem = nodeList.snapshotItem(index++)) {\r\n                try {\r\n                    Object.assign(result, JSON.parse(String(nodeItem.textContent).trim()));\r\n                } catch (err) {\r\n                    this.env.warn(\"Exception raised in parse parameter item\", err);\r\n                }\r\n            }\r\n        } catch (err) {\r\n            this.env.warn(\"Exception raised in query parameters\", err);\r\n        }\r\n        detail && (detail.result = result);\r\n    }\r\n\r\n    /**\r\n     * Handle the event of \"topic-event-sync-configuration\"\r\n     * Update the configurations as the style properties of the svg element\r\n     * @private\r\n     * @param {Event} _event \r\n     */\r\n     [\"@topic-event-sync-configuration\"](_event) {\r\n        try {\r\n            let detail = _event && _event.detail;\r\n            const style = this.svgElement.style;\r\n            let oldProperties = this.svgElement[SymbolCustomPropsLog] || [];\r\n            oldProperties.forEach(item => {\r\n                item = item.trim();\r\n                item && style.removeProperty(item);\r\n            });\r\n            this.svgElement[SymbolCustomPropsLog] = undefined;\r\n            if (detail) {\r\n                let propNames = [];\r\n                Object.entries(detail).forEach(item => {\r\n                    let name = \"--\" + String(item[0]||\"\").replace(/[A-Z]/g, c => \"-\" + c.toLocaleLowerCase());\r\n                    propNames.push(name);\r\n                    style.setProperty(name, item[1]);\r\n                });\r\n                (propNames.length > 0) && (this.svgElement[SymbolCustomPropsLog] = propNames);\r\n            }\r\n        } catch (err) {\r\n            this.env.warn(\"Exception raised in update parameters as the svg custom style value\", err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle the event of \"topic-event-view-export-image\"\r\n     * @private\r\n     * @param {Event} _event \r\n     */\r\n    [\"@topic-event-view-export-image\"](_event) {\r\n        _event && _event.detail && (_event.detail.image = this.exportImage(_event.detail.option));\r\n    }\r\n\r\n    /**\r\n     * Handle the event of \"topic-event-view-switch-sheet\"\r\n     * @private\r\n     * @param {Event} _event \r\n     */\r\n    [\"@topic-event-view-switch-sheet\"](_event) {\r\n        if (_event.detail) {\r\n            this.env.fireEvent(\"topic-event-cancel-edit\");\r\n            const sheet = _event.detail && _event.detail.sheet;\r\n            if (sheet && sheet.id) {\r\n                let rootTopic = this.rootTopic;\r\n                rootTopic && rootTopic.drop(a => a + 1);\r\n                this.#sheetID = sheet.id;\r\n                rootTopic = TopicFactor.generate(this.stageContainer, Topic, cloneObject({}, sheet.topic), 0, this.env)\r\n                    .render()\r\n                    .queueAction(() => {\r\n                        rootTopic && rootTopic.showInCenterOfView()\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle the event of \"topic-event-view-submit\"\r\n     * @private\r\n     * @param {Event} _event \r\n     */\r\n    [\"@topic-event-view-submit\"](_event) {\r\n        const topicData = this.rootTopic.exportTopicData();\r\n        const eventParam = _event && _event.detail;\r\n        if (topicData && eventParam) {\r\n            const sheets = eventParam.sheets;\r\n            (sheets instanceof Array) && sheets.push({\r\n                sheetID: this.#sheetID,\r\n                topicData: topicData\r\n            });\r\n            this.rootTopic.collectImageStorage();\r\n            if (eventParam.attachments) {\r\n                for (let item of this.rootTopic.enumerateImageInStorage()) {\r\n                    eventParam.attachments[item.sourceHRef] = item.href;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle the event of \"topic-domevent-mousedown\" and dispatching the actions in the control-map\r\n     * @private\r\n     * @param {Event} _event \r\n     */\r\n    [\"@topic-domevent-mousedown\"](_event) {\r\n        const eventDetail = _event && _event.detail;\r\n        const originEvent = eventDetail && eventDetail.originEvent;\r\n        if (eventDetail && !eventDetail.eventTarget) {\r\n            MindmapViewer.dispatchControlMapAction(originEvent, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle the event of \"topic-domevent-mousemove\" and dispatching the actions in the control-map\r\n     * @private\r\n     * @param {Event} _event \r\n     */\r\n    [\"@topic-domevent-mousemove\"](_event) {\r\n        const eventDetail = _event && _event.detail;\r\n        const originEvent = eventDetail && eventDetail.originEvent;\r\n        if (eventDetail && !eventDetail.eventTarget) {\r\n            if (!MindmapViewer.dispatchControlMapAction(originEvent, this, (mapItem) => {\r\n                if (this.#uiCtrlContext.type && (this.#uiCtrlContext.type !== mapItem.action)) {\r\n                    this.#uiCtrlContext.type = undefined;\r\n                }\r\n            })) {\r\n                this.#uiCtrlContext.type && (this.#uiCtrlContext.type = undefined);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle the event of \"topic-domevent-mouseup\"\r\n     * @private\r\n     * @param {Event} _event \r\n     */\r\n    [\"@topic-domevent-mouseup\"](_event) {\r\n        const eventDetail = _event && _event.detail;\r\n        const originEvent = eventDetail && eventDetail.originEvent;\r\n        if (eventDetail && !eventDetail.eventTarget) {\r\n            this.#uiCtrlContext.type && this[this.#uiCtrlContext.type](originEvent);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle the event of \"topic-domevent-click\"\r\n     * @private\r\n     * @param {Event} _event \r\n     */\r\n    [\"@topic-domevent-click\"](_event) {\r\n        const eventDetail = _event && _event.detail;\r\n        const topic = eventDetail && !eventDetail.eventTarget && this.focusTopic && this.focusTopic;\r\n        topic && topic.killFocus();\r\n    }\r\n\r\n    /**\r\n     * Handle the event of \"topic-domevent-wheel\" and dispatching the actions in the control-map\r\n     * @private\r\n     * @param {Event} _event \r\n     */\r\n    [\"@topic-domevent-wheel\"](_event) {\r\n        const eventDetail = _event && _event.detail;\r\n        const originEvent = eventDetail && eventDetail.originEvent;\r\n        if (eventDetail) {\r\n            MindmapViewer.dispatchControlMapAction(originEvent, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle the event of \"topic-domevent-keydown\" and dispatching the actions in the control-map\r\n     * @private\r\n     * @param {Event} _event \r\n     */\r\n    [\"@topic-domevent-keydown\"](_event) {\r\n        const eventDetail = _event && _event.detail;\r\n        const originEvent = eventDetail && eventDetail.originEvent;\r\n        if (MindmapViewer.dispatchControlMapAction(originEvent, this)) {\r\n            originEvent.preventDefault();\r\n            originEvent.stopPropagation();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle the event of \"topic-domevent-contextmenu\" for disable the default context menu\r\n     * @private\r\n     * @param {Event} _event \r\n     */\r\n    [\"@topic-domevent-contextmenu\"](_event) {\r\n        const eventDetail = _event && _event.detail;\r\n        const originEvent = eventDetail && eventDetail.originEvent;\r\n        originEvent.preventDefault();\r\n        originEvent.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * Processor of moving the content in this viewer.\r\n     * It can be used as an action in the control-map.\r\n     * @param {Event} _event \r\n     */\r\n    [\"move-view\"](_event) {\r\n        if (_event instanceof WheelEvent) {\r\n            this.move(_event.deltaX, _event.deltaY);\r\n            _event.preventDefault();\r\n            _event.stopPropagation();\r\n        } else if (_event instanceof MouseEvent) {\r\n            const uiCtrlContext = this.#uiCtrlContext;\r\n            if (_event.type === \"mousedown\") {\r\n                uiCtrlContext.type = \"move-view\";\r\n                uiCtrlContext.x = _event.clientX;\r\n                uiCtrlContext.y = _event.clientY;\r\n                this.svgElement.style.cursor = \"grabbing\";\r\n            } else if (_event.type === \"mousemove\") {\r\n                if (uiCtrlContext.type === \"move-view\") {\r\n                    let deltaX = uiCtrlContext.x - _event.clientX;\r\n                    let deltaY = uiCtrlContext.y - _event.clientY;\r\n                    uiCtrlContext.x = _event.clientX;\r\n                    uiCtrlContext.y = _event.clientY;\r\n                    let ctp = Topic.convertWindowPointToGraphic(this.svgElement, deltaX, deltaY);\r\n                    this.move(ctp.x, ctp.y);\r\n                    _event.preventDefault();\r\n                    _event.stopPropagation();\r\n                }\r\n            } else {\r\n                uiCtrlContext.type = null;\r\n                this.svgElement.style.cursor = \"\";\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Processor of changing the scale of this viewer.\r\n     * It can be used as an action in the control-map.\r\n     * @param {Event} _event \r\n     * @param {Object} _opt Optional. The options\r\n     * @param {Number} _opt.min Optional. The min scale of the viewer. The default value is 0.1\r\n     * @param {Number} _opt.max Optional. The max scale of the viewer. The default valule is 2\r\n     * @param {Number} _opt.delta Optional. The changing value of the scale each time. The default value is 0.02\r\n     * @param {String} _opt.by Optional. Indicate the changing of the scale is base on which axis does the pointer changed. The default value is \"y\"\r\n     */\r\n    [\"zoom-view\"](_event, _opt) {\r\n        _opt || (_opt = {});\r\n        if (_event instanceof WheelEvent) {\r\n            let scale = (_opt.by === \"x\") ? (_event.deltaX > 0) : ((_opt.by === \"z\") ? (_event.deltaZ > 0) : (_event.deltaY > 0));\r\n            scale = scale ? this.scale - (Number(_opt.delta) || 0.02)\r\n                          : this.scale + (Number(_opt.delta) || 0.02);\r\n            this.scale = Math.min(Math.max(scale, (Number(_opt.min) || 0.1)), (Number(_opt.max) || 2));\r\n            _event.preventDefault();\r\n            _event.stopPropagation();\r\n        } else if (_event instanceof MouseEvent) {\r\n            const uiCtrlContext = this.#uiCtrlContext;\r\n            if (_event.type === \"mousedown\") {\r\n                uiCtrlContext.type = \"zoom-view\";\r\n                uiCtrlContext.x = _event.clientX;\r\n                uiCtrlContext.y = _event.clientY;\r\n                this.svgElement.style.cursor = \"zoom-in\";\r\n            } else if (_event.type === \"mousemove\") {\r\n                if (uiCtrlContext.type === \"zoom-view\") {\r\n                    let zoomDelta = (_opt.by === \"x\" ? (uiCtrlContext.x < _event.clientX) : (uiCtrlContext.y < _event.clientY));\r\n                    zoomDelta = (zoomDelta ? (0 - (Number(_opt.delta) || 0.02)) : (Number(_opt.delta) || 0.02));\r\n                    uiCtrlContext.x = _event.clientX;\r\n                    uiCtrlContext.y = _event.clientY;\r\n                    this.svgElement.style.cursor = (zoomDelta > 0) ? \"zoom-in\" : \"zoom-out\";\r\n                    this.scale = Math.min(Math.max(this.scale + zoomDelta, (Number(_opt.min) || 0.1)), (Number(_opt.max) || 2));\r\n                }\r\n            } else {\r\n                uiCtrlContext.type = null;\r\n                this.svgElement.style.cursor = \"\";\r\n            }\r\n            _event.preventDefault();\r\n            _event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Processor of moving the focus to an other topic.\r\n     * It can be used as an action in the control-map.\r\n     * @param {Event} _event \r\n     * @param {String} _dir Optional. The direction of the destination topic from the the current focus topic. This parameter can be \"left\" or \"right\"\r\n     */\r\n    [\"goto-topic-with-direction\"](_event, _dir) {\r\n        const isRight = (_dir === \"right\")\r\n        let topic = this.focusTopic;\r\n        if (topic) {\r\n            if (topic.level < 1) {\r\n                for (topic = topic.firstChildTopic; topic; topic = topic.nextSiblingTopic) {\r\n                    if (topic.direction == isRight) {\r\n                        topic.setFocus();\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                if (topic.direction == isRight) {\r\n                    this.gotoChildrenTopic();\r\n                } else {\r\n                    this.gotoParentTopic();\r\n                }\r\n            }\r\n            _event.preventDefault();\r\n            _event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @summary Control-map for defining the actions of the UI event.\r\n     * @type {Object}\r\n     * The name of each member should be a value generated by the MindmapView.getContrlMapKey\r\n     * Each member in the map should be the type of UIControlMapItem\r\n     * @example \r\n     * // Map the arrow-left key and arrow-right key to move the focus\r\n     * UIControlMap = {\r\n     *     \"arrowright\": { action: \"$goto-topic-with-direction\", args: [true]},\r\n     *     \"arrowleft\": { action: \"$goto-topic-with-direction\", args: [false]}\r\n     * };\r\n     */\r\n    UIControlMap = {\r\n        \"ctrl+wheel\": { action: \"zoom-view\", args: [{}] },\r\n        \"mouseleft\": { action: \"move-view\" },\r\n        \"arrowright\": { action: \"goto-topic-with-direction\", args: [\"right\"]},\r\n        \"arrowleft\": { action: \"goto-topic-with-direction\", args: [\"left\"]},\r\n        \"arrowup\": { action: \"gotoPreviousSiblingTopic\" },\r\n        \"arrowdown\": { action: \"gotoNextSiblingTopic\" },\r\n        \"f2\": { action: \"editFocusTopic\" },\r\n        \"delete\": { action: \"deleteFocusTopic\" },\r\n        \"tab\": { action: \"createChildTopic\" },\r\n        \"enter\": { action: \"createSiblingTopic\" },\r\n        \"home\": { action: \"gotoRootTopic\" },\r\n    };\r\n}\r\n\r\n/**\r\n * Type of the member in the control-map\r\n * @static\r\n * @typedef {Object} UIControlMapItem\r\n * @property {Function|String} action The action binded to this item. It can be a function or the method name in the assigned instance.\r\n * @property {Array} args The external arguments passed to the action. Note: the event will be taken as the first argument automatically any time.\r\n */","/**\r\n * @author season <season-studio@outlook.com>\r\n * @license Apache-2.0\r\n */\r\n\r\nimport { TopicExtensionFactor } from \"../topicExtension\";\r\nimport { topicHRefTemplate } from \"./topicHRef\";\r\nimport { topicLabelsTemplate } from \"./topicLabels\";\r\nimport { topicNotesTemplate } from \"./topicNotes\";\r\nimport { topicPriorityTemplate } from \"./topicPriority\";\r\nimport { topicTaskMarkerTemplate } from \"./topicTaskMarker\";\r\n\r\nexport \r\n/**\r\n * Create a factor of the topic's extension\r\n * @param {String} _templateXML The XML string of the template of the extension\r\n * @param {String} _parseType Optional. The MIME type of the XML string. \"image/svg+xml\" will be taken as default if the argument is empty.\r\n * @param {String} _rootSelector Optional. The selector to locate the root node in the template. \"svg\" will be taken as default\r\n * @returns {TopicExtensionFactor} The instance of the factor\r\n */\r\nfunction CreateTopicExtensionFactor(_templateXML, _parseType, _rootSelector) {\r\n    return new TopicExtensionFactor((new DOMParser()).parseFromString(_templateXML, _parseType || \"image/svg+xml\").querySelector(_rootSelector || \"svg\"));\r\n}\r\n\r\nexport \r\n/**\r\n * The list of the default extensions for the topic\r\n * @constant\r\n * @type {Array<TopicExtensionFactor>}\r\n */\r\nconst DefaultTopicExtensions = [\r\n    CreateTopicExtensionFactor(topicPriorityTemplate),\r\n    CreateTopicExtensionFactor(topicTaskMarkerTemplate),\r\n    CreateTopicExtensionFactor(topicHRefTemplate),\r\n    CreateTopicExtensionFactor(topicLabelsTemplate),\r\n    CreateTopicExtensionFactor(topicNotesTemplate)\r\n];","export const topicPriorityTemplate = `\r\n<!--template XML-->\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n    <defs eblock-predefined=\"\" d-tag=\"topic-priority\">\r\n        <symbol id=\"topic-priority-1\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <path fill=\"#f00\" fill-opacity=\"0.8\" stroke=\"#fff\" stroke-width=\"2\" stroke-opacity=\"0.8\" d=\"M1 10A9 9 0 1 1 20 10A9 9 0 1 1 1 10M8 7L10.5 6V16\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-priority-2\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <path fill=\"#f00\" fill-opacity=\"0.8\" stroke=\"#fff\" stroke-width=\"2\" stroke-opacity=\"0.8\" d=\"M1 10A9 9 0 1 1 20 10A9 9 0 1 1 1 10M7 8C10.5 1 20 8 7 14M6 14H16\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-priority-3\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <path fill=\"#f0f\" fill-opacity=\"0.8\" stroke=\"#fff\" stroke-width=\"2\" stroke-opacity=\"0.8\" d=\"M1 10A9 9 0 1 1 20 10A9 9 0 1 1 1 10M7 7C10.5 1 20 8 10 10C21 10 10.5 21 6 12\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-priority-4\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <path fill=\"#f0f\" fill-opacity=\"0.8\" stroke=\"#fff\" stroke-width=\"2\" stroke-opacity=\"0.8\" d=\"M1 10A9 9 0 1 1 20 10A9 9 0 1 1 1 10M12 4Q10 10 6 13M5 13H15M13 8L11 16\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-priority-5\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <path fill=\"#06f\" fill-opacity=\"0.8\" stroke=\"#fff\" stroke-width=\"2\" stroke-opacity=\"0.8\" d=\"M1 10A9 9 0 1 1 20 10A9 9 0 1 1 1 10M9 4Q9 7 8 9M7 9C18 5 16 20 6 14M9 5H14\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-priority-6\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <path fill=\"#06f\" fill-opacity=\"0.8\" stroke=\"#fff\" stroke-width=\"2\" stroke-opacity=\"0.8\" d=\"M1 10A9 9 0 1 1 20 10A9 9 0 1 1 1 10M7 9C13 7 16 13 10 15C4 15 4 9 13 4\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-priority-7\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <path fill=\"#093\" fill-opacity=\"0.8\" stroke=\"#fff\" stroke-width=\"2\" stroke-opacity=\"0.8\" d=\"M1 10A9 9 0 1 1 20 10A9 9 0 1 1 1 10M7 8V6Q11 7 13 6.5Q10 12 9 16\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-priority-8\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <path fill=\"#093\" fill-opacity=\"0.8\" stroke=\"#fff\" stroke-width=\"2\" stroke-opacity=\"0.8\" d=\"M1 10A9 9 0 1 1 20 10A9 9 0 1 1 1 10M10 9C6 8 7 3 12 4C15 5 15 10 10 9C16 10 16 16.5 10 16C4 15 4 9 10 9\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-priority-9\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <path fill=\"#993\" fill-opacity=\"0.8\" stroke=\"#fff\" stroke-width=\"2\" stroke-opacity=\"0.8\" d=\"M1 10A9 9 0 1 1 20 10A9 9 0 1 1 1 10M15 10C6 16 5 3.5 12 4.5C18 6 16 17 7 16\"></path>\r\n        </symbol>\r\n    </defs>\r\n    <script eblock-script=\"\">\r\n    <![CDATA[\r\n        declarer.getExtensionInfo = function () {\r\n            return {\r\n                name: \"priority\"\r\n            };\r\n        };\r\n        declarer.onRendering = function (_data) {\r\n            if (_data) {\r\n                let priority = Number(_data.priority);\r\n                if (priority && (priority > 0) && (priority < 10)) {\r\n                    this.$assignedNode.setAttribute(\"href\", \"#topic-priority-\" + priority);\r\n                } else {\r\n                    this.unmount();\r\n                }\r\n            }\r\n        };\r\n    ]]>\r\n    </script>\r\n    <use eblock-template=\"\" season-topic-content-type=\"priority\" ebevent-rendering=\"onRendering\" width=\"22\" height=\"22\" />\r\n</svg>\r\n`;\r\n","export const topicTaskMarkerTemplate = `\r\n<!--template XML-->\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n    <defs eblock-predefined=\"\" d-tag=\"topic-task-marker\">\r\n        <symbol id=\"topic-task-marker-0\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <path fill=\"#fff\" fill-opacity=\"0.8\" stroke=\"#093\" stroke-width=\"1\" stroke-opacity=\"0.8\" d=\"M1 10A9 9 0 1 1 20 10A9 9 0 1 1 1 10M8 14V5L15 10L8 15V6\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-task-marker-1\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <circle cx=\"10.5\" cy=\"10.5\" r=\"10\" stroke=\"none\" fill=\"#093\" fill-opacity=\"0.8\"></circle>\r\n            <path stroke=\"none\" fill=\"#fff\" fill-opacity=\"0.8\" d=\"M10.5 10.5V2A8.5 8.5 180 1 0 16.5 4.5L10.5 10.5\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-task-marker-2\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <circle cx=\"10.5\" cy=\"10.5\" r=\"10\" stroke=\"none\" fill=\"#093\" fill-opacity=\"0.8\"></circle>\r\n            <path stroke=\"none\" fill=\"#fff\" fill-opacity=\"0.8\" d=\"M10.5 10.5V2A8.5 8.5 180 1 0 19 10.5L10.5 10.5\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-task-marker-3\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <circle cx=\"10.5\" cy=\"10.5\" r=\"10\" stroke=\"none\" fill=\"#093\" fill-opacity=\"0.8\"></circle>\r\n            <path stroke=\"none\" fill=\"#fff\" fill-opacity=\"0.8\" d=\"M10.5 10.5V2A8.5 8.5 180 1 0 16.5 16.5L10.5 10.5\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-task-marker-4\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <circle cx=\"10.5\" cy=\"10.5\" r=\"10\" stroke=\"none\" fill=\"#093\" fill-opacity=\"0.8\"></circle>\r\n            <path stroke=\"none\" fill=\"#fff\" fill-opacity=\"0.8\" d=\"M10.5 10.5V2A8.5 8.5 180 0 0 10.5 19L10.5 10.5\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-task-marker-5\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <circle cx=\"10.5\" cy=\"10.5\" r=\"10\" stroke=\"none\" fill=\"#093\" fill-opacity=\"0.8\"></circle>\r\n            <path stroke=\"none\" fill=\"#fff\" fill-opacity=\"0.8\" d=\"M10.5 10.5V2A8.5 8.5 180 0 0 4.5 16.5L10.5 10.5\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-task-marker-6\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <circle cx=\"10.5\" cy=\"10.5\" r=\"10\" stroke=\"none\" fill=\"#093\" fill-opacity=\"0.8\"></circle>\r\n            <path stroke=\"none\" fill=\"#fff\" fill-opacity=\"0.8\" d=\"M10.5 10.5V2A8.5 8.5 180 0 0 2 10.5L10.5 10.5\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-task-marker-7\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <circle cx=\"10.5\" cy=\"10.5\" r=\"10\" stroke=\"none\" fill=\"#093\" fill-opacity=\"0.8\"></circle>\r\n            <path stroke=\"none\" fill=\"#fff\" fill-opacity=\"0.8\" d=\"M10.5 10.5V2A8.5 8.5 180 0 0 4.5 4.5L10.5 10.5\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-task-marker-8\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <path fill=\"#093\" fill-opacity=\"0.8\" stroke=\"#fff\" stroke-width=\"2\" stroke-opacity=\"0.8\" d=\"M1 10A9 9 0 1 1 20 10A9 9 0 1 1 1 10M15 6L10 13L6 9\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-task-marker-unknown\" width=\"20\" height=\"20\" viewBox=\"-1 -1 22 22\">\r\n            <path fill=\"#fff\" fill-opacity=\"0.8\" stroke=\"#093\" stroke-width=\"1\" stroke-opacity=\"0.8\" d=\"M1 10A9 9 0 1 1 20 10A9 9 0 1 1 1 10M7 8A3.5 3.5 0 1 1 10.5 10.5V13M10.5 14V16M9.5 15H11.5\"></path>\r\n        </symbol>\r\n    </defs>\r\n    <script eblock-script=\"\">\r\n    <![CDATA[\r\n        declarer.getExtensionInfo = function () {\r\n            return {\r\n                name: \"task-marker\"\r\n            };\r\n        };\r\n        declarer.onRendering = function (_data) {\r\n            if (_data && (\"task-marker\" in _data)) {\r\n                let task = Number(_data[\"task-marker\"]);\r\n                if ((task >= 0) && (task <= 8)) {\r\n                    this.$assignedNode.setAttribute(\"href\", \"#topic-task-marker-\" + task);\r\n                } else {\r\n                    this.$assignedNode.setAttribute(\"href\", \"#topic-task-marker-unknown\");\r\n                }\r\n            } else {\r\n                this.unmount();\r\n            }\r\n        };\r\n    ]]>\r\n    </script>\r\n    <use eblock-template=\"\" season-topic-content-type=\"task-marker\" ebevent-rendering=\"onRendering\" width=\"22\" height=\"22\" />\r\n</svg>\r\n`;\r\n","export const topicHRefTemplate = `\r\n<!--template XML-->\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n    <style eblock-predefined=\"\" d-tag=\"topic-href\">\r\n        .season-topic-href {\r\n            fill: rgba(255,255,255,0.05);\r\n            stroke: none;\r\n        }\r\n        .season-topic-href > use {\r\n            fill: var(--topic-font-color);\r\n        }\r\n        .season-topic-href:hover {\r\n            fill: var(--topic-ui-focus-color);\r\n            fill-opacity: 0.3;\r\n            stroke: none;\r\n        }\r\n        .season-topic-href:hover > use {\r\n            fill-opacity: 1;\r\n        }\r\n    </style>\r\n    <defs eblock-predefined=\"\" d-tag=\"topic-href\">\r\n        <symbol id=\"topic-href-link-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\r\n            <path d=\"M 19,7.115 13.63,2.5 v 2.692 c -8.226,0.08 -8.339,8.658 -8.339,8.658 0,0 1.746,-4.562 8.339,-4.619 v 2.499 z\"></path>\r\n            <path d=\"M 5 3.625 C 3.892 3.625 3 4.517 3 5.625 L 3 14.62 C 3 15.73 3.892 16.62 5 16.62 L 15.01 16.62 C 16.12 16.62 17.01 15.73 17.01 14.62 L 17.01 10.33 L 15.81 11.35 L 15.81 13.76 C 15.81 14.68 15.07 15.42 14.15 15.42 L 5.857 15.42 C 4.939 15.42 4.199 14.68 4.199 13.76 L 4.199 6.482 C 4.199 5.564 4.939 4.824 5.857 4.824 L 12.49 4.824 L 12.5 3.625 L 5 3.625 z\"></path>\r\n        </symbol>\r\n        <symbol id=\"topic-href-resource-icon\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\r\n            <path d=\"m 4.407,16.36 c -1.535,-1.53 -1.536,-4.02 -0,-5.55 L 11.87,3.344 c 1.11,-1.125 2.97,-1.125 4.09,0 1.12,1.126 1.12,2.968 0,4.094 L 9.086,14.31 c -0.729,0.73 -1.902,0.73 -2.632,0 -0.731,-0.72 -0.729,-1.9 0,-2.63 L 9.97,8.17 10.84,9.045 7.332,12.56 c -0.245,0.25 -0.247,0.63 0,0.87 0.248,0.25 0.63,0.25 0.876,0 L 15.08,6.56 c 0.65,-0.643 0.65,-1.696 0,-2.34 -0.65,-0.642 -1.7,-0.642 -2.34,0 l -7.457,7.47 c -1.05,1.04 -1.047,2.73 0,3.79 1.052,1.05 2.746,1.05 3.797,0 l 3.08,-3.08 0.88,0.87 -3.08,3.08 c -1.537,1.54 -4.022,1.53 -5.557,0 z\"></path>\r\n        </symbol>\r\n    </defs>\r\n    <script eblock-script=\"\">\r\n    <![CDATA[\r\n        declarer.getExtensionInfo = function () {\r\n            return {\r\n                name: \"href\"\r\n            };\r\n        };\r\n        declarer.onRendering = function (_data, _, _topic) {\r\n            if (!_data || !_data.href) {\r\n                this.unmount();\r\n            } else {\r\n                let type = _topic.env.getHRefType(_data.href);\r\n                let node = this.$assignedNode.querySelector(\":scope > use\");\r\n                node && node.setAttribute(\"href\", (type === \"link\") ? \"#topic-href-link-icon\" : \"#topic-href-resource-icon\");\r\n            }\r\n        };\r\n    ]]>\r\n    </script>\r\n    <g eblock-template=\"\" season-topic-content-type=\"href\" class=\"season-topic-href\" ebevent-rendering=\"onRendering\">\r\n        <rect width=\"20\" height=\"20\" rx=\"3\" ry=\"3\" />\r\n        <use href=\"#topic-href-link-icon\" width=\"20\" height=\"20\" />\r\n    </g>\r\n</svg>\r\n`;","export const topicLabelsTemplate = `\r\n<!--template XML-->\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n    <style eblock-predefined=\"\" d-tag=\"topic-labels\">\r\n        .season-topic-label > rect {\r\n            fill: rgba(255,255,255,0.7);\r\n            stroke-width: 0.5px;\r\n            stroke-dasharray: 2;\r\n            stroke: #666;\r\n            /* clean-css ignore:start */rx: 5px;/* clean-css ignore:end */\r\n            /* clean-css ignore:start */ry: 5px;/* clean-css ignore:end */\r\n        }\r\n        .season-topic-label > text {\r\n            alignment-baseline: before-edge;\r\n            dominant-baseline: text-before-edge;\r\n            font-size: 0.8em;\r\n            fill: #666;\r\n        }\r\n    </style>\r\n    <script eblock-script=\"\">\r\n    <![CDATA[\r\n        declarer.getExtensionInfo = function () {\r\n            return {\r\n                name: \"labels\"\r\n            };\r\n        };\r\n        declarer.onRendering = function (_data, _, _topic) {\r\n            const labels = (_data && _data.labels);\r\n            if (!labels || !_data.labels.length) {\r\n                this.unmount();\r\n            } else {\r\n                const renderedLabels = [];\r\n                this.$assignedNode.querySelectorAll(\".season-topic-label\").forEach(item => {\r\n                    let labelVal = item.getAttribute(\"d-label\");\r\n                    if (!labels.includes(labelVal)) {\r\n                        item.remove();\r\n                    } else {\r\n                        renderedLabels.push(labelVal);\r\n                    }\r\n                });\r\n                labels.forEach(item => {\r\n                    if (!renderedLabels.includes(item)) {\r\n                        let gNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n                        gNode.setAttribute(\"class\", \"season-topic-label\");\r\n                        gNode.innerHTML = '<text transform=\"translate(2, 2)\">' + item + '</text>';\r\n                        this.$assignedNode.appendChild(gNode);\r\n                        let box = gNode.getBBox();\r\n                        gNode.insertAdjacentHTML(\"afterbegin\", '<rect x=\"0\" y=\"0\" width=\"' + String(parseInt(box.width) + 4) + '\" height=\"' + String(parseInt(box.height) + 4) + '\" />');\r\n                    }\r\n                });\r\n                let x = 0;\r\n                this.$assignedNode.querySelectorAll(\".season-topic-label\").forEach(item => {\r\n                    item.setAttribute(\"transform\", \"translate(\" + x + \",0)\");\r\n                    let box = item.getBBox();\r\n                    x += box.width + 2;\r\n                });\r\n            }\r\n        };\r\n    ]]>\r\n    </script>\r\n    <g eblock-template=\"\" season-topic-content-type=\"labels\" class=\"season-topic-labels\" ebevent-rendering=\"onRendering\">\r\n    </g>\r\n</svg>\r\n`;","export const topicNotesTemplate = `\r\n<!--template XML-->\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n    <style eblock-predefined=\"\" d-tag=\"topic-notes\">\r\n        .season-topic-notes {\r\n            fill: rgba(255,255,255,0.05);\r\n            stroke: none;\r\n        }\r\n        .season-topic-notes > use {\r\n            fill: rgba(255,255,255,0.3);\r\n            stroke-width: 1.5px;\r\n            stroke: #111;\r\n        }\r\n        .season-topic-notes:hover > use {\r\n            fill: #fff;\r\n            stroke-width: 1.5px;\r\n            stroke: #000;\r\n        }\r\n    </style>\r\n    <script eblock-script=\"\">\r\n    <![CDATA[\r\n        declarer.getExtensionInfo = function () {\r\n            return {\r\n                name: \"notes\"\r\n            };\r\n        };\r\n        declarer.onRendering = function (_data, _, _topic) {\r\n            if (!_data || !_data.notes) {\r\n                this.unmount();\r\n            }\r\n        };\r\n    ]]>\r\n    </script>\r\n    <g eblock-template=\"\" season-topic-content-type=\"notes\" class=\"season-topic-notes\" ebevent-rendering=\"onRendering\">\r\n        <use href=\"#season-topic-predefine-image-nodepad\" width=\"20\" height=\"20\" />\r\n    </g>\r\n</svg>\r\n`;","/**\r\n * @author season <season-studio@outlook.com>\r\n * @license Apache-2.0\r\n */\r\n\r\nimport { MindmapEnvironment } from \"./mindmapEnv\";\r\nimport { generateDialogBubblePath } from \"./miscUtilities\";\r\nimport { assert } from \"../thirdpart/toolkits/src/assert\";\r\nimport { readonlyMember } from \"../thirdpart/toolkits/src/readonly\";\r\n\r\nfunction getLimitProp(_val1, _val2) {\r\n    return Math.min(Number(_val1) || Number.MAX_VALUE, Number(_val2) || Number.MAX_VALUE);\r\n}\r\n\r\nfunction setupBackground(_node, _bgNode, _context, _opt) {\r\n    let generatorCfg = _node.getAttribute(\"mmap-layout-background\");\r\n    let generator = generatorCfg && (_opt[generatorCfg] || MindmapAddinPanel.backgroundGenerator[generatorCfg]);\r\n    if (typeof generator === \"function\") {\r\n        const box = _node.getBBox();\r\n        const left = (box.x >= 0 ? 0 : box.x);\r\n        const top = (box.y >= 0 ? 0 : box.y);\r\n        const width = (box.width + Math.abs(box.x) * 2);\r\n        const height = (box.height + Math.abs(box.y) * 2);\r\n        _bgNode = generator.call(this, _bgNode, { left, top, width, height }, _node, _context, _opt);\r\n        if (_bgNode) {\r\n            _bgNode.classList.add(\"mmap-layout-background\");\r\n            //(_bgNode.style.display === \"none\") && (_bgNode.style.display = \"\");\r\n            _node.insertAdjacentElement(\"afterbegin\", _bgNode);\r\n        }\r\n    } /* else {\r\n        _bgNode && _bgNode.remove();\r\n    } */\r\n}\r\n\r\nfunction unspecialLayout(_node, _context, _opt) {\r\n    _node.querySelectorAll(\":scope > *\").forEach(item => dispacthLayout.call(this, item, _context, _opt));\r\n}\r\n\r\nfunction prepareCurrentContext(_node, _context) {\r\n    const maxWidth = getLimitProp(_node.getAttribute(\"mmap-layout-max-width\"), _context.maxWidth);\r\n    let margin = Number(_node.getAttribute(\"mmap-layout-margin\") || undefined);\r\n    isNaN(margin) && (margin = (Number(_context.margin) || 0));\r\n    let padding = Number(_node.getAttribute(\"mmap-layout-padding\") || undefined);\r\n    isNaN(padding) && (padding = (Number(_context.padding) || 0));\r\n    return { maxWidth, margin, padding };\r\n}\r\n\r\nfunction lineLayout(_node, _context, _opt) {\r\n    const subContext = prepareCurrentContext(_node, _context);\r\n    const { maxWidth, margin, padding } = subContext;\r\n    let offsetX = padding;\r\n    let offsetY = padding;\r\n    let lineHeight = 0;\r\n    _node.querySelectorAll(\":scope > *\").forEach(item => {\r\n        dispacthLayout.call(this, item, subContext, _opt);\r\n        if (item instanceof SVGGraphicsElement) {\r\n            const { width:itemWidth, height:itemHeight } = item.getBBox();\r\n            if (itemWidth > 0) {\r\n                const transform = item.getAttribute(\"predefine-transform\");\r\n                if ((offsetX + itemWidth + padding) > maxWidth) {\r\n                    offsetX = padding;\r\n                    offsetY += lineHeight + margin;\r\n                    lineHeight = itemHeight;\r\n                } else {\r\n                    (lineHeight < itemHeight) && (lineHeight = itemHeight);\r\n                }\r\n                item.setAttribute(\"transform\", transform ? `translate(${offsetX},${offsetY}),${transform}` : `translate(${offsetX},${offsetY})`);\r\n                offsetX += itemWidth + margin;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction rowLayout(_node, _context, _opt) {\r\n    const subContext = prepareCurrentContext(_node, _context);\r\n    const { margin, padding } = subContext;\r\n    const rightNodes = [];\r\n    let offsetY = padding;\r\n    let offsetX = padding;\r\n    _node.querySelectorAll(\":scope > *\").forEach(item => {\r\n        dispacthLayout.call(this, item, subContext, _opt);\r\n        if (item instanceof SVGGraphicsElement) {\r\n            const { width:itemWidth, height:itemHeight } = item.getBBox();\r\n            if (itemWidth > 0 && itemHeight > 0) {\r\n                if (item.getAttribute(\"mmap-layout-align\") === \"right\") {\r\n                    rightNodes.push({y:offsetY, node:item, width:itemWidth});\r\n                } else {\r\n                    const transform = item.getAttribute(\"predefine-transform\");\r\n                    item.setAttribute(\"transform\", transform ? `translate(${offsetX},${offsetY}),${transform}` : `translate(${offsetX},${offsetY})`);\r\n                }\r\n                offsetY += itemHeight + margin;\r\n            }\r\n        }\r\n    });\r\n    const {width:nodeWidth} = _node.getBBox();\r\n    rightNodes.forEach(item => {\r\n        const transform = item.node.getAttribute(\"predefine-transform\");\r\n        item.node.setAttribute(\"transform\", transform ? `translate(${nodeWidth - item.width},${item.y}),${transform}` : `translate(${nodeWidth - item.width},${item.y})`);\r\n    })\r\n}\r\n\r\nfunction dispacthLayout(_node, _context, _opt) {\r\n    _context || (_context = {});\r\n    \r\n    const bgNode = _node.querySelector(\":scope > .mmap-layout-background\");\r\n    bgNode && bgNode.remove();//(bgNode.style.display = \"none\");\r\n\r\n    const layoutType = _node.getAttribute(\"mmap-layout\");\r\n    const fn = (MindmapAddinPanel.layout[layoutType] || unspecialLayout);\r\n    (typeof fn === \"function\") && fn.call(this, _node, _context, _opt);\r\n\r\n    setupBackground.call(this, _node, bgNode, _context, _opt);\r\n}\r\n\r\n// the map of the instance of the MindmapAddinPanel\r\nconst InstanceMap = new WeakMap();\r\n\r\n/**\r\n * @classdesc Class of the addin panel in the mindmap container.\r\n * The panel is implemented by SVG\r\n * @constructor\r\n * @param {SVGGraphicsElement} _parentNode the parent node for containing the panel\r\n * @param {Node|String} _content the content of the panel, it can be an instance of Node or a string of SVG\r\n * @param {Object} _opt the options\r\n * @param {*} _opt.singletonStamp Optional. The stamp if the panel should be singleton.\r\n * @param {*} _opt.singletonMutex Optional. The mutex symbol for the singleton panel. The acquiring will close the existed panel with the same singletonStamp but with the different mutex symbol.\r\n * @param {*} _opt.rootAttrs Optional. The set of key-value pair which will be set as the attributes of the root node of the panel.\r\n * @param {MindmapEnvironment} _opt.env Optional. The enviroment of the mindmap viewer. This value must be set if the panel should be bind with the topic event. Such as the \"mmap-bind-cancel-edit\" or \"mmap-bind-hide-in-render\" is set as the attribute of the root node.\r\n * @param {Function} _opt.onInitialize Optional. The fucntion will be call when initializing the panel. This function will be called with the _opt as the argument.\r\n * @param {Function} _opt.onBeforeLayout Optional. The fucntion will be call before setting the layout of the panel. This function will be called with the _opt as the argument.\r\n * @param {Function} _opt.onAfterLayout Optional. The fucntion will be call after setting the layout of the panel. This function will be called with the _opt as the argument.\r\n * @param {Function} _opt.onClose Optional. The fucntion will be call when closing the panel. This function will be called with the _opt as the argument.\r\n * @returns an instance of MindmapAddinPanel\r\n */\r\nexport function MindmapAddinPanel(_parentNode, _content, _opt) {\r\n    if (!(this instanceof MindmapAddinPanel)) {\r\n        return new MindmapAddinPanel(...arguments);\r\n    }\r\n\r\n    assert(_parentNode instanceof SVGGraphicsElement, Error, \"_parentNode must be an instance of SVGGraphicsElement\");\r\n    assert(_content, Error, \"_content must be an instance of Node or a XML snippet of the content\");\r\n\r\n    _opt || (_opt = {});\r\n\r\n    if (_opt.singletonStamp) {\r\n        let singletonNode = _parentNode.querySelector(`:scope > [mmap-singleton=\"${_opt.singletonStamp}\"]`);\r\n        let singleton = (singletonNode && InstanceMap.get(singletonNode));\r\n        if (singleton instanceof MindmapAddinPanel) {\r\n            if ((_opt.singletonMutex !== undefined) && (String(_opt.singletonMutex) !== singletonNode.getAttribute(\"mmap-singleton-mutex\"))) {\r\n                singleton.close();\r\n            } else {\r\n                return singleton;\r\n            }\r\n        }\r\n    }\r\n\r\n    let rootNode;\r\n    if (_content instanceof Node) {\r\n        rootNode = _content;\r\n    } else {\r\n        rootNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n        rootNode.insertAdjacentHTML(\"afterbegin\", _content);\r\n    }\r\n    if (_opt.singletonStamp) {\r\n        rootNode.setAttribute(\"mmap-singleton\", _opt.singletonStamp);\r\n        (_opt.singletonMutex !== undefined) && rootNode.setAttribute(\"mmap-singleton-mutex\", _opt.singletonMutex);\r\n    }\r\n    _parentNode.appendChild(rootNode);\r\n    InstanceMap.set(rootNode, this);\r\n\r\n    if (_opt.rootAttrs) {\r\n        for (let key in _opt.rootAttrs) {\r\n            rootNode.setAttribute(key, _opt.rootAttrs[key]);\r\n        }\r\n    }\r\n\r\n    const onBeforeRender = (function () {\r\n        rootNode.remove();\r\n    }).bind(this);\r\n\r\n    const onAfterRender = (function () {\r\n        _parentNode.appendChild(rootNode);\r\n        if (rootNode.getAttribute(\"mmap-bind-hide-in-render\") === \"relayout\") {\r\n            this.relayout();\r\n        }\r\n    }).bind(this);\r\n\r\n    const onClick = (function (_event) {\r\n        try {\r\n            _event.composedPath().forEach(node => {\r\n                const eventMapKey = node.getAttribute(\"mmap-event-click\");\r\n                const fn = (eventMapKey && _opt[eventMapKey]);\r\n                if (typeof fn === \"function\") {\r\n                    fn.call(this, _event, node, _opt, eventMapKey);\r\n                    _event.preventDefault();\r\n                    _event.stopPropagation();\r\n                    throw null;\r\n                }\r\n                if (node === rootNode) {\r\n                    _event.preventDefault();\r\n                    _event.stopPropagation();\r\n                    throw null;\r\n                }\r\n            });\r\n        } catch (_err) {\r\n            _err && console.warn(\"Fail in processing click event in MindmapAddinPanel\", _err);\r\n        }\r\n    }).bind(this);\r\n\r\n    const onDoubleClick = (function (_event) {\r\n        try {\r\n            _event.composedPath().forEach(node => {\r\n                const eventMapKey = node.getAttribute(\"mmap-event-dblclick\");\r\n                const fn = (eventMapKey && _opt[eventMapKey]);\r\n                if (typeof fn === \"function\") {\r\n                    fn.call(this, _event, node, _opt, eventMapKey);\r\n                    _event.preventDefault();\r\n                    _event.stopPropagation();\r\n                    throw null;\r\n                }\r\n                if (node === rootNode) {\r\n                    _event.preventDefault();\r\n                    _event.stopPropagation();\r\n                    throw null;\r\n                }\r\n            });\r\n        } catch (_err) {\r\n            _err && console.warn(\"Fail in processing dblclick event in MindmapAddinPanel\", _err);\r\n        }\r\n    }).bind(this);\r\n\r\n    const onKeydown = (function (_event) {\r\n        try {\r\n            _event.composedPath().forEach(node => {\r\n                const eventMapKey = node.getAttribute(\"mmap-event-keydown\");\r\n                const fn = (eventMapKey && _opt[eventMapKey]);\r\n                if (typeof fn === \"function\") {\r\n                    fn.call(this, _event, node, _opt, eventMapKey);\r\n                    throw null;\r\n                }\r\n                if (node === rootNode) {\r\n                    (String(_event.target.nodeName).toLowerCase() !== \"input\") && (!Boolean(_event.target.getAttribute(\"contenteditable\"))) && _event.preventDefault();\r\n                    throw null;\r\n                }\r\n            });\r\n        } catch (_err) {\r\n            _err && console.warn(\"Fail in processing keydown event in MindmapAddinPanel\", _err);\r\n        } finally {\r\n            _event.stopPropagation();\r\n        }\r\n    }).bind(this);\r\n\r\n    const onFilter = (function (_event) {\r\n        const eventDetail = _event.detail;\r\n        const contentType = (eventDetail && eventDetail.triggerContentType);\r\n        const filterCode = rootNode.getAttribute(_event.type === \"topic-event-trigger\" ? \"mmap-bind-filter-trigger\" : \"mmap-bind-filter-edit\");\r\n        (filterCode ? (contentType !== filterCode) : (contentType && (contentType !== \"title\"))) && this.close();\r\n    }).bind(this);\r\n\r\n    function onFilterMouseDown(_event) {\r\n        _event.stopPropagation();\r\n    }\r\n\r\n    function onFilterMouseUp(_event) {\r\n        _event.stopPropagation();\r\n    }\r\n\r\n    const onClose = (function () {\r\n        (typeof _opt.onClose === \"function\") && _opt.onClose.call(this, _opt);\r\n        if (_opt.env) {\r\n            _opt.env.removeEventListener(\"topic-event-cancel-edit\", onClose);\r\n            _opt.env.removeEventListener(\"topic-event-before-render\", onBeforeRender);\r\n            _opt.env.removeEventListener(\"topic-event-after-render\", onAfterRender);\r\n            _opt.env.removeEventListener(\"topic-event-trigger\", onFilter);\r\n            _opt.env.removeEventListener(\"topic-event-edit\", onFilter);\r\n        }\r\n        rootNode.removeEventListener(\"click\", onClick);\r\n        rootNode.removeEventListener(\"dblclick\", onDoubleClick);\r\n        rootNode.removeEventListener(\"mousedown\", onFilterMouseDown);\r\n        rootNode.removeEventListener(\"mouseup\", onFilterMouseUp);\r\n        rootNode.removeEventListener(\"keydown\", onKeydown);\r\n\r\n        const svg = rootNode.ownerSVGElement;\r\n        svg ? svg.focus() : _parentNode.focus();\r\n\r\n        rootNode.remove();\r\n    }).bind(this);\r\n\r\n    readonlyMember(this, {\r\n        rootNode,\r\n        relayout: () => { \r\n            (typeof _opt.onBeforeLayout === \"function\") && _opt.onBeforeLayout.call(this, _opt);\r\n            dispacthLayout.call(this, rootNode, undefined, _opt); \r\n            (typeof _opt.onAfterLayout === \"function\") && _opt.onAfterLayout.call(this, _opt);\r\n        },\r\n        close: onClose\r\n    });\r\n\r\n    rootNode.addEventListener(\"click\", onClick);\r\n    rootNode.addEventListener(\"dblclick\", onDoubleClick);\r\n    rootNode.addEventListener(\"mousedown\", onFilterMouseDown);\r\n    rootNode.addEventListener(\"mouseup\", onFilterMouseUp);\r\n    rootNode.addEventListener(\"keydown\", onKeydown);\r\n    if (_opt.env) {\r\n        rootNode.hasAttribute(\"mmap-bind-cancel-edit\") && _opt.env.addEventListener(\"topic-event-cancel-edit\", onClose);\r\n        if (rootNode.hasAttribute(\"mmap-bind-hide-in-render\")) {\r\n            _opt.env.addEventListener(\"topic-event-before-render\", onBeforeRender);\r\n            _opt.env.addEventListener(\"topic-event-after-render\", onAfterRender);\r\n        }\r\n        rootNode.hasAttribute(\"mmap-bind-filter-trigger\") && _opt.env.addEventListener(\"topic-event-trigger\", onFilter);\r\n        rootNode.hasAttribute(\"mmap-bind-filter-edit\") && _opt.env.addEventListener(\"topic-event-edit\", onFilter);\r\n    }\r\n\r\n    (typeof _opt.onInitialize === \"function\") && _opt.onInitialize.call(this, _opt);\r\n    \r\n    this.relayout();\r\n}\r\n\r\nconst DefaultBackgroundStyle = \"fill:#fff;stroke-width:0.5px;stroke:#ccc;filter:drop-shadow(0px 3px 5px #aaa);\";\r\n\r\nfunction setAttrStyleForNode(_node, _opt) {\r\n    if (_opt.attrs) {\r\n        for (let key in _opt.attrs) {\r\n            _node.setAttribute(key, _opt.attrs[key]);\r\n        }\r\n    }\r\n    if (_opt.style) {\r\n        for (let key in _opt.style) {\r\n            _node.style[key] = _opt.style[key];\r\n        }\r\n    }\r\n}\r\n\r\nreadonlyMember(MindmapAddinPanel, {\r\n    layout: readonlyMember({}, {\r\n        line: lineLayout,\r\n        row: rowLayout\r\n    }),\r\n    InstanceMap,\r\n    backgroundGenerator: readonlyMember({}, {\r\n        dialogBubble(_bgNode, { left, top, width, height }, _node, _context, _opt, _opt2) {\r\n            if (!(_bgNode instanceof SVGPathElement)) {\r\n                _bgNode && _bgNode.remove();\r\n                _bgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n            }\r\n            if (_bgNode) {\r\n                _opt2 || (_opt2 = {});\r\n                _bgNode.setAttribute(\"d\", \r\n                    generateDialogBubblePath(left, top, width, height, \r\n                                             (Number(_opt2.cornerRadius) || 7), \r\n                                             (Number(_opt2.raiseHeight) || 10),\r\n                                             (Number(_opt2.raiseBase) || 10),\r\n                                             (Number(_opt2.raiseOffset) || 0),\r\n                                             _opt2.raiseEdge));\r\n                _bgNode.setAttribute(\"style\", DefaultBackgroundStyle);\r\n                setAttrStyleForNode(_bgNode, _opt2);\r\n            }\r\n            return _bgNode;\r\n        },\r\n        roundRect(_bgNode, { left, top, width, height }, _node, _context, _opt, _opt2) {\r\n            if (!(_bgNode instanceof SVGRectElement)) {\r\n                _bgNode && _bgNode.remove();\r\n                _bgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\r\n            }\r\n            if (_bgNode) {\r\n                _bgNode.setAttribute(\"style\", DefaultBackgroundStyle);\r\n                _bgNode.setAttribute(\"rx\", (Number(_opt2 && _opt2.cornerRadius) || 7));\r\n                _bgNode.setAttribute(\"ry\", (Number(_opt2 && _opt2.cornerRadius) || 7));\r\n                _bgNode.setAttribute(\"x\", left);\r\n                _bgNode.setAttribute(\"y\", top);\r\n                _bgNode.setAttribute(\"width\", width);\r\n                _bgNode.setAttribute(\"height\", height);\r\n                setAttrStyleForNode(_bgNode, _opt2);\r\n            }\r\n            return _bgNode;\r\n        },\r\n        auto(_bgNode, { left, top, width, height }, _node, _context, _opt, _opt2) {\r\n            if (!(_bgNode instanceof SVGRectElement)) {\r\n                _bgNode && _bgNode.remove();\r\n                _bgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\r\n            }\r\n            if (_bgNode) {\r\n                _opt2 || (_opt2 = {});\r\n                const attrOpt = (_node.hasAttribute(\"d-auto-background\") && JSON.parse(`{${String(_node.getAttribute(d-auto-background)).replace(\"\\'\", \"\\\"\")}}`));\r\n                attrOpt && (_opt2 = Object.assign(attrOpt, _opt2));\r\n                _bgNode.setAttribute(\"x\", left);\r\n                _bgNode.setAttribute(\"y\", top);\r\n                _bgNode.setAttribute(\"width\", width);\r\n                _bgNode.setAttribute(\"height\", height);\r\n                setAttrStyleForNode(_bgNode, _opt2);\r\n            }\r\n            return _bgNode;\r\n        }\r\n    })\r\n});","/**\r\n * 动态触发链接\r\n * @param {String} _url 链接地址\r\n * @param {Object} _opt 选项，可以忽略\r\n */\r\n export function dynInvokeLink(_url, _opt) {\r\n    if (_url) {\r\n        const aElement = document.createElement(\"a\");\r\n        if (aElement) {\r\n            aElement.href = _url;\r\n            aElement.rel = \"noopener\";\r\n            if (_opt) {\r\n                for (const name in _opt) {\r\n                    aElement[name] = _opt[name];\r\n                }\r\n            }\r\n            aElement.click();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 拾取文件\r\n */\r\nexport function pickFile(_fileType) {\r\n    return new Promise((resoleve, reject) => {\r\n        try {\r\n            const inputElement = document.createElement(\"input\");\r\n            inputElement.type = \"file\";\r\n            _fileType && (inputElement.accept = _fileType);\r\n            inputElement.addEventListener(\"change\", () => { \r\n                const files = inputElement.files;\r\n                if (files.length > 0) {\r\n                    resoleve(files[0]);\r\n                } else {\r\n                    reject(0);\r\n                }\r\n            });\r\n            inputElement.click();\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n","import { Topic } from \"../topic\";\r\nimport { MindmapAddinPanel } from \"../mindmapAddinPanel\";\r\nimport { pickFile } from \"../../thirdpart/toolkits/src/fileDlgKit\";\r\n\r\nexport function TopicHRefTriggerAction(_eventDetail) {\r\n    const topic = _eventDetail.eventTarget;\r\n    (topic instanceof Topic) && topic.env.activeLink(topic.env.translateHRefToURL(topic.data.href).destination);\r\n}\r\n\r\nconst TopicHRefEditPanelXML = `\r\n<!--template XML-->\r\n<style>\r\n    .topic-href-edit-button > rect {\r\n        /* clean-css ignore:start */x: 0;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */y: 0;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */rx: 5px;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */ry: 5px;/* clean-css ignore:end */\r\n        width: 26px;\r\n        height: 26px;\r\n    }\r\n</style>\r\n<foreignObject width=\"100\" height=\"26\" style=\"padding:0px 5px 0px 0px;\">\r\n    <style>\r\n        .season-topic-href-editor {\r\n            outline: none;\r\n            border: 1px solid #777;\r\n            box-sizing: border-box;\r\n            width: 100%;\r\n            height: 100%;\r\n            color: #000;\r\n            background-color: #fff;\r\n            font-size: 12px;\r\n        }\r\n    </style>\r\n    <input xmlns=\"http://www.w3.org/1999/xhtml\" class=\"season-topic-href-editor\" tabindex=\"0\"></input>\r\n</foreignObject>\r\n<g class=\"season-topic-svg-button topic-href-edit-button\" mmap-event-click=\"browser\">\r\n    <rect />\r\n    <use href=\"#season-topic-predefine-image-open\" width=\"26\" height=\"26\" />\r\n</g>\r\n<g class=\"season-topic-svg-button topic-href-edit-button\" d-svg-button-danger=\"\" mmap-event-click=\"delete\">\r\n    <rect />\r\n    <use href=\"#season-topic-predefine-image-delete\" width=\"26\" height=\"26\" />\r\n</g>\r\n`;\r\n\r\nconst TopicHRefEditPanelOptions = {\r\n    rootAttrs: {\r\n        \"mmap-layout\": \"line\",\r\n        \"mmap-layout-margin\": \"0\",\r\n        \"mmap-layout-padding\": \"5\",\r\n        \"mmap-layout-background\": \"dialogBubble\",\r\n        \"mmap-bind-cancel-edit\": \"\",\r\n        \"mmap-bind-hide-in-render\": \"relayout\",\r\n        \"mmap-bind-filter-edit\": \"href\",\r\n        \"mmap-bind-filter-trigger\": \"href\"\r\n    },\r\n    singletonStamp: \"topic-href-editor\",\r\n    onInitialize(_opt) {\r\n        const inputNode = (this.inputNode = this.rootNode.querySelector(\".season-topic-href-editor\"));\r\n        if (inputNode && (_opt.topic instanceof Topic)) {\r\n            inputNode.value = (_opt.topic.data.href || \"\");\r\n            inputNode.select();\r\n        }\r\n    },\r\n    onAfterLayout(_opt) {\r\n        const panelBox = this.rootNode.getBBox();\r\n        const topicBox = _opt.topic.getGraphicRect();\r\n        this.rootNode.setAttribute(\"transform\", `translate(${topicBox.x + (topicBox.width - panelBox.width) / 2}, ${topicBox.y + topicBox.height + 11})`);\r\n        Topic.showNodeInSvgView(this.rootNode, this.rootNode.ownerSVGElement);\r\n        this.inputNode.focus();\r\n    },\r\n    async browser(_event, _node, _opt, _key) {\r\n        try {\r\n            const file = await pickFile();\r\n            if (file instanceof Blob) {\r\n                const param = {\r\n                    name: (_opt.env.config.defaultResourceAttachmentPrefix || \"\") + file.name,\r\n                    resource: file\r\n                };\r\n                _opt.env.fireEvent(\"topic-event-update-attachment\", param);\r\n                param.href && (this.inputNode.value = param.href);\r\n                this.close();\r\n            }\r\n        } catch (err) {\r\n            _opt.env.warn(\"Fail in pickup file as the attachment of the topic\", err);\r\n        }\r\n    },\r\n    delete(_event, _node, _opt, _key) {\r\n        this.inputNode.value = \"\";\r\n        this.close();\r\n    },\r\n    onClose(_opt) {\r\n        const topic = _opt.topic;\r\n        if (topic instanceof Topic) {\r\n            const newValue = String(this.inputNode.value).trim();\r\n            if (newValue !== topic.data.href) {\r\n                topic.changeData(\"href\", newValue || undefined);\r\n                topic.queueAction(() => topic.render());\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function TopicHRefEditAction(_eventDetail) {\r\n    const topic = _eventDetail.eventTarget;\r\n    (topic instanceof Topic) && MindmapAddinPanel(topic.$assignedNode.ownerSVGElement, TopicHRefEditPanelXML, Object.assign({topic, env:topic.env, singletonMutex:topic.id}, TopicHRefEditPanelOptions));\r\n}","import { MindmapError } from \"../mindmapError\";\r\nimport { assert } from \"../../thirdpart/toolkits/src/assert\";\r\nimport { pickFile } from \"../../thirdpart/toolkits/src/fileDlgKit\";\r\nimport { Topic } from \"../topic\";\r\nimport { MindmapEnvironment } from \"../mindmapEnv\";\r\n\r\nasync function changeTopicImage(_topic) {\r\n    const file = await pickFile(\".jpg,.jpeg,.png,.gif,.ico,.bmp,.svg\");\r\n    if (file instanceof Blob) {\r\n        const param = {\r\n            name: (_topic.env.config.defaultResourceAttachmentPrefix || \"\") + file.name,\r\n            resource: file\r\n        };\r\n        _topic.env.fireEvent(\"topic-event-update-attachment\", param);\r\n        if (param.href) {\r\n            const image = _topic.data.image;\r\n            if (image) {\r\n                _topic.changeData(\"image\", {\r\n                    src: param.href,\r\n                    width: image.width,\r\n                    height: image.height\r\n                });\r\n            } else {\r\n                const config = _topic.env.config;\r\n                const topicWidth = _topic.getRect().width - (config.padding * 2);\r\n                const topicContentNode = _topic.$assignedNode.querySelector(\":scope > [season-topic-content-group]\");\r\n                const topicContentComputedStyles = getComputedStyle(topicContentNode);\r\n                const suitableWidth = Math.max(topicWidth, (Number(_topic.data.customWidth) || Number(Object(/^\\d+/ig.exec(topicContentComputedStyles?.maxWidth))[0]) || Number(config.maxTopicLineWidth) || MindmapEnvironment.DefaultConfig.maxTopicLineWidth));\r\n                const imageObj = new Image();\r\n                imageObj.src = URL.createObjectURL(file);\r\n                await imageObj.decode();\r\n                URL.revokeObjectURL(imageObj.src);\r\n                let { width, height } = imageObj;\r\n                if (width > suitableWidth) {\r\n                    height = height / width * suitableWidth;\r\n                    width = suitableWidth;\r\n                }\r\n                _topic.changeData(\"image\", {\r\n                    src: param.href,\r\n                    width,\r\n                    height\r\n                });\r\n            }\r\n            _topic.queueAction(() => _topic.render());\r\n        }\r\n    }\r\n}\r\n\r\nexport async function TopicImageEditAction(_eventDetail) {\r\n    if (_eventDetail.force) {\r\n        const topic = _eventDetail.eventTarget;\r\n        assert(topic instanceof Topic, MindmapError, -1, \"Cannot invoke the image edit action without an instance of Topic\");\r\n        await changeTopicImage(topic);\r\n    }\r\n}\r\n\r\nconst topicImageTriggerTemplate = `\r\n<!--template XML-->\r\n<style>\r\n    .season-topic-image-trigger {\r\n        position: relative;\r\n    }\r\n    .season-topic-image-size-box {\r\n        box-sizing: border-box;\r\n        position: absolute;\r\n        top: var(--padding);\r\n        left: var(--padding);\r\n        right: var(--padding);\r\n        bottom: var(--padding);\r\n        border: 1px dashed #666;\r\n        background: none;\r\n    }\r\n    .season-topic-image-size-corner {\r\n        box-sizing: border-box;\r\n        position: absolute;\r\n        --corner-size: calc((var(--padding) + 1px) / 2);\r\n        border: var(--corner-size) solid rgba(0,0,0,0.3);\r\n        width: calc(var(--corner-size) + var(--corner-size));\r\n        height: calc(var(--corner-size) + var(--corner-size));\r\n    }\r\n    .season-topic-image-size-corner:hover {\r\n        border-color: rgba(0,0,0,0.6);\r\n    }\r\n    .season-topic-image-size-corner-lefttop {\r\n        border-right: none;\r\n        border-bottom: none;\r\n        top: calc(0px - var(--corner-size));\r\n        left: calc(0px - var(--corner-size));\r\n        cursor: nwse-resize;\r\n    }\r\n    .season-topic-image-size-corner-leftbottom {\r\n        border-right: none;\r\n        border-top: none;\r\n        bottom: calc(0px - var(--corner-size));\r\n        left: calc(0px - var(--corner-size));\r\n        cursor: nesw-resize;\r\n    }\r\n    .season-topic-image-size-corner-righttop {\r\n        border-left: none;\r\n        border-bottom: none;\r\n        top: calc(0px - var(--corner-size));\r\n        right: calc(0px - var(--corner-size));\r\n        cursor: nesw-resize;\r\n    }\r\n    .season-topic-image-size-corner-rightbottom {\r\n        border-left: none;\r\n        border-top: none;\r\n        bottom: calc(0px - var(--corner-size));\r\n        right: calc(0px - var(--corner-size));\r\n        cursor: nwse-resize;\r\n    }\r\n</style>\r\n<div class=\"season-topic-image-size-box\">\r\n    <div class=\"season-topic-image-size-corner season-topic-image-size-corner-lefttop\"></div>\r\n    <div class=\"season-topic-image-size-corner season-topic-image-size-corner-leftbottom\"></div>\r\n    <div class=\"season-topic-image-size-corner season-topic-image-size-corner-righttop\"></div>\r\n    <div class=\"season-topic-image-size-corner season-topic-image-size-corner-rightbottom\"></div>\r\n</div>\r\n`;\r\n\r\nconst topicImageTriggerToolbarTemplate = `\r\n<!--template XML-->\r\n<style>\r\n    .season-topic-image-trigger-toolbutton > rect {\r\n        /* clean-css ignore:start */rx: 6px;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */ry: 6px;/* clean-css ignore:end */\r\n        width: 24px;\r\n        height: 24px;\r\n    }\r\n</style>\r\n<g class=\"season-topic-svg-3d-button season-topic-image-trigger-toolbutton\" d-btn-action=\"browser\">\r\n    <rect />\r\n    <use x=\"1\" width=\"22\" height=\"22\" href=\"#season-topic-predefine-image-picture\" />\r\n</g>\r\n<g class=\"season-topic-svg-3d-button season-topic-image-trigger-toolbutton\" d-svg-button-danger=\"\" d-btn-action=\"delete\" transform=\"translate(26, 0)\">\r\n    <rect />\r\n    <use x=\"1\" width=\"22\" height=\"22\" href=\"#season-topic-predefine-image-delete\" />\r\n</g>\r\n`;\r\n\r\nfunction setupTopicImageTrigger(_topic, _triggerNode, _toolbarNode) {\r\n    const imageNode = _topic.$assignedNode.querySelector(\":scope > [season-topic-content-group] > .season-topic-image\");\r\n    if (_topic.data.image && imageNode) {\r\n        const { padding, secondaryPadding } = _topic.env.config;\r\n        let width = 0, height = 0, x = 0, y = 0;\r\n        let sizingContext = null;\r\n\r\n        _triggerNode.setAttribute(\"style\", `--padding:${padding}px;--secondary-padding:${secondaryPadding}px;`);\r\n        _triggerNode.setAttribute(\"class\", \"season-topic-image-trigger\");\r\n        _triggerNode.setAttribute(\"season-topic-image-trigger\", \"\");\r\n        _triggerNode.innerHTML = \"\";\r\n        _topic.$assignedNode.appendChild(_triggerNode);\r\n        _triggerNode.insertAdjacentHTML(\"afterbegin\", topicImageTriggerTemplate);\r\n        _topic.$assignedNode.appendChild(_toolbarNode);\r\n        _toolbarNode.insertAdjacentHTML(\"afterbegin\", topicImageTriggerToolbarTemplate);\r\n\r\n        function resetSizingBox() {\r\n            const boxRect = _topic.getGraphicRect();\r\n            const imageRect = _topic.getGraphicRect(\".season-topic-image\");\r\n            width = imageRect.width, height = imageRect.height;\r\n            x = imageRect.x - boxRect.x - padding;\r\n            y = imageRect.y - boxRect.y - padding;\r\n            _triggerNode.setAttribute(\"x\", x);\r\n            _triggerNode.setAttribute(\"y\", y);\r\n            _triggerNode.setAttribute(\"width\", width + padding * 2);\r\n            _triggerNode.setAttribute(\"height\", height + padding * 2);\r\n            _toolbarNode.setAttribute(\"transform\", `translate(${boxRect.width - padding - 48}, -26)`);\r\n        }\r\n\r\n        function cancelSizing() {\r\n            if (sizingContext) {\r\n                sizingContext = undefined;\r\n                resetSizingBox();\r\n            }\r\n        }\r\n\r\n        async function onBrowser(_event) {\r\n            changeTopicImage(_topic);\r\n            _event.preventDefault();\r\n            _event.stopPropagation();\r\n        }\r\n\r\n        function onDelete(_event) {\r\n            _topic.changeData(\"image\");\r\n            _topic.queueAction(() => _topic.render());\r\n            exitImageTrigger();\r\n            _event.preventDefault();\r\n            _event.stopPropagation();\r\n        }\r\n\r\n        function sizingProgress(_event) {\r\n            if (0 !== (_event.buttons & 1)) {\r\n                if (sizingContext) {\r\n                    let { e: deltaX, f: deltaY } = _triggerNode.ownerSVGElement.getScreenCTM().inverse().translate(_event.clientX, _event.clientY);\r\n                    width = sizingContext.oriWidth + (deltaX -= sizingContext.startX) * sizingContext.dx;\r\n                    height = sizingContext.oriHeight + (deltaY -= sizingContext.startY) * sizingContext.dy;\r\n                    (sizingContext.dx < 0) && (x = sizingContext.oriX + deltaX);\r\n                    (sizingContext.dy < 0) && (y = sizingContext.oriY + deltaY);\r\n                    if (width < 0) {\r\n                        (sizingContext.dx < 0) && (x += width);\r\n                        width = 0;\r\n                    }\r\n                    if (height < 0) {\r\n                        (sizingContext.dy < 0) && (y += height);\r\n                        height = 0;\r\n                    }\r\n                    _triggerNode.setAttribute(\"x\", x);\r\n                    _triggerNode.setAttribute(\"y\", y);\r\n                    _triggerNode.setAttribute(\"width\", width + padding * 2);\r\n                    _triggerNode.setAttribute(\"height\", height + padding * 2);\r\n                }\r\n            } else {\r\n                cancelSizing();\r\n            }\r\n        }\r\n\r\n        const sizingNodeMap = {\r\n            \".season-topic-image-size-corner-rightbottom\": {dx:1, dy:1},\r\n            \".season-topic-image-size-corner-righttop\": {dx:1, dy:-1},\r\n            \".season-topic-image-size-corner-lefttop\": {dx:-1, dy:-1},\r\n            \".season-topic-image-size-corner-leftbottom\": {dx:-1, dy:1}\r\n        };\r\n\r\n        function startSizing(_event) {\r\n            for (let item in sizingNodeMap) {\r\n                if (_event.target.matches(item)) {\r\n                    const {dx, dy} = sizingNodeMap[item];\r\n                    const startCTM = _triggerNode.ownerSVGElement.getScreenCTM().inverse().translate(_event.clientX, _event.clientY);\r\n                    sizingContext = { dx, dy, startX: startCTM.e, startY: startCTM.f, oriWidth: width, oriHeight: height, oriX: x, oriY: y };\r\n                    _event.preventDefault();\r\n                    _event.stopPropagation();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        function submitSizing(_event) {\r\n            if ((0 === (_event.buttons & 1)) && sizingContext) {\r\n                if ((width > 0) && (height > 0)) {\r\n                    let image = _topic.data.image;\r\n                    image && _topic.changeData(\"image\", {\r\n                        src: image.src,\r\n                        width,\r\n                        height\r\n                    });\r\n                    _topic.queueAction(() => _topic.render().queueAction(resetSizingBox));    \r\n                }\r\n                sizingContext = undefined;\r\n                _event.preventDefault();\r\n                _event.stopPropagation();\r\n            }\r\n        }\r\n\r\n        function filterClick(_event) {\r\n            _event.preventDefault();\r\n            _event.stopPropagation();\r\n        }\r\n\r\n        function waitEscKey(_event) {\r\n            (String(_event.key).toLowerCase() === \"escape\") && cancelSizing();\r\n        }\r\n\r\n        function exitImageTrigger() {\r\n            _topic.notify(\"topic-event-image-trigger-clear\");\r\n            _triggerNode.remove();\r\n            _toolbarNode.remove();\r\n        }\r\n\r\n        function filteOtherTrigger(_event) {\r\n            const eventDetail = _event.detail;\r\n            eventDetail && (eventDetail.triggerContentType !== \"image\") && exitImageTrigger();\r\n        }\r\n\r\n        function clearDomEnv() {\r\n            _triggerNode.removeEventListener(\"mousedown\", startSizing);\r\n            _triggerNode.removeEventListener(\"click\", filterClick);\r\n            _triggerNode.removeEventListener(\"dblclick\", onBrowser);\r\n            _triggerNode.ownerSVGElement.removeEventListener(\"mousemove\", sizingProgress);\r\n            _triggerNode.ownerSVGElement.removeEventListener(\"mouseup\", submitSizing);\r\n            _triggerNode.ownerSVGElement.removeEventListener(\"keydown\", waitEscKey);\r\n            _topic.env.removeEventListener(\"topic-event-cancel-edit\", exitImageTrigger);\r\n            _topic.env.removeEventListener(\"topic-event-trigger\", filteOtherTrigger);\r\n            _topic.env.removeEventListener(\"topic-event-image-trigger-clear\", clearDomEnv);\r\n\r\n            let btnNode = _toolbarNode.querySelector('[d-btn-action=\"browser\"]');\r\n            btnNode && btnNode.removeEventListener(\"click\", onBrowser);\r\n            (btnNode = _toolbarNode.querySelector('[d-btn-action=\"delete\"]'))\r\n                && btnNode.removeEventListener(\"click\", onDelete);\r\n        }\r\n\r\n        function initTriggerUI() {\r\n            _topic.notify(\"topic-event-image-trigger-clear\");\r\n\r\n            resetSizingBox();\r\n\r\n            _triggerNode.addEventListener(\"mousedown\", startSizing);\r\n            _triggerNode.addEventListener(\"click\", filterClick);\r\n            _triggerNode.addEventListener(\"dblclick\", onBrowser);\r\n            _triggerNode.ownerSVGElement.addEventListener(\"mousemove\", sizingProgress);\r\n            _triggerNode.ownerSVGElement.addEventListener(\"mouseup\", submitSizing);\r\n            _triggerNode.ownerSVGElement.addEventListener(\"keydown\", waitEscKey);\r\n            _topic.env.addEventListener(\"topic-event-cancel-edit\", exitImageTrigger, { once: true });\r\n            _topic.env.addEventListener(\"topic-event-trigger\", filteOtherTrigger, { once: true });\r\n            _topic.env.addEventListener(\"topic-event-image-trigger-clear\", clearDomEnv, { once: true });\r\n\r\n            let btnNode = _toolbarNode.querySelector('[d-btn-action=\"browser\"]');\r\n            btnNode && btnNode.addEventListener(\"click\", onBrowser);\r\n            (btnNode = _toolbarNode.querySelector('[d-btn-action=\"delete\"]'))\r\n                && btnNode.addEventListener(\"click\", onDelete);\r\n        }\r\n\r\n        initTriggerUI();\r\n    } else {\r\n        _triggerNode.remove();\r\n    }\r\n}\r\n\r\nexport function TopicImageTriggerAction(_eventDetail) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            const topic = _eventDetail.eventTarget;\r\n            if (topic instanceof Topic) {\r\n                let triggerNode = topic.$assignedNode.ownerSVGElement.querySelector(\"foreignObject[season-topic-image-trigger]\");\r\n                triggerNode || (triggerNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\"));\r\n                let toolbarNode = topic.$assignedNode.ownerSVGElement.querySelector(\"foreignObject[season-topic-image-trigger-toolbar]\");\r\n                toolbarNode || (toolbarNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\"));\r\n                if (triggerNode && toolbarNode) {\r\n                    setupTopicImageTrigger(topic, triggerNode, toolbarNode);\r\n                    resolve();\r\n                    return ;\r\n                }\r\n            }\r\n            reject(MindmapError(-1, \"cannot setup the trigger\"));\r\n        } catch (err) {\r\n            reject(err);\r\n        }\r\n    });\r\n}","import { Topic } from \"../topic\";\r\nimport { MindmapAddinPanel } from \"../mindmapAddinPanel\";\r\n\r\nconst TopicLabelsEditPanelXML = `\r\n<!--template XML-->\r\n<style>\r\n    .season-topic-label-edit-item {\r\n        font-size: 12px;\r\n    }\r\n    .season-topic-label-edit-item > text {\r\n        alignment-baseline: before-edge;\r\n        dominant-baseline: text-before-edge;\r\n        fill: #666;\r\n    }\r\n    .season-topic-label-edit-item > rect {\r\n        fill: none;\r\n        stroke-width: 0.5px;\r\n        stroke: #666;\r\n        stroke-dasharray: 2;\r\n    }\r\n    .season-topic-label-edit-delete > rect {\r\n        fill: #ddd;\r\n        stroke: none;\r\n    }\r\n    .season-topic-label-edit-delete > use {\r\n        fill: #fff;\r\n        stroke: none;\r\n    }\r\n    .season-topic-label-edit-delete:hover > rect {\r\n        fill: var(--topic-ui-danger-color);\r\n        stroke: none;\r\n    }\r\n</style>\r\n<g mmap-layout=\"line\" mmap-layout-max-width=\"120\" mmap-layout-margin=\"5\" mmap-layout-padding=\"0\" class=\"season-topic-labels-edit-list\">\r\n\r\n</g>\r\n<foreignObject width=\"120\" height=\"26\">\r\n    <style>\r\n        .season-topic-label-edit-input {\r\n            width: 100%;\r\n            height: 100%;\r\n            outline: none;\r\n            border: 1px solid #ccc;\r\n            box-sizing: border-box;\r\n            font-size: 12px;\r\n        }\r\n    </style>\r\n    <input class=\"season-topic-label-edit-input\" placeholder=\"new label...\" mmap-event-keydown=\"onInputKeydown\" />\r\n</foreignObject>\r\n`;\r\n\r\nfunction createLabelItemUI(_label, _container) {\r\n    if (_label && (_container instanceof Node)) {\r\n        let gNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n        gNode.setAttribute(\"class\", \"season-topic-label-edit-item\");\r\n        gNode.setAttribute(\"d-label\", _label);\r\n        gNode.innerHTML = `<text>${_label}</text>`;\r\n        _container.appendChild(gNode);\r\n        let { width, height } = gNode.getBBox();\r\n        gNode.insertAdjacentHTML(\"afterbegin\", `<rect x=\"0\" y=\"0\" width=\"${width + height}\" height=\"${height}\" />`);\r\n        gNode.insertAdjacentHTML(\"beforeend\", `<g class=\"season-topic-label-edit-delete\" transform=\"translate(${width},0)\" mmap-event-click=\"delete\">\r\n            <rect x=\"0\" y=\"0\"  width=\"${height}\" height=\"${height}\" />\r\n            <use href=\"#season-topic-predefine-image-cross\" width=\"${height}\" height=\"${height}\" />\r\n        </g>`);\r\n    }\r\n}\r\n\r\nconst TopicLabelsEditPanelOptions = {\r\n    rootAttrs: {\r\n        \"mmap-layout\": \"row\",\r\n        \"mmap-layout-margin\": \"5\",\r\n        \"mmap-layout-padding\": \"10\",\r\n        \"mmap-layout-background\": \"dialogBubble\",\r\n        \"mmap-bind-cancel-edit\": \"\",\r\n        \"mmap-bind-hide-in-render\": \"relayout\",\r\n        \"mmap-bind-filter-edit\": \"labels\",\r\n        \"mmap-bind-filter-trigger\": \"labels\"\r\n    },\r\n    singletonStamp: \"topic-labels-editor\",\r\n    onInitialize(_opt) {\r\n        let labels = ((_opt.topic instanceof Topic) && _opt.topic.data.labels);\r\n        labels = Array.from((labels instanceof Array) ? labels : []);\r\n        this.labels = labels;\r\n        const listContainer = this.rootNode.querySelector(\".season-topic-labels-edit-list\");\r\n        labels.forEach(item => createLabelItemUI(item, listContainer));\r\n    },\r\n    onAfterLayout(_opt) {\r\n        const panelBox = this.rootNode.getBBox();\r\n        const topicBox = _opt.topic.getGraphicRect();\r\n        this.rootNode.setAttribute(\"transform\", `translate(${topicBox.x + (topicBox.width - panelBox.width) / 2}, ${topicBox.y + topicBox.height + 11})`);\r\n        Topic.showNodeInSvgView(this.rootNode, this.rootNode.ownerSVGElement);\r\n    },\r\n    onInputKeydown(_event, _node, _opt) {\r\n        const inputNode = _event.target;\r\n        if (inputNode) {\r\n            let key = String(_event.key).toLowerCase();\r\n            if (key === \"enter\") {\r\n                key = undefined;\r\n                let label = String(inputNode.value).trim();\r\n                if (!this.labels.includes(label)) {\r\n                    inputNode.value = \"\";\r\n                    this.labels.push(label);\r\n                    createLabelItemUI(label, this.rootNode.querySelector(\".season-topic-labels-edit-list\"));\r\n                    this.relayout();\r\n                }\r\n            } else if (key === \"tab\" ) {\r\n                key = undefined;\r\n            } else if (key === \"escape\") {\r\n                key = undefined;\r\n                inputNode.value = \"\";\r\n            }\r\n            key || (_event.preventDefault(), _event.stopPropagation());\r\n        }\r\n    },\r\n    onClose(_opt) {\r\n        const topic = _opt.topic;\r\n        if (topic instanceof Topic) {\r\n            const labels = this.labels;\r\n            if (String(labels) !== String(topic.data.labels)) {\r\n                topic.changeData(\"labels\", labels.length > 0 ? labels : undefined);\r\n                topic.queueAction(() => topic.render());\r\n            }\r\n        }\r\n    },\r\n    delete(_event, _node, _opt) {\r\n        while (_node) {\r\n            if (_node.hasAttribute(\"d-label\")) {\r\n                break;\r\n            }\r\n            _node = _node.parentNode;\r\n            if (_node === this.rootNode) {\r\n                _node = undefined;\r\n            }\r\n        }\r\n        if (_node && this.labels) {\r\n            const label = _node.getAttribute(\"d-label\");\r\n            const idx = this.labels.indexOf(label);\r\n            (idx >= 0) && this.labels.splice(idx, 1);\r\n            _node.remove();\r\n            this.relayout();\r\n        }\r\n    }\r\n}\r\n\r\nexport function TopicLabelsEditAction(_eventDetail) {\r\n    const topic = _eventDetail.eventTarget;\r\n    (topic instanceof Topic) && MindmapAddinPanel(topic.$assignedNode.ownerSVGElement, TopicLabelsEditPanelXML, Object.assign({topic, env:topic.env, singletonMutex:topic.id}, TopicLabelsEditPanelOptions));\r\n}","import { Topic } from \"../topic\";\r\nimport { MindmapAddinPanel } from \"../mindmapAddinPanel\";\r\n\r\nconst TopicNotesEditorPanelXML = `\r\n<!--template XML-->\r\n<style>\r\n    .season-topic-notes-editor-button > rect {\r\n        width: 20px;\r\n        height: 20px;\r\n        /* clean-css ignore:start */x: 0px;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */y: 0px;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */rx: 5px;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */ry: 5px;/* clean-css ignore:end */\r\n        fill: rgba(255,255,255,0.1);\r\n        stroke: none;\r\n    }\r\n    .season-topic-notes-editor-button > use {\r\n        fill: #000;\r\n        stroke: none;\r\n    }\r\n    .season-topic-notes-editor-button > path {\r\n        fill: #000;\r\n        stroke: none;\r\n    }\r\n    .season-topic-notes-editor-button:hover > use {\r\n        fill: var(--topic-ui-hover-front-color);\r\n        stroke: none;\r\n    }\r\n    .season-topic-notes-editor-button:hover > path {\r\n        fill: var(--topic-ui-hover-front-color);\r\n        stroke: none;\r\n    }\r\n    .season-topic-notes-editor-button:hover > rect {\r\n        fill: var(--topic-ui-hover-back-color);\r\n    }\r\n    .season-topic-notes-editor-delete:hover > rect {\r\n        fill: var(--topic-ui-danger-color);\r\n    }\r\n    .season-topic-notes-editor-toolbar > g > rect {\r\n        /* clean-css ignore:start */rx: 5px;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */ry: 5px;/* clean-css ignore:end */\r\n        width: 20px;\r\n        height: 20px;\r\n        /* clean-css ignore:start */x: 0px;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */y: 0px;/* clean-css ignore:end */\r\n    }\r\n</style>\r\n<g mmap-layout=\"line\" mmap-layout-margin=\"5\" mmap-layout-padding=\"0\" class=\"season-topic-notes-editor-toolbar\">\r\n    <g class=\"season-topic-svg-button\" mmap-event-click=\"setBold\">\r\n        <rect />\r\n        <use href=\"#season-topic-predefine-image-bold\" width=\"20\" height=\"20\" />\r\n    </g>\r\n    <g class=\"season-topic-svg-button\" mmap-event-click=\"setItalic\">\r\n        <rect />\r\n        <use href=\"#season-topic-predefine-image-italic\" width=\"20\" height=\"20\" />\r\n    </g>\r\n    <g class=\"season-topic-svg-button\" mmap-event-click=\"setUnderline\">\r\n        <rect />\r\n        <use href=\"#season-topic-predefine-image-underline\" width=\"20\" height=\"20\" />\r\n    </g>\r\n    <g class=\"season-topic-svg-button\" mmap-event-click=\"setUnorderList\">\r\n        <rect />\r\n        <use href=\"#season-topic-predefine-image-unorder-list\" width=\"20\" height=\"20\" />\r\n    </g>\r\n    <g class=\"season-topic-svg-button\" mmap-event-click=\"setOrderList\">\r\n        <rect />\r\n        <use href=\"#season-topic-predefine-image-order-list\" width=\"20\" height=\"20\" />\r\n    </g>\r\n    <rect width=\"60\" height=\"20\" fill=\"rgba(255,255,255,0.05)\" stroke=\"none\" />\r\n    <g class=\"season-topic-svg-button\" d-svg-button-danger=\"\" mmap-event-click=\"delete\">\r\n        <rect />\r\n        <use href=\"#season-topic-predefine-image-delete\" width=\"20\" height=\"20\" />\r\n    </g>\r\n</g>\r\n<foreignObject width=\"210\" height=\"170\">\r\n    <style>\r\n        .season-topic-notes-editor-box {\r\n            overflow: scroll;\r\n            border: 1px solid #666;\r\n            box-sizing: border-box;\r\n            width: 100%;\r\n            height: 100%;\r\n            outline: none;\r\n            font-size: 12px;\r\n            word-break: break-all;\r\n        }\r\n        .season-topic-notes-editor-box p {\r\n            margin: 0px;\r\n        }\r\n        .season-topic-notes-editor-box ul,.season-topic-notes-editor-box ol {\r\n            margin: 0px;\r\n            padding-left: 2em;\r\n        }\r\n        .season-topic-notes-editor-box code {\r\n            background-color: #ddd;\r\n            color: darkorange;\r\n        }\r\n    </style>\r\n    <div class=\"season-topic-notes-editor-box\" contenteditable=\"true\">\r\n        <p><br /></p>\r\n    </div>\r\n</foreignObject>\r\n`;\r\n\r\nconst EmptyInitialContent = \"<p><br /></p>\";\r\n\r\nfunction showPlainText(_node, _data) {\r\n    _node.innerHTML = _data.content ? `<p>${String(_data.content).split(\"\\n\").map(item => item.replace(/\\s/gi, \"&nbsp;\")).join(\"</p><p>\")}</p>`\r\n                                    : EmptyInitialContent;\r\n}\r\n\r\nconst opsAttrNodeMap = [{\r\n    key: \"bold\",\r\n    tag: \"b\"\r\n}, {\r\n    key: \"underline\",\r\n    tag: \"u\"\r\n}, {\r\n    key: \"italic\",\r\n    tag: \"i\"\r\n}, {\r\n    key: \"code\",\r\n    tag: \"code\"\r\n}, {\r\n    key: \"color\",\r\n    tag: \"span\",\r\n    formatter: function (_attrs) {\r\n        return ` style=\"color:${_attrs.color};\"`;\r\n    }\r\n}];\r\n\r\nconst TextContentReplaceMap = {\r\n    \"<\": \"&lt;\",\r\n    \">\": \"&gt;\"\r\n};\r\n\r\nfunction textContentReplacement(_src) {\r\n    return TextContentReplaceMap[_src] || \"&nbsp;\"\r\n}\r\n\r\nfunction insertContentItem(_content, _value, _attrs) {\r\n    let closeNodes;\r\n    if (_attrs) {\r\n        closeNodes = [];\r\n        opsAttrNodeMap.forEach(item => {\r\n            if (_attrs[item.key]) {\r\n                const nodeTag = item.tag;\r\n                const nodeClass = item.class;\r\n                const nodeStyle = item.style;\r\n                const formatter = item.formatter;\r\n                _content.push(`<${nodeTag}${nodeClass ? ` class=\"${nodeClass}\"` : \"\"}${nodeStyle ? ` style=\"${nodeStyle}\"` : \"\"}${formatter ? formatter(_attrs) : \"\"}>`);\r\n                closeNodes.unshift(`</${nodeTag}>`);\r\n            }\r\n        });\r\n    }\r\n    _content.push(_value.replace(/[\\s<>]/gi, textContentReplacement));\r\n    closeNodes && (closeNodes.length > 0) && _content.push.apply(_content, closeNodes);\r\n}\r\n\r\nconst opsPTagMap = {\r\n    bullet: { prefix:\"<ul>\", tag:\"li\", suffix: \"</ul>\" },\r\n    ordered: { prefix:\"<ol>\", tag:\"li\", suffix: \"</ol>\" }\r\n};\r\n\r\nfunction showOpsContent(_node, _data) {\r\n    const paragraphSet = [];\r\n    let paragraph = [];\r\n    paragraphSet.push(paragraph);\r\n\r\n    (_data.ops instanceof Array) && _data.ops.forEach(item => {\r\n        if (item) {\r\n            const attrs = item.attributes;\r\n            String(item.insert || \"\").split(\"\\n\").forEach((value, idx) => {\r\n                if (idx > 0) {\r\n                    paragraph.$type = (attrs && attrs.list);\r\n                    paragraphSet.push(paragraph = []);\r\n                }\r\n                if (value) {\r\n                    insertContentItem(paragraph, value, attrs);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    let ptagStack;\r\n    (paragraph.length === 0) && paragraphSet.pop();\r\n    _node.innerHTML = (paragraphSet.map(item => {\r\n        const ptag = opsPTagMap[item.$type];\r\n        const ret = [];\r\n        if (ptag !== ptagStack) {\r\n            ptagStack && ret.push(ptagStack.suffix);\r\n            ptag && ret.push(ptag.prefix);\r\n        }\r\n        ptagStack = ptag;\r\n        ret.push(`<${ptag ? ptag.tag : \"p\"}>`);\r\n        ret.push(item.join(\"\") || \"<br />\");\r\n        ret.push(`</${ptag ? ptag.tag : \"p\"}>`);\r\n        return ret.join(\"\");\r\n    }).join(\"\") || EmptyInitialContent);\r\n}\r\n\r\nconst htmlStyleNodeMap = [\r\n    { key: \"fo:font-weight\", value: \"bold\", tag: \"b\" },\r\n    { key: \"fo:font-style\", value: \"italic\", tag: \"i\" },\r\n    { key: \"fo:text-decoration\", value: \"underline\", tag: \"u\" }\r\n];\r\n\r\nfunction insertHtmlContentSpan(_content, _span) {\r\n    if (_span.text) {\r\n        let closeNodes;\r\n        const styleProps = (_span.style && _span.style.properties);\r\n        if (styleProps) {\r\n            closeNodes = [];\r\n            htmlStyleNodeMap.forEach(item => {\r\n                if (styleProps[item.key] === item.value) {\r\n                    const nodeTag = item.tag;\r\n                    const nodeClass = item.class;\r\n                    const nodeStyle = item.style;\r\n                    _content.push(`<${nodeTag}${nodeClass ? ` class=\"${nodeClass}\"` : \"\"}${nodeStyle ? ` style=\"${nodeStyle}\"` : \"\"}>`);\r\n                    closeNodes.unshift(`</${nodeTag}>`);\r\n                }\r\n            });\r\n        }\r\n        _content.push(_span.text.replace(/\\s/gi, \"&nbsp;\"));\r\n        closeNodes && (closeNodes.length > 0) && _content.push.apply(_content, closeNodes);\r\n    } else {\r\n        _content.push(\"<br />\");\r\n    }\r\n}\r\n\r\nfunction showHtmlContent(_node, _data) {\r\n    const content = [];\r\n    if (_data.paragraphs instanceof Array) {\r\n        _data.paragraphs.forEach(paragraph => {\r\n            content.push(\"<p>\");\r\n            (paragraph.spans instanceof Array) && paragraph.spans.forEach(span => insertHtmlContentSpan(content, span));\r\n            content.push(\"</p>\");\r\n        });\r\n    }\r\n    _node.innerHTML = (content.join(\"\") || EmptyInitialContent);\r\n}\r\n\r\nfunction showContent(_node, _notes) {\r\n    if (_node instanceof Node) {\r\n        _notes || (_notes = {});\r\n        if (_notes.ops) {\r\n            showOpsContent(_node, _notes.ops);\r\n        } else if (_notes.html && _notes.html.content) {\r\n            showHtmlContent(_node, _notes.html.content);\r\n        } else if (_notes.plain) {\r\n            showPlainText(_node, _notes.plain);\r\n        } else {\r\n            _node.innerHTML = EmptyInitialContent;\r\n        }\r\n    }\r\n}\r\n\r\nexport function serializeNoteFromNodeAsParagraphs(_node, _paragraphSet, _paragraph, _attr) {\r\n    const paragraphSet = (_paragraphSet || []);\r\n    if (_node) {\r\n        _node.normalize();\r\n        _node.childNodes.forEach(subNode => {\r\n            if (subNode instanceof HTMLBRElement) {\r\n                (_node.childElementCount > 1) && paragraphSet.push(_paragraph = []);\r\n            } else if (subNode.nodeType === Node.TEXT_NODE ) {\r\n                _paragraph || paragraphSet.push(_paragraph = []);\r\n                _paragraph.push({\r\n                    attr: _attr,\r\n                    text: subNode.textContent\r\n                });\r\n            } else if (subNode.childNodes.length <= 0) {\r\n                return;\r\n            } else if (subNode instanceof HTMLParagraphElement) {\r\n                paragraphSet.push(_paragraph = []);\r\n                _paragraph = serializeNoteFromNodeAsParagraphs(subNode, paragraphSet, _paragraph, _attr).paragraph;\r\n            } else if (subNode instanceof HTMLLIElement) {\r\n                paragraphSet.push(_paragraph = []);\r\n                _paragraph.$type = ((_node instanceof HTMLUListElement) ? \"bullet\" : \"ordered\");\r\n                serializeNoteFromNodeAsParagraphs(subNode, paragraphSet, _paragraph, _attr).paragraph;\r\n                _paragraph = undefined;\r\n            } else if ((subNode instanceof HTMLUListElement) || (subNode instanceof HTMLOListElement)) {\r\n                _paragraph = serializeNoteFromNodeAsParagraphs(subNode, paragraphSet, undefined, _attr).paragraph;\r\n            } else if (subNode instanceof HTMLSpanElement) {\r\n                let newAttr = Object.assign({}, _attr);\r\n                let style = subNode.style;\r\n                style.color  && (newAttr.color = style.color);\r\n                _paragraph = serializeNoteFromNodeAsParagraphs(subNode, paragraphSet, _paragraph, newAttr).paragraph;\r\n            } else if (subNode instanceof HTMLElement) {\r\n                let tag = String(subNode.nodeName).toLowerCase();\r\n                if (tag === \"code\") {\r\n                    let newAttr = Object.assign({}, _attr);\r\n                    newAttr.code = true;\r\n                    _paragraph = serializeNoteFromNodeAsParagraphs(subNode, paragraphSet, _paragraph, newAttr).paragraph;\r\n                } else if (tag === \"b\") {\r\n                    let newAttr = Object.assign({}, _attr);\r\n                    newAttr.bold = true;\r\n                    _paragraph = serializeNoteFromNodeAsParagraphs(subNode, paragraphSet, _paragraph, newAttr).paragraph;\r\n                } else if (tag === \"i\") {\r\n                    let newAttr = Object.assign({}, _attr);\r\n                    newAttr.italic = true;\r\n                    _paragraph = serializeNoteFromNodeAsParagraphs(subNode, paragraphSet, _paragraph, newAttr).paragraph;\r\n                } else if (tag === \"u\") {\r\n                    let newAttr = Object.assign({}, _attr);\r\n                    newAttr.underline = true;\r\n                    _paragraph = serializeNoteFromNodeAsParagraphs(subNode, paragraphSet, _paragraph, newAttr).paragraph;\r\n                } else {\r\n                    _paragraph = serializeNoteFromNodeAsParagraphs(subNode, paragraphSet, _paragraph, Object.assign({}, _attr)).paragraph;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return { paragraphSet, paragraph: _paragraph };\r\n}\r\n\r\nfunction serializeNoteOpsFromParagraphs(_paragraphSet) {\r\n    const ops = [];\r\n    let simpleLines = [];\r\n    _paragraphSet.forEach(paragraph => {\r\n        if (paragraph instanceof Array) {\r\n            paragraph.forEach(item => {\r\n                if (item.attr) {\r\n                    (simpleLines.length > 0) && ops.push({ insert: simpleLines.join(\"\") });\r\n                    simpleLines = [];\r\n                    ops.push({\r\n                        attributes: item.attr,\r\n                        insert: (item.text || \"\")\r\n                    });\r\n                } else {\r\n                    simpleLines.push(item.text || \"\");\r\n                }\r\n            });\r\n            if (paragraph.$type) {\r\n                (simpleLines.length > 0) && ops.push({ insert: simpleLines.join(\"\") });\r\n                simpleLines = [];\r\n                ops.push({\r\n                    attributes: {\r\n                        list: paragraph.$type\r\n                    },\r\n                    insert: \"\\n\"\r\n                });\r\n            } else {\r\n                simpleLines.push(\"\\n\");\r\n            }\r\n        }\r\n    });\r\n    (simpleLines.length > 0) && ops.push({ insert: simpleLines.join(\"\") });\r\n    return ops;\r\n}\r\n\r\nfunction serializeNoteHtmlFromParagraphs(_paragraphSet) {\r\n    const paragraphs = [];\r\n    _paragraphSet.forEach(paragraph => {\r\n        let spans = [];\r\n        paragraphs.push({ spans });\r\n        if (paragraph instanceof Array) {\r\n            paragraph.forEach(item => {\r\n                if (item.attr) {\r\n                    let props = {};\r\n                    let style = {\r\n                        type: \"text\",\r\n                        properties: props\r\n                    };\r\n                    item.attr.bold && (props[\"fo:font-weight\"] = \"bold\");\r\n                    item.attr.italic && (props[\"fo:font-style\"] = \"italic\");\r\n                    item.attr.underline && (props[\"fo:text-decoration\"] = \"underline\");\r\n                    spans.push({\r\n                        style,\r\n                        text: item.text\r\n                    });\r\n                } else {\r\n                    spans.push({ text: item.text });\r\n                }\r\n            });\r\n        }\r\n    });\r\n    return paragraphs;\r\n}\r\n\r\nfunction serializeNoteFromNode(_node) {\r\n    const paragraphSet = serializeNoteFromNodeAsParagraphs(_node).paragraphSet;\r\n    return {\r\n        plain: {\r\n            content: _node.textContent\r\n        },\r\n        ops: {\r\n            ops: serializeNoteOpsFromParagraphs(paragraphSet)\r\n        }, \r\n        html: {\r\n            content: {\r\n                paragraphs: serializeNoteHtmlFromParagraphs(paragraphSet)\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nconst NormalizeFlag = Symbol(\"season.topic.notes.normalize\");\r\n\r\nfunction normalizeNoteNodeAsSimpleText(_node) {\r\n    let retNode;\r\n    if (_node.getAttribute(\"style\")) {\r\n        const color = _node.style.color;\r\n        if (color) {\r\n            retNode = document.createElement(\"span\");\r\n            color && (retNode.style.color = color);\r\n        } else if (_node.childElementCount) {\r\n            retNode = document.createElement(\"span\");\r\n        }\r\n    } else if (_node.childElementCount) {\r\n        retNode = document.createElement(\"span\");\r\n    }\r\n    return retNode || document.createTextNode(_node.textContent);\r\n}\r\n\r\nconst NoteNodeNormalizeMap = {\r\n    \"p\": \"p\",\r\n    \"b\": \"b\",\r\n    \"u\": \"u\",\r\n    \"i\": \"i\",\r\n    \"ul\": \"ul\",\r\n    \"ol\": \"ol\",\r\n    \"li\": \"li\",\r\n    \"br\": \"br\",\r\n    \"h1\": \"p\",\r\n    \"h2\": \"p\",\r\n    \"h3\": \"p\",\r\n    \"h4\": \"p\",\r\n    \"h5\": \"p\",\r\n    \"h6\": \"p\",\r\n    \"div\": \"p\",\r\n    \"code\": \"code\"\r\n};\r\n\r\nfunction noteNodeNormalize(_node) {\r\n    if ((_node instanceof Node) && (!_node[NormalizeFlag])) {\r\n        switch (_node.nodeType) {\r\n            case Node.ELEMENT_NODE:\r\n                _node.normalize();\r\n                let tag = NoteNodeNormalizeMap[String(_node.nodeName).toLocaleLowerCase()];\r\n                let newNode;\r\n                if (typeof tag === \"string\") {\r\n                    newNode = document.createElementNS(_node.namespaceURI, tag);\r\n                } else if (typeof tag === \"function\") {\r\n                    newNode = tag(_node);\r\n                } else {\r\n                    newNode = normalizeNoteNodeAsSimpleText(_node);\r\n                }\r\n                if (newNode) {\r\n                    newNode[NormalizeFlag] = true;\r\n                    if (newNode instanceof Element) {\r\n                        _node.childNodes.forEach(subNode => {\r\n                            subNode = noteNodeNormalize(subNode);\r\n                            subNode && newNode.appendChild(subNode);\r\n                        });\r\n                    }\r\n                }\r\n                newNode.normalize();\r\n                return ((newNode.childNodes.length > 0) || (newNode instanceof HTMLBRElement) || (newNode.nodeType === Node.TEXT_NODE)) && newNode;\r\n                break;\r\n\r\n            case Node.TEXT_NODE:\r\n                const textNode = _node.cloneNode(true);\r\n                textNode[NormalizeFlag] = true;\r\n                return textNode;\r\n                break;\r\n\r\n            default:\r\n                return null;\r\n        }\r\n    } else {\r\n        return _node;\r\n    }\r\n}\r\n\r\nfunction filterPaste(_event) {\r\n    try {\r\n        let clipboardData = (_event.clipboardData || window.clipboardData);\r\n        if (clipboardData) {\r\n            let value = clipboardData.getData(\"text/html\");\r\n            if (value) {\r\n                const parser = new DOMParser();\r\n                const doc = parser.parseFromString(value, \"text/html\");\r\n                if (doc && !doc.querySelector('parsererror')) {\r\n                    const newNodes = [];\r\n                    doc.body.childNodes.forEach(item => {\r\n                        let newItem = noteNodeNormalize(item);\r\n                        (newItem instanceof Node) && newNodes.push((newItem.nodeType === Node.TEXT_NODE) ? newItem.wholeText : newItem.outerHTML);\r\n                    });\r\n                    /*\r\n                    const selection = getSelection();\r\n                    if (selection.rangeCount) {\r\n                        selection.deleteFromDocument();\r\n                        selection.getRangeAt(0).insertNode(insertContent);\r\n                    }\r\n                    */\r\n                    document.execCommand(\"insertHTML\", false, newNodes.join(\"\"));\r\n                }\r\n                _event.preventDefault();\r\n            }\r\n        }\r\n    } catch(err) {\r\n        _event.preventDefault();\r\n        console.warn(\"Fail in filte the paste content for the note's editor. The action is cancelled.\", err);\r\n    }\r\n}\r\n\r\nconst TopicNotesEditorPanelOptions = {\r\n    rootAttrs: {\r\n        \"mmap-layout\": \"row\",\r\n        \"mmap-layout-margin\": \"5\",\r\n        \"mmap-layout-padding\": \"10\",\r\n        \"mmap-layout-background\": \"dialogBubble\",\r\n        \"mmap-bind-cancel-edit\": \"\",\r\n        \"mmap-bind-hide-in-render\": \"relayout\",\r\n        \"mmap-bind-filter-edit\": \"notes\",\r\n        \"mmap-bind-filter-trigger\": \"notes\"\r\n    },\r\n    singletonStamp: \"topic-notes-shower\",\r\n    onInitialize(_opt) {\r\n        const editorNode = (this.editorNode = this.rootNode.querySelector(\".season-topic-notes-editor-box\"));\r\n        if (editorNode) {\r\n            // connectEditorMutationObserver(editorNode);\r\n            editorNode.addEventListener(\"paste\", this.onPaste = filterPaste.bind(this));\r\n            if (_opt.topic instanceof Topic) {\r\n                showContent(editorNode, _opt.topic.data.notes);\r\n            }\r\n        }\r\n    },\r\n    onAfterLayout(_opt) {\r\n        const panelBox = this.rootNode.getBBox();\r\n        const topicBox = _opt.topic.getGraphicRect();\r\n        this.rootNode.setAttribute(\"transform\", `translate(${topicBox.x + (topicBox.width - panelBox.width) / 2}, ${topicBox.y + topicBox.height + 11})`);\r\n        Topic.showNodeInSvgView(this.rootNode, this.rootNode.ownerSVGElement);\r\n    },\r\n    setBold(_event, _node, _opt) {\r\n        document.execCommand(\"bold\", false);\r\n    },\r\n    setItalic(_event, _node, _opt) {\r\n        document.execCommand(\"italic\", false);\r\n    },\r\n    setUnderline(_event, _node, _opt) {\r\n        document.execCommand(\"underline\", false);\r\n    },\r\n    setUnorderList(_event, _node, _opt) {\r\n        document.execCommand(\"insertUnorderedList\", false);\r\n    },\r\n    setOrderList(_event, _node, _opt) {\r\n        document.execCommand(\"insertOrderedList\", false);\r\n    },\r\n    delete(_event, _node, _opt) {\r\n        this.editorNode && (this.editorNode.innerHTML = EmptyInitialContent);\r\n        this.close();\r\n    },\r\n    onClose(_opt) {\r\n        if (this.editorNode) {\r\n            // disconnectEditorMutationObserver(this.editorNode);\r\n            this.editorNode.removeEventListener(\"paste\", this.onPaste);\r\n            let notes = serializeNoteFromNode(this.editorNode);\r\n            notes && (!String(notes.plain.content).trim()) && (notes = undefined);\r\n\r\n            const topic = _opt.topic;\r\n            if (topic instanceof Topic) {\r\n                const oriValue = topic.data.notes;\r\n                topic.changeData(\"notes\", notes);\r\n                ((oriValue && true) ^ (notes && true)) && topic.queueAction(() => topic.render());\r\n            } \r\n        }\r\n    }\r\n}\r\n\r\nexport function TopicNotesTriggerAction(_eventDetail) {\r\n    const topic = _eventDetail.eventTarget;\r\n    (topic instanceof Topic) && MindmapAddinPanel(topic.$assignedNode.ownerSVGElement, TopicNotesEditorPanelXML, Object.assign({topic, env:topic.env, singletonMutex:topic.id}, TopicNotesEditorPanelOptions));\r\n}\r\n\r\nexport const TopicNotesEditAction = TopicNotesTriggerAction;\r\n","import { MindmapAddinPanel } from \"../mindmapAddinPanel\";\r\nimport { Topic } from \"../topic\";\r\n\r\nconst TopicPriorityEditPanelXML = `\r\n<!--template XML-->\r\n<style>\r\n    .topic-priority-edit-item > rect {\r\n        width: 20px;\r\n        height: 20px; \r\n        /* clean-css ignore:start */x: 0; /* clean-css ignore:end */\r\n        /* clean-css ignore:start */y: 0;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */rx: 5px;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */ry: 5px;/* clean-css ignore:end */\r\n    }\r\n    .topic-priority-edit-item[d-priority-selected] > rect {\r\n        fill: var(--topic-ui-focus-color);\r\n        stroke: var(--topic-ui-focus-border-color);\r\n        stroke-width: 1px;\r\n        stroke-dasharray: 2;\r\n    }\r\n    .topic-priority-placeholder {\r\n        fill: none;\r\n        stroke: none;\r\n        width: 20px;\r\n        height: 20px;\r\n        /* clean-css ignore:start */x: 0; /* clean-css ignore:end */\r\n        /* clean-css ignore:start */y: 0;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */rx: 5px;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */ry: 5px;/* clean-css ignore:end */\r\n    }\r\n</style>\r\n<g mmap-layout=\"line\">\r\n    <g class=\"topic-priority-edit-item season-topic-svg-button\" mmap-event-click=\"selectPriority\" d-priority-value=\"1\">\r\n        <rect />\r\n        <use href=\"#topic-priority-1\" width=\"22\" height=\"22\" />\r\n    </g>\r\n    <g class=\"topic-priority-edit-item season-topic-svg-button\" mmap-event-click=\"selectPriority\" d-priority-value=\"2\">\r\n        <rect />\r\n        <use href=\"#topic-priority-2\" width=\"22\" height=\"22\" />\r\n    </g>\r\n    <g class=\"topic-priority-edit-item season-topic-svg-button\" mmap-event-click=\"selectPriority\" d-priority-value=\"3\">\r\n        <rect />\r\n        <use href=\"#topic-priority-3\" width=\"22\" height=\"22\" />\r\n    </g>\r\n    <g class=\"topic-priority-edit-item season-topic-svg-button\" mmap-event-click=\"selectPriority\" d-priority-value=\"4\">\r\n        <rect />\r\n        <use href=\"#topic-priority-4\" width=\"22\" height=\"22\" />\r\n    </g>\r\n</g>\r\n<g mmap-layout=\"line\">\r\n    <g class=\"topic-priority-edit-item season-topic-svg-button\" mmap-event-click=\"selectPriority\" d-priority-value=\"5\">\r\n        <rect />\r\n        <use href=\"#topic-priority-5\" width=\"22\" height=\"22\" />\r\n    </g>\r\n    <g class=\"topic-priority-edit-item season-topic-svg-button\" mmap-event-click=\"selectPriority\" d-priority-value=\"6\">\r\n        <rect />\r\n        <use href=\"#topic-priority-6\" width=\"22\" height=\"22\" />\r\n    </g>\r\n    <g class=\"topic-priority-edit-item season-topic-svg-button\" mmap-event-click=\"selectPriority\" d-priority-value=\"7\">\r\n        <rect />\r\n        <use href=\"#topic-priority-7\" width=\"22\" height=\"22\" />\r\n    </g>\r\n    <g class=\"topic-priority-edit-item season-topic-svg-button\" mmap-event-click=\"selectPriority\" d-priority-value=\"8\">\r\n        <rect />\r\n        <use href=\"#topic-priority-8\" width=\"22\" height=\"22\" />\r\n    </g>\r\n</g>\r\n<g mmap-layout=\"line\">\r\n    <g class=\"topic-priority-edit-item season-topic-svg-button\" mmap-event-click=\"selectPriority\" d-priority-value=\"9\">\r\n        <rect />\r\n        <use href=\"#topic-priority-9\" width=\"22\" height=\"22\" />\r\n    </g>\r\n    <rect class=\"topic-priority-placeholder\" />\r\n    <rect class=\"topic-priority-placeholder\" />\r\n    <g class=\"topic-priority-edit-item season-topic-svg-button\" d-svg-button-danger=\"\" mmap-event-click=\"deletePriority\">\r\n        <rect />\r\n        <use href=\"#season-topic-predefine-image-delete\" width=\"20\" height=\"20\" />\r\n    </g>\r\n</g>\r\n`;\r\n\r\nconst TopicPriorityEditPanelOptions = {\r\n    rootAttrs: {\r\n        \"mmap-layout\": \"row\",\r\n        \"mmap-layout-margin\": \"5\",\r\n        \"mmap-layout-padding\": \"5\",\r\n        \"mmap-layout-background\": \"dialogBubble\",\r\n        \"mmap-bind-cancel-edit\": \"\",\r\n        \"mmap-bind-hide-in-render\": \"relayout\",\r\n        \"mmap-bind-filter-edit\": \"priority\",\r\n        \"mmap-bind-filter-trigger\": \"priority\"\r\n    },\r\n    singletonStamp: \"topic-priority-editor\",\r\n    onInitialize(_opt) {\r\n        const node = this.rootNode.querySelector(`g[d-priority-value=\"${_opt.topic.data.priority}\"]`);\r\n        node && node.setAttribute(\"d-priority-selected\", \"\");\r\n    },\r\n    onAfterLayout(_opt) {\r\n        const panelBox = this.rootNode.getBBox();\r\n        const topicBox = _opt.topic.getGraphicRect();\r\n        this.rootNode.setAttribute(\"transform\", `translate(${topicBox.x + (topicBox.width - panelBox.width) / 2}, ${topicBox.y + topicBox.height + 11})`);\r\n        Topic.showNodeInSvgView(this.rootNode, this.rootNode.ownerSVGElement);\r\n    },\r\n    selectPriority(_event, _node, _opt, _key) {\r\n        const value = (Number(_node.getAttribute(\"d-priority-value\")) || 0);\r\n        if (_opt.topic && (value !== _opt.topic.data.priority)) {\r\n            _opt.topic.changeData(\"priority\", value);\r\n            _opt.topic.queueAction(() => _opt.topic.render());\r\n        }\r\n        this.close();\r\n    },\r\n    deletePriority(_event, _node, _opt, _key) {\r\n        if (_opt.topic) {\r\n            _opt.topic.changeData(\"priority\");\r\n            _opt.topic.queueAction(() => _opt.topic.render());\r\n        }\r\n        this.close();\r\n    }\r\n}\r\n\r\nexport function TopicPriorityEditAction(_eventDetail) {\r\n    const topic = _eventDetail.eventTarget;\r\n    (topic instanceof Topic) && MindmapAddinPanel(topic.$assignedNode.ownerSVGElement, TopicPriorityEditPanelXML, Object.assign({topic, env:topic.env, singletonMutex:topic.id}, TopicPriorityEditPanelOptions));\r\n}","import { MindmapAddinPanel } from \"../mindmapAddinPanel\";\r\nimport { Topic } from \"../topic\";\r\n\r\nconst TopicTaskMarkerEditPanelXML = `\r\n<!--template XML-->\r\n<style>\r\n    .topic-task-marker-item > rect {\r\n        width: 20px;\r\n        height: 20px; \r\n        /* clean-css ignore:start */x: 0; /* clean-css ignore:end */\r\n        /* clean-css ignore:start */y: 0;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */rx: 5px;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */ry: 5px;/* clean-css ignore:end */\r\n    }\r\n    .topic-task-marker-item[d-task-marker-selected] > rect {\r\n        fill: var(--topic-ui-focus-color);\r\n        stroke: var(--topic-ui-focus-border-color);\r\n        stroke-width: 1px;\r\n        stroke-dasharray: 2;\r\n    }\r\n    .topic-task-marker-placeholder {\r\n        fill: none;\r\n        stroke: none;\r\n        width: 20px;\r\n        height: 20px; \r\n        /* clean-css ignore:start */x: 0;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */y: 0;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */rx: 5px;/* clean-css ignore:end */\r\n        /* clean-css ignore:start */ry: 5px;/* clean-css ignore:end */\r\n    }\r\n</style>\r\n<g mmap-layout=\"line\">\r\n    <g class=\"topic-task-marker-item season-topic-svg-button\" mmap-event-click=\"selectTaskMarker\" d-task-marker-value=\"0\">\r\n        <rect />\r\n        <use href=\"#topic-task-marker-0\" width=\"22\" height=\"22\" />\r\n    </g>\r\n    <g class=\"topic-task-marker-item season-topic-svg-button\" mmap-event-click=\"selectTaskMarker\" d-task-marker-value=\"1\">\r\n        <rect />\r\n        <use href=\"#topic-task-marker-1\" width=\"22\" height=\"22\" />\r\n    </g>\r\n    <g class=\"topic-task-marker-item season-topic-svg-button\" mmap-event-click=\"selectTaskMarker\" d-task-marker-value=\"2\">\r\n        <rect />\r\n        <use href=\"#topic-task-marker-2\" width=\"22\" height=\"22\" />\r\n    </g>\r\n    <g class=\"topic-task-marker-item season-topic-svg-button\" mmap-event-click=\"selectTaskMarker\" d-task-marker-value=\"3\">\r\n        <rect />\r\n        <use href=\"#topic-task-marker-3\" width=\"22\" height=\"22\" />\r\n    </g>\r\n</g>\r\n<g mmap-layout=\"line\">\r\n    <g class=\"topic-task-marker-item season-topic-svg-button\" mmap-event-click=\"selectTaskMarker\" d-task-marker-value=\"4\">\r\n        <rect />\r\n        <use href=\"#topic-task-marker-4\" width=\"22\" height=\"22\" />\r\n    </g>\r\n    <g class=\"topic-task-marker-item season-topic-svg-button\" mmap-event-click=\"selectTaskMarker\" d-task-marker-value=\"5\">\r\n        <rect />\r\n        <use href=\"#topic-task-marker-5\" width=\"22\" height=\"22\" />\r\n    </g>\r\n    <g class=\"topic-task-marker-item season-topic-svg-button\" mmap-event-click=\"selectTaskMarker\" d-task-marker-value=\"6\">\r\n        <rect />\r\n        <use href=\"#topic-task-marker-6\" width=\"22\" height=\"22\" />\r\n    </g>\r\n    <g class=\"topic-task-marker-item season-topic-svg-button\" mmap-event-click=\"selectTaskMarker\" d-task-marker-value=\"7\">\r\n        <rect />\r\n        <use href=\"#topic-task-marker-7\" width=\"22\" height=\"22\" />\r\n    </g>\r\n</g>\r\n<g mmap-layout=\"line\">\r\n    <g class=\"topic-task-marker-item season-topic-svg-button\" mmap-event-click=\"selectTaskMarker\" d-task-marker-value=\"8\">\r\n        <rect />\r\n        <use href=\"#topic-task-marker-8\" width=\"22\" height=\"22\" />\r\n    </g>\r\n    <g class=\"topic-task-marker-item season-topic-svg-button\" mmap-event-click=\"selectTaskMarker\" d-task-marker-value=\"unknown\">\r\n        <rect />\r\n        <use href=\"#topic-task-marker-unknown\" width=\"22\" height=\"22\" />\r\n    </g>\r\n    <rect class=\"topic-task-marker-placeholder\" />\r\n    <g class=\"topic-task-marker-item season-topic-svg-button\" d-svg-button-danger=\"\" mmap-event-click=\"deleteTaskMarker\">\r\n        <rect />\r\n        <use href=\"#season-topic-predefine-image-delete\" width=\"20\" height=\"20\" />\r\n    </g>\r\n</g>\r\n`;\r\n\r\nconst TopicTaskMarkerEditPanelOptions = {\r\n    rootAttrs: {\r\n        \"mmap-layout\": \"row\",\r\n        \"mmap-layout-margin\": \"5\",\r\n        \"mmap-layout-padding\": \"5\",\r\n        \"mmap-layout-background\": \"dialogBubble\",\r\n        \"mmap-bind-cancel-edit\": \"\",\r\n        \"mmap-bind-hide-in-render\": \"relayout\",\r\n        \"mmap-bind-filter-edit\": \"task-marker\",\r\n        \"mmap-bind-filter-trigger\": \"task-marker\"\r\n    },\r\n    singletonStamp: \"topic-task-marker-editor\",\r\n    onInitialize(_opt) {\r\n        if (_opt.topic.data[\"task-marker\"] !== undefined) {\r\n            const taskMarker = Number(_opt.topic.data[\"task-marker\"]);\r\n            const node = this.rootNode.querySelector(`g[d-task-marker-value=\"${(taskMarker >=0 && taskMarker <= 8) ? taskMarker : \"unknown\"}\"]`);\r\n            node && node.setAttribute(\"d-task-marker-selected\", \"\");\r\n        }\r\n    },\r\n    onAfterLayout(_opt) {\r\n        const panelBox = this.rootNode.getBBox();\r\n        const topicBox = _opt.topic.getGraphicRect();\r\n        this.rootNode.setAttribute(\"transform\", `translate(${topicBox.x + (topicBox.width - panelBox.width) / 2}, ${topicBox.y + topicBox.height + 11})`);\r\n        Topic.showNodeInSvgView(this.rootNode, this.rootNode.ownerSVGElement);\r\n    },\r\n    selectTaskMarker(_event, _node, _opt, _key) {\r\n        let value = Number(_node.getAttribute(\"d-task-marker-value\"));\r\n        isNaN(value) && (value = \"unknown\");\r\n        if (_opt.topic && (value !== _opt.topic.data[\"task-marker\"])) {\r\n            _opt.topic.changeData(\"task-marker\", value);\r\n            _opt.topic.queueAction(() => _opt.topic.render());\r\n        }\r\n        this.close();\r\n    },\r\n    deleteTaskMarker(_event, _node, _opt, _key) {\r\n        if (_opt.topic) {\r\n            _opt.topic.changeData(\"task-marker\");\r\n            _opt.topic.queueAction(() => _opt.topic.render());\r\n        }\r\n        this.close();\r\n    }\r\n}\r\n\r\nexport function TopicTaskMarkerEditAction(_eventDetail) {\r\n    const topic = _eventDetail.eventTarget;\r\n    (topic instanceof Topic) && MindmapAddinPanel(topic.$assignedNode.ownerSVGElement, TopicTaskMarkerEditPanelXML, Object.assign({topic, env:topic.env, singletonMutex:topic.id}, TopicTaskMarkerEditPanelOptions));\r\n}","import { MindmapAddinPanel } from \"../mindmapAddinPanel\";\r\nimport { Topic } from \"../topic\";\r\n\r\nconst TopicTitleEditorTemplate = `\r\n<!--template XML-->\r\n<foreignObject>\r\n    <style>\r\n        .season-topic-title-editor {\r\n            outline: none;\r\n            border: 1px solid #777;\r\n            box-sizing: border-box;\r\n            width: 100%;\r\n            height: 100%;\r\n            color: #000;\r\n            background-color: #fff;\r\n            resize: none;\r\n            overflow: hidden;\r\n        }\r\n    </style>\r\n    <textarea xmlns=\"http://www.w3.org/1999/xhtml\" class=\"season-topic-title-editor\" tabindex=\"0\" mmap-event-keydown=\"onKeydown\"></textarea>\r\n</foreignObject>\r\n`;\r\n\r\nconst TopicTitleEditorPanelOptions = {\r\n    rootAttrs: {\r\n        \"mmap-bind-cancel-edit\": \"\",\r\n        \"mmap-bind-hide-in-render\": \"relayout\",\r\n        \"mmap-bind-filter-edit\": \"title\",\r\n        \"mmap-bind-filter-trigger\": \"title\"\r\n    },\r\n    singletonStamp: \"topic-title-editor\",\r\n    onInitialize(_opt) {\r\n        this.mainNode = this.rootNode.querySelector(\"foreignObject\");\r\n        this.inputNode = this.rootNode.querySelector(\".season-topic-title-editor\");\r\n        this.topic = _opt.topic;\r\n\r\n        this.onSubmit = (function () {\r\n            const value = String(this.inputNode.value).trim();\r\n            if (value !== this.topic.data.title) {\r\n                this.topic.changeData(\"title\", value);\r\n                this.topic.queueAction(() => this.topic.render());\r\n            }\r\n        }).bind(this);\r\n\r\n        this.onBlur = (function () {\r\n            this.onSubmit();\r\n            this.close();\r\n        }).bind(this);\r\n\r\n        this.inputNode.addEventListener(\"blur\", this.onBlur);\r\n    },\r\n    onAfterLayout(_opt) {\r\n        const config = this.topic.env.config;\r\n        const padding = (Number(config.padding) || 7) - 2;\r\n\r\n        this.inputNode.value = String(this.topic.data.title || \"\").trim();\r\n        this.inputNode.style.padding = (this.inputNode.style.borderRadius = `${padding}px`);\r\n\r\n        const boxRect = this.topic.getGraphicRect();\r\n        const titleRect = this.topic.getGraphicRect(\".season-topic-title\");\r\n        const y = (this.topic.$assignedNode.querySelector(\".season-topic-image\") ? (titleRect.y - boxRect.y - padding) : 1);\r\n        const height = boxRect.height - y - 1;\r\n        this.mainNode.setAttribute(\"x\", 1);\r\n        this.mainNode.setAttribute(\"y\", y);\r\n        this.mainNode.setAttribute(\"width\", boxRect.width - 2);\r\n        this.mainNode.setAttribute(\"height\", height);\r\n        \r\n        const titleNode = this.topic.$assignedNode.querySelector(\":scope > [season-topic-content-group] > .season-topic-title\");\r\n        const titleNodeStyle = getComputedStyle(titleNode);\r\n        titleNodeStyle && (this.inputNode.style.font = titleNodeStyle.font);\r\n\r\n        this.topic.queueAction(() => {\r\n            this.inputNode.focus();\r\n            this.inputNode.select();\r\n        });\r\n    },\r\n    onKeydown(_event, _node, _opt) {\r\n        let key = String(_event.key).toLowerCase();\r\n        if ((key === \"enter\") && (!_event.shiftKey)) {\r\n            key = undefined;\r\n            this.onSubmit();\r\n            this.close();\r\n        } else if (key === \"tab\" ) {\r\n            key = undefined;\r\n        } else if (key === \"escape\") {\r\n            key = undefined;\r\n            this.close();\r\n        }\r\n        key || (_event.preventDefault(), _event.stopPropagation());\r\n    },\r\n    onClose() {\r\n        this.inputNode.removeEventListener(\"blur\", this.onBlur);\r\n    }\r\n}\r\n\r\nexport function TopicTitleEditAction(_eventDetail) {\r\n    const topic = _eventDetail.eventTarget;\r\n    (topic instanceof Topic) && MindmapAddinPanel(topic.$assignedNode, TopicTitleEditorTemplate, Object.assign({ topic, env:topic.env }, TopicTitleEditorPanelOptions));\r\n}\r\n","/**\r\n * @author season <season-studio@outlook.com>\r\n * @license Apache-2.0\r\n */\r\n\r\nimport { TopicHRefEditAction, TopicHRefTriggerAction } from \"./defaultTopicHRefAction\";\r\nimport { TopicImageEditAction, TopicImageTriggerAction } from \"./defaultTopicImageActions\";\r\nimport { TopicLabelsEditAction } from \"./defaultTopicLabelsAction\";\r\nimport { TopicNotesEditAction, TopicNotesTriggerAction } from \"./defaultTopicNotesAction\";\r\nimport { TopicPriorityEditAction } from \"./defaultTopicPriorityAction\";\r\nimport { TopicTaskMarkerEditAction } from \"./defaultTopicTaskMarkerAction\";\r\nimport { TopicTitleEditAction } from \"./defaultTopicTitleActions\";\r\n\r\nexport\r\n/**\r\n * The default actions set of the topic\r\n * @static\r\n * @constant\r\n * @type {Object}\r\n */\r\nconst DefaultTopicEventActions = {\r\n    \"title\": { edit: TopicTitleEditAction },\r\n    \"image\": { edit: TopicImageEditAction, trigger: TopicImageTriggerAction },\r\n    \"priority\": { edit: TopicPriorityEditAction },\r\n    \"href\": { edit: TopicHRefEditAction, trigger: TopicHRefTriggerAction },\r\n    \"task-marker\": { edit: TopicTaskMarkerEditAction },\r\n    \"labels\": { edit: TopicLabelsEditAction },\r\n    \"notes\": { edit: TopicNotesEditAction, trigger: TopicNotesTriggerAction }\r\n};"],"names":["generateID","crypto","randomUUID","bind","getRandomValues","Uint8Array","join","assert","_cond","_error","_args","apply","undefined","DomEventHandler","Symbol","DomEventDispatcher","EBlockContainer","static","constructor","Object","defineProperty","this","value","writable","define","_node","Error","undefine","_selector","stageContainer","eventContainer","enableDomEvent","_eventName","addEventListener","disableDomEvent","removeEventListener","_event","EBlockFactor","WeakMap","_container","registry","RegistryMap","get","WeakSet","set","_stamp","predefineds","querySelectorAll","forEach","item","setAttribute","scripts","scriptNode","fnFactor","Function","textContent","err","console","error","querySelector","id","defineProperties","source","peekPredefineds","peekScripts","templateNode","peekTemplateNode","register","AcquireRegistry","has","cloneNode","onFactorRegister","callScript","add","unregister","onFactorUnregister","delete","generate","_containerNode","_blockClass","_data","_opts","prototype","EBlock","Node","eblock","mount","generateFromTemplate","queryNodeFromTemplate","_name","_this","applyScript","fn","BLOCK_ID","CONSTRUCTOR_REF","FACTOR_REF","DATA_REF","MetadataMap","eblockGetMappedData","key","eblockSetMappedData","_val","metadata","_block1","_block2","equal","_factorOrNode","targetNode","isCreate","queuePromise","initMetadata","metaDataDescs","getOwnPropertyDescriptors","mapDataDescs","$assignedNode","configurable","enumerable","data","factor","blockID","$stubFlag","desc","bindSource","getOwnPropertySymbols","queueAction","fireEvent","_metadata","acquireNode","_refNode","_refPosition","node","insertAdjacentElement","_eblock","_fn","$queuePromise","Promise","then","warn","resolve","eventSelectorPrefix","reverse","subItem","fnName","getAttribute","localFn","appendChild","unmount","remove","render","context","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","_createClass","protoProps","staticProps","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_inherits","subClass","superClass","create","_typeof","obj","iterator","_possibleConstructorReturn","call","assertThisInitialized","_getPrototypeOf","getPrototypeOf","_classExtractFieldDescriptor","receiver","privateMap","action","_classPrivateFieldGet","classApplyDescriptorGet","classExtractFieldDescriptor","_classPrivateFieldSet","classApplyDescriptorSet","MindmapError","_code","_msg","_detail","_len","arguments","Array","_key","Reflect","construct","code","detail","captureStackTrace","asyncGeneratorStep","gen","reject","_next","_throw","arg","info","done","_asyncToGenerator","args","_isNativeReflectConstruct","sham","Proxy","Boolean","valueOf","e","_construct","Parent","Class","isNativeReflectConstruct","a","push","_wrapNativeSuper","_cache","Map","toString","indexOf","Wrapper","_defineProperty","regenerator","require$$0","slice","cloneObject","_target","_source","assign","readonlyMember","_obj","_prop","_value","_enumerable","TopicExtension","_EBlock","_super","_createSuper","_topic","$info","name","parentNode","GetInstance","TopicExtensionFactor","_EBlockFactor","_super2","_this2","extensionInfo","MindmapEnvironment","_EventTarget","_confirm","_getImageData","_classPrivateFieldInitSpec","_extensionFactors","_config","freeze","DefaultConfig","result","_type","_param","dispatchEvent","Event","CustomEvent","_href","param","destination","href","type","_element","_opt","canvas","document","createElement","width","Number","height","getContext","fillStyle","fill","fillRect","drawImage","offsetX","offsetY","toBlob","r","toDataURL","_regeneratorRuntime","mark","_callee","_url","image","wrap","_context","prev","next","Image","src","crossOrigin","decode","getImageDataFromElement","abrupt","sent","t0","stop","_x","_x2","_console","_callee2","_tip","_context2","_x3","_x4","window","open","EventTarget","padding","secondaryPadding","levelMargin","secondaryLevelMargin","siblingMargin","secondarySiblingMargin","secondaryTopicLevel","maxTopicLineWidth","directionPriority","dragStartFocusFilterTimer","dragStartNoFocusFilterTimer","resourceScheme","defaultResourceAttachmentPrefix","placeholderImageId","backgroundColor","ResizeProc","ResizeObserverHandler","MindmapContainer","_EBlockContainer","_parentNode","_env","_resizeObServer","innerHTML","svgElement","$scale","style","overflow","parentNodePosition","getComputedStyle","position","env","ResizeObserver","observe","clientWidth","clientHeight","insertBefore","_rect","svgNode","scale","viewBox","baseVal","x","concat","y","_deltaX","_deltaY","viewX","viewY","viewBottom","viewRight","_this$stageContainer$","getBBox","_entries","contentRect","_this$env","_this$env2","disconnect","_EBlockContainer$DomE","_this3","$mousedownTimeStamp","timeStamp","$mouseEventX","$mouseEventY","deltaTime","deltaX","Math","abs","MAX_VALUE","deltaY","containerNode","triggerContentType","composedPath","hasAttribute","eventTarget","handleDomEvent","eventName","eventDetail","originEvent","preventDefault","stopPropagation","createDomEvent","_err","_arrayLikeToArray","arr","len","arr2","_toConsumableArray","isArray","arrayLikeToArray","arrayWithoutHoles","iter","from","iterableToArray","minLen","n","test","unsupportedIterableToArray","nonIterableSpread","FOCUS_ATTR_KEY","CHILDREN_GROUP_NODE","TOPIC_LEVEL","TOPIC_DIRECTION","TOPIC_FOLD","TitleMeasureCanvasMap","Topic","_level","_classPrivateMethodInitSpec","_splitTitleText","_renderTopic","_renderTopicExtensions","_loadImageInStorage","_changeLevel","_drawChildConnectLine","_locateChild","_balanceChildListPosition","_calculatePositionAsLeftChild","_calculatePositionAsRightChild","_getChildrenNods","_getMindRootNode","_topicContentNode","$env","topicContentNode","childrenGroupNode","children","nextLevel","invalidID","parentChildrenGroupNode","childrenNodes","_classPrivateMethodGet","_getChildrenNods2","getFirstChildTopic","_getMindRootNode2","map","enumerateChilrenTopics","count","idx","child","enumerateDescendantTopics","_context3","enumerateTopics","_context4","delegateYield","siblingNode","nextSibling","topic","previousSibling","_id","String","getTopicByID","_removeID","_step","_iterator","_createForOfIteratorHelper","s","childTopic","exportTopicData","f","storageNode","ownerSVGElement","rootNode","nodeList","enumerateImageInStorage","_iterator2","_step2","imageNode","_context5","$width","$height","sourceURL","sourceHRef","finish","t1","_classPrivateFieldGet2","topicWidth","topicHeight","topicCTM","getCTM","topicX","topicY","d","_ref2","viewWidth","viewHeight","parseInt","notify","showNodeInSvgView","_limitLevel","_direction","_data$image","curLevel","topicContentComputedStyles","suitableLineWidth","max","customWidth","exec","maxWidth","titleNode","_step3","tspanList","_iterator3","_splitTitleText2","title","titleLine","tspan","createElementNS","append","titleWidth","titleHeight","_titleNode$getBBox","extendsNode","titleTop","topicImageNode","extendsWidth","extendsHeight","imageWidth","imageHeight","imageRes","translateHRefToURL","_loadImageInStorage2","centerPadding","titleAndExtendWidth","boxNode","boxWidth","contentWidth","boxHeight","contentHeight","topicBoxRefID","setProperty","isFold","isNaN","topicFoldNode","foldWidth","foldHeight","limitLevel","direction","isConnected","dirIndexThresold","rightPriority","toLowerCase","index","level","leftContext","itemList","listHeight","rightContext","_calculatePositionAsRightChild2","_locateChild2","centerY","_drawChildConnectLine2","_calculatePositionAsLeftChild2","childrenTop","childrenHeight","_ref","rootTopic","_renderTopic2","getFocusTopic","removeAttribute","_resultForChecked","oriFocus","getFocus","killFocus","_nextSiblingTopic","_forbitNotify","newTopic","parentTopic","_newVal","originValue","_parentTopic","originParent","originSibling","nextSiblingTopic","connectLineNode","_changeLevel2","_rootChecker","rndCode","random","_step4","_iterator4","descendant","parent","rect","getBoundingClientRect","DOMRect","box","SVGGraphicsElement","ctm","getScreenCTM","bbox","svgCTM","inverse","translate","DOMMatrix","pt","et","display","lineNode","_extensionName","ret","nodes","extension","hasFocus","srcSVG","cloneSVG","stage","_this$$assignedNode$g","fontSize","cloneTopicNode","transform","XMLSerializer","serializeToString","getImageData","encodeURIComponent","setFocus","_eventDetail","extensionInstance","getExtensionInstance","editable","showInView","buttons","dragContext","dragable","sourceTopic","draging","Date","now","config","prepareDragTipElements","visible","clearDragContext","clearDragoverTimer","dragoverTopic","dragoverTimer","setTimeout","updateDragTipElements","enumerateReferenceResource","extResList","_iterator5","_step5","_iterator6","_step6","subTopicData","_context6","extensionFactors","extFactor","extRes","t2","_nodeOrTopic","SVGSVGElement","SVGElement","focusNode","_unused","_y","b","c","_svg","topicRect","viewRect","top","bottom","left","right","_ref3","ctp","convertWindowPointToGraphic","getMindRootNode","itemNode","itemOffsetY","itemHeight","startX","endX","endY","_classPrivateFieldGet3","itemContentOffsetX","itemContentWidth","_leftContext","_rightContext","delta","_childrenGroupNode","_centerY","midX","_newLevel","_width","_height","symbolNode","insertAdjacentHTML","imgRet","_context9","_extGroupNode","_this4","_key2","hasExtensions","maxHeight","_title","_textNode","_maxWidth","trim","_this5","context2d","_canvas","textStyles","font","spaceWidth","measureText","split","textLen","_context2d$measureTex","titleWords","_context2d$measureTex2","text","cacheText","cacheWidth","word","subTotalText","subTotalWidth","subTotalLen","subPos","subText","substring","subWidth","functionWithBindMap","_func","binding","deleteBinding","NormalizeDialogBubbleRaiseEdgeValues","calcDialogBubbleRaiseDashArray","_total","_cornerRadius","_raiseOffset","_raiseBase","middle","dash1","dash2","registerInstanceEventHandler","_eventTarget","handler","installed","$installed","Set","getOwnPropertyNames","startsWith","unregisterInstanceEventHandler","_handler","getEventPointInGraphic","svgRect","targetMatrix","clientX","clientY","clearDragTipElements","_dragContext","dragStubNode","dragLine","_mouseEvent","MouseEvent","$x","$y","startRect","getGraphicRect","clearTimeout","onDomMouseMoveForDrag","onDomMouseUpForDrag","sibling","destPoint","destParent","firstChildTopic","siblingPoint","destParentRect","directionThreshold","toRight","matchDirection","siblingRect","moveTo","focus","onDomKeyDownForDrag","TopicFactor","DOMParser","parseFromString","contentNode","size","MindmapDocument","_attachments","_sheets","_eventHandler","_dirty","_newDocument","_index","sheet","_syncCurrentView","getSheetByID","synchronizeSheetWithView","enumerateSheet","keys","oriSheet","splice","DefaultSheetTemplate","addSheet","_newSheet","sheets","attachments","_step$value","sheetID","topicData","hasAttachment","setAttachment","enumerateAttachment","Blob","$url","URL","revokeObjectURL","removeAttachment","referencedSet","xapPrefix","xapLen","_args4","clearAttachment","_keepWorkState","_toBlob","option","url","createObjectURL","resource","SymbolCustomPropsLog","MindmapViewer","_MindmapContainer","_doc","_sheetID","_uiCtrlContext","mouseleft","arrowright","arrowleft","arrowup","arrowdown","f2","tab","enter","home","syncConfig","doc","dispose","focusTopic","createChild","DefaultTopicTemplate","_triggerContentType","newFocus","previousSiblingTopic","drop","_this$rootTopic","keepWorkState","svg","nodeItem","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","snapshotItem","JSON","parse","removeProperty","propNames","entries","replace","toLocaleLowerCase","exportImage","showInCenterOfView","eventParam","collectImageStorage","dispatchControlMapAction","mapItem","WheelEvent","move","uiCtrlContext","cursor","by","deltaZ","min","zoomDelta","_dir","isRight","gotoChildrenTopic","gotoParentTopic","_keepCase","mapKey","UIEvent","ctrlKey","altKey","shiftKey","metaKey","KeyboardEvent","toLocaleUpperCase","contentConfig","_instance","_prefixCb","getContrlMapKey","UIControlMap","CreateTopicExtensionFactor","_templateXML","_parseType","_rootSelector","DefaultTopicExtensions","setupBackground","_bgNode","generatorCfg","generator","MindmapAddinPanel","backgroundGenerator","classList","unspecialLayout","dispacthLayout","prepareCurrentContext","_val1","_val2","margin","bgNode","layoutType","layout","InstanceMap","_content","_this7","singletonStamp","singletonNode","singleton","singletonMutex","close","rootAttrs","onBeforeRender","onAfterRender","relayout","onClick","eventMapKey","onDoubleClick","onKeydown","_this6","nodeName","onFilter","contentType","filterCode","onFilterMouseDown","onFilterMouseUp","onClose","onBeforeLayout","onAfterLayout","onInitialize","DefaultBackgroundStyle","setAttrStyleForNode","attrs","pickFile","_fileType","resoleve","inputElement","accept","files","click","line","subContext","lineHeight","itemWidth","row","rightNodes","nodeWidth","dialogBubble","_opt2","SVGPathElement","_raiseHeight","_raiseEbge","includes","path","dash","generateDialogBubblePath","cornerRadius","raiseHeight","raiseBase","raiseOffset","raiseEdge","roundRect","SVGRectElement","auto","_auto","_x5","_x6","attrOpt","background","TopicHRefEditPanelOptions","inputNode","select","panelBox","topicBox","browser","file","newValue","changeData","changeTopicImage","_changeTopicImage","suitableWidth","imageObj","getRect","_TopicImageEditAction","_callee3","force","createLabelItemUI","_label","gNode","TopicLabelsEditPanelOptions","labels","listContainer","onInputKeydown","label","EmptyInitialContent","opsAttrNodeMap","tag","formatter","_attrs","color","TextContentReplaceMap","textContentReplacement","_src","opsPTagMap","bullet","prefix","suffix","ordered","showOpsContent","ptagStack","paragraphSet","paragraph","ops","attributes","insert","closeNodes","$type","list","nodeTag","nodeClass","nodeStyle","unshift","pop","ptag","htmlStyleNodeMap","showHtmlContent","content","paragraphs","spans","span","_span","styleProps","properties","insertHtmlContentSpan","showContent","_notes","html","plain","showPlainText","serializeNoteFromNodeAsParagraphs","_paragraphSet","_paragraph","_attr","normalize","childNodes","subNode","HTMLBRElement","childElementCount","nodeType","TEXT_NODE","attr","HTMLParagraphElement","HTMLLIElement","HTMLUListElement","HTMLOListElement","HTMLSpanElement","newAttr","HTMLElement","bold","italic","underline","serializeNoteHtmlFromParagraphs","serializeNoteFromNode","simpleLines","NormalizeFlag","NoteNodeNormalizeMap","u","ul","ol","li","br","h1","h2","h3","h4","h5","h6","div","noteNodeNormalize","ELEMENT_NODE","newNode","namespaceURI","retNode","createTextNode","normalizeNoteNodeAsSimpleText","Element","textNode","filterPaste","clipboardData","getData","newNodes","body","newItem","wholeText","outerHTML","execCommand","TopicNotesEditorPanelOptions","editorNode","onPaste","notes","setBold","setItalic","setUnderline","setUnorderList","setOrderList","oriValue","TopicNotesTriggerAction","TopicPriorityEditPanelOptions","priority","selectPriority","deletePriority","TopicTaskMarkerEditPanelOptions","taskMarker","selectTaskMarker","deleteTaskMarker","TopicTitleEditorPanelOptions","mainNode","onSubmit","onBlur","borderRadius","boxRect","titleRect","titleNodeStyle","DefaultTopicEventActions","edit","trigger","triggerNode","toolbarNode","_triggerNode","_toolbarNode","resetSizingBox","imageRect","cancelSizing","sizingContext","onBrowser","onDelete","exitImageTrigger","sizingProgress","_triggerNode$ownerSVG","oriWidth","dx","oriHeight","startY","dy","oriX","oriY","startSizing","sizingNodeMap","matches","startCTM","submitSizing","filterClick","waitEscKey","filteOtherTrigger","clearDomEnv","btnNode","_topic$env$config","once","initTriggerUI","setupTopicImageTrigger","activeLink"],"mappings":"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"}